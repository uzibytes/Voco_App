{"version":3,"file":"firebase-firestore-lite.js","sources":["../util/src/crypt.ts","../util/src/errors.ts","../util/src/compat.ts","../logger/src/logger.ts","../firestore/dist/lite/index.browser.esm2017.js","../util/src/emulator.ts","../component/src/component.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, createMockUserToken as a, getModularInstance as h } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass l {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ l.UNAUTHENTICATED = new l(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), \nl.MOCK_USER = new l(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet f = \"9.9.3\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst d = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function w(t) {\n    d.setLogLevel(t);\n}\n\nfunction m(t, ...e) {\n    if (d.logLevel <= u.DEBUG) {\n        const n = e.map(_);\n        d.debug(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\nfunction p(t, ...e) {\n    if (d.logLevel <= u.ERROR) {\n        const n = e.map(_);\n        d.error(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function y(t, ...e) {\n    if (d.logLevel <= u.WARN) {\n        const n = e.map(_);\n        d.warn(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function _(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function g(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${f}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw p(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function v(t, e) {\n    t || g();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function b(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const E = \"ok\", T = \"cancelled\", I = \"unknown\", A = \"invalid-argument\", R = \"deadline-exceeded\", P = \"not-found\", V = \"already-exists\", N = \"permission-denied\", D = \"unauthenticated\", $ = \"resource-exhausted\", x = \"failed-precondition\", F = \"aborted\", S = \"out-of-range\", q = \"unimplemented\", O = \"internal\", k = \"unavailable\", C = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class L extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class M {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class U {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class j {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(l.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class B {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class z {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (v(\"string\" == typeof t.accessToken), \n        new U(t.accessToken, new l(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = l.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        v(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class W {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(l.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass K {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class Q {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (v(\"string\" == typeof t.token), \n        new K(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Y {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass H {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new H(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof H && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass J {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && g(), void 0 === n ? n = t.length - e : n > t.length - e && g(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === J.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof J ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class X extends J {\n    construct(t, e, n) {\n        return new X(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new L(A, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new X(e);\n    }\n    static emptyPath() {\n        return new X([]);\n    }\n}\n\nconst Z = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class tt extends J {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return Z.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        tt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new tt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new L(A, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new L(A, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new L(A, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new L(A, \"Unterminated ` in path: \" + t);\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class et {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new et(X.fromString(t));\n    }\n    static fromName(t) {\n        return new et(X.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new et(X.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === X.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return X.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new et(new X(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function nt(t, e, n) {\n    if (!n) throw new L(A, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction rt(t) {\n    if (!et.isDocumentKey(t)) throw new L(A, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function st(t) {\n    if (et.isDocumentKey(t)) throw new L(A, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction it(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction ot(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new L(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = it(t);\n            throw new L(A, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction ut(t, e) {\n    if (e <= 0) throw new L(A, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ct(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function at(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ht = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar lt, ft;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction dt(t) {\n    if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), I;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return E;\n\n      case 400:\n        // Bad Request\n        return x;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return D;\n\n      case 403:\n        // Forbidden\n        return N;\n\n      case 404:\n        // Not Found\n        return P;\n\n      case 409:\n        // Conflict\n        return F;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return S;\n\n      case 429:\n        // Too Many Requests\n        return $;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return I;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return q;\n\n      case 503:\n        // Service Unavailable\n        return k;\n\n      case 504:\n        // Gateway Timeout\n        return R;\n\n      default:\n        return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? x : t >= 500 && t < 600 ? O : I;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (ft = lt || (lt = {}))[ft.OK = 0] = \"OK\", ft[ft.CANCELLED = 1] = \"CANCELLED\", \nft[ft.UNKNOWN = 2] = \"UNKNOWN\", ft[ft.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nft[ft.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ft[ft.NOT_FOUND = 5] = \"NOT_FOUND\", \nft[ft.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ft[ft.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nft[ft.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ft[ft.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nft[ft.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ft[ft.ABORTED = 10] = \"ABORTED\", \nft[ft.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ft[ft.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nft[ft.INTERNAL = 13] = \"INTERNAL\", ft[ft.UNAVAILABLE = 14] = \"UNAVAILABLE\", ft[ft.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass wt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    v(t, e, n, r, s) {\n        const i = this.T(t, e);\n        m(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.I(o, r, s), this.A(t, i, o, n).then((t => (m(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw y(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    R(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.v(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    I(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ht[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.P = e;\n    }\n    V(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async A(t, e, n, r) {\n        const s = JSON.stringify(r);\n        let i;\n        try {\n            i = await this.P(e, {\n                method: \"POST\",\n                headers: n,\n                body: s\n            });\n        } catch (t) {\n            throw new L(dt(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!i.ok) throw new L(dt(i.status), \"Request failed with error: \" + i.statusText);\n        return i.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction mt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class pt {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = mt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction yt(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function _t(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass gt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new L(A, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new L(A, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return gt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return gt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new gt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? yt(this.nanoseconds, t.nanoseconds) : yt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class vt {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new vt(t);\n    }\n    static min() {\n        return new vt(new gt(0, 0));\n    }\n    static max() {\n        return new vt(new gt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass Tt {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || At.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new Tt(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, At.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new Tt(this.comparator, this.root.remove(t, this.comparator).copy(null, null, At.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new It(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new It(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new It(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new It(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass It {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass At {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : At.RED, this.left = null != r ? r : At.EMPTY, \n        this.right = null != s ? s : At.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new At(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return At.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return At.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, At.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, At.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw g();\n        if (this.right.isRed()) throw g();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw g();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nAt.EMPTY = null, At.RED = !0, At.BLACK = !1;\n\n// end LLRBEmptyNode\nAt.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw g();\n    }\n    get value() {\n        throw g();\n    }\n    get color() {\n        throw g();\n    }\n    get left() {\n        throw g();\n    }\n    get right() {\n        throw g();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new At(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass Rt {\n    constructor(t) {\n        this.comparator = t, this.data = new Tt(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new Pt(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new Pt(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof Rt)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new Rt(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass Pt {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class Vt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(tt.comparator);\n    }\n    static empty() {\n        return new Vt([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new Rt(tt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new Vt(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return _t(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Nt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new Nt(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Nt(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return yt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nNt.EMPTY_BYTE_STRING = new Nt(\"\");\n\nconst Dt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function $t(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (v(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Dt.exec(t);\n        if (v(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: xt(t.seconds),\n        nanos: xt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function xt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Ft(t) {\n    return \"string\" == typeof t ? Nt.fromBase64String(t) : Nt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function St(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function qt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return St(e) ? qt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Ot(t) {\n    const e = $t(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new gt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const kt = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Ct(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? St(t) ? 4 /* ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ (t) ? 9007199254740991 /* MaxValue */ : 10 /* ObjectValue */ : g();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Lt(t, e) {\n    if (t === e) return !0;\n    const n = Ct(t);\n    if (n !== Ct(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return Ot(t).isEqual(Ot(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = $t(t.timestampValue), r = $t(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return Ft(t.bytesValue).isEqual(Ft(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return xt(t.geoPointValue.latitude) === xt(e.geoPointValue.latitude) && xt(t.geoPointValue.longitude) === xt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return xt(t.integerValue) === xt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = xt(t.doubleValue), r = xt(e.doubleValue);\n                return n === r ? at(n) === at(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return _t(t.arrayValue.values || [], e.arrayValue.values || [], Lt);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Lt(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return g();\n    }\n}\n\nfunction Mt(t, e) {\n    return void 0 !== (t.values || []).find((t => Lt(t, e)));\n}\n\nfunction Ut(t, e) {\n    if (t === e) return 0;\n    const n = Ct(t), r = Ct(e);\n    if (n !== r) return yt(n, r);\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return yt(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = xt(t.integerValue || t.doubleValue), r = xt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return jt(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return jt(Ot(t), Ot(e));\n\n      case 5 /* StringValue */ :\n        return yt(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = Ft(t), r = Ft(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = yt(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = yt(xt(t.latitude), xt(e.latitude));\n            if (0 !== n) return n;\n            return yt(xt(t.longitude), xt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ut(n[t], r[t]);\n                if (e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            if (t === kt && e === kt) return 0;\n            if (t === kt) return 1;\n            if (e === kt) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = yt(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ut(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return yt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw g();\n    }\n}\n\nfunction jt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return yt(t, e);\n    const n = $t(t), r = $t(e), s = yt(n.seconds, r.seconds);\n    return 0 !== s ? s : yt(n.nanos, r.nanos);\n}\n\nfunction Bt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function zt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Gt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Wt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Kt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Qt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Qt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Qt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Yt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new Yt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Kt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Qt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = tt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Qt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Kt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Lt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Kt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new Yt(Qt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class Ht {\n    constructor(t, e, n, r, s, i) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, \n        this.documentState = i;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new Ht(t, 0 /* INVALID */ , vt.min(), vt.min(), Yt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new Ht(t, 1 /* FOUND_DOCUMENT */ , e, vt.min(), n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new Ht(t, 2 /* NO_DOCUMENT */ , e, vt.min(), Yt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new Ht(t, 3 /* UNKNOWN_DOCUMENT */ , e, vt.min(), Yt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Yt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Yt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this.version = vt.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof Ht && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new Ht(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Jt {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.D = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Xt(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new Jt(t, e, n, r, s, i, o);\n}\n\nclass Zt extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.$(t, e, n) : new te(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new se(t, n) : \"in\" /* IN */ === e ? new ie(t, n) : \"not-in\" /* NOT_IN */ === e ? new oe(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new ue(t, n) : new Zt(t, e, n);\n    }\n    static $(t, e, n) {\n        return \"in\" /* IN */ === e ? new ee(t, n) : new ne(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.F(Ut(e, this.value)) : null !== e && Ct(this.value) === Ct(e) && this.F(Ut(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    F(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return g();\n        }\n    }\n    S() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass te extends Zt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = et.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = et.comparator(t.key, this.key);\n        return this.F(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class ee extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = re(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class ne extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = re(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction re(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => et.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class se extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return zt(e) && Mt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ie extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Mt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class oe extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Mt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Mt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ue extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!zt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Mt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class ce {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class ae {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction he(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction le(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Lt(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class fe {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function de(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction we(t) {\n    for (const e of t.filters) if (e.S()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction me(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function pe(t) {\n    const e = b(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = we(e), n = de(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new ae(t)), e.q.push(new ae(tt.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.q.push(new ae(tt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function ye(t) {\n    const e = b(t);\n    if (!e.O) if (\"F\" /* First */ === e.limitType) e.O = Xt(e.path, e.collectionGroup, pe(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of pe(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new ae(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new ce(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new ce(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = Xt(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction _e(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!he(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], \n        n.op !== r.op || !n.field.isEqual(r.field) || !Lt(n.value, r.value)) return !1;\n        var n, r;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!le(t.startAt, e.startAt) && le(t.endAt, e.endAt);\n    }(ye(t), ye(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction ge(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.k) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: at(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class ve {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class be extends ve {}\n\n/** Transforms an array value via a union operation. */ class Ee extends ve {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class Te extends ve {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ie extends ve {\n    constructor(t, e) {\n        super(), this.C = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class Ae {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Re {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Re;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Re(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Re(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Pe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Ve extends Pe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Ne extends Pe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class De extends Pe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class $e extends Pe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const xe = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Fe = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Se {\n    constructor(t, e) {\n        this.databaseId = t, this.k = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction qe(t, e) {\n    if (t.k) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Oe(t, e) {\n    return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction ke(t, e) {\n    return qe(t, e.toTimestamp());\n}\n\nfunction Ce(t) {\n    return v(!!t), vt.fromTimestamp(function(t) {\n        const e = $t(t);\n        return new gt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Le(t, e) {\n    return function(t) {\n        return new X([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Me(t, e) {\n    return Le(t.databaseId, e.path);\n}\n\nfunction Ue(t, e) {\n    const n = function(t) {\n        const e = X.fromString(t);\n        return v(Xe(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new L(A, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new L(A, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new et((v((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction je(t, e) {\n    return Le(t.databaseId, e);\n}\n\nfunction Be(t) {\n    return new X([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction ze(t, e, n) {\n    return {\n        name: Me(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Ge(t, e) {\n    return \"found\" in e ? function(t, e) {\n        v(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ue(t, e.found.name), r = Ce(e.found.updateTime), s = new Yt({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return Ht.newFoundDocument(n, r, s);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        v(!!e.missing), v(!!e.readTime);\n        const n = Ue(t, e.missing), r = Ce(e.readTime);\n        return Ht.newNoDocument(n, r);\n    }(t, e) : g();\n}\n\nfunction We(t, e) {\n    let n;\n    if (e instanceof Ve) n = {\n        update: ze(t, e.key, e.value)\n    }; else if (e instanceof De) n = {\n        delete: Me(t, e.key)\n    }; else if (e instanceof Ne) n = {\n        update: ze(t, e.key, e.data),\n        updateMask: Je(e.fieldMask)\n    }; else {\n        if (!(e instanceof $e)) return g();\n        n = {\n            verify: Me(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof be) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ee) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Te) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ie) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.L\n        };\n        throw g();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: ke(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : g();\n    }(t, e.precondition)), n;\n}\n\nfunction Ke(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = je(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = je(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Gt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Gt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: He(t.field),\n                    op: Ye(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: He(t.field),\n                direction: Qe(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.k || ct(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction Qe(t) {\n    return xe[t];\n}\n\n// visible for testing\nfunction Ye(t) {\n    return Fe[t];\n}\n\nfunction He(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Je(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction Xe(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Ze(t) {\n    return new Se(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass tn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.G = 0, this.W = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.K = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.G = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Y() {\n        this.G = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    H(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.G + this.J()), n = Math.max(0, Date.now() - this.K), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && m(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.G} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.W = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.K = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.G *= this.j, this.G < this.U && (this.G = this.U), this.G > this.B && (this.G = this.B);\n    }\n    X() {\n        null !== this.W && (this.W.skipDelay(), this.W = null);\n    }\n    cancel() {\n        null !== this.W && (this.W.cancel(), this.W = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    J() {\n        return (Math.random() - .5) * this.G;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass en extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.Z = n, this.C = r, \n        this.tt = !1;\n    }\n    et() {\n        if (this.tt) throw new L(x, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    v(t, e, n) {\n        return this.et(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.Z.v(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    R(t, e, n, r) {\n        return this.et(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.Z.R(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n        }));\n    }\n    terminate() {\n        this.tt = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function nn(t, e) {\n    const n = b(t), r = Be(n.C) + \"/documents\", s = {\n        writes: e.map((t => We(n.C, t)))\n    };\n    await n.v(\"Commit\", r, s);\n}\n\nasync function rn(t, e) {\n    const n = b(t), r = Be(n.C) + \"/documents\", s = {\n        documents: e.map((t => Me(n.C, t)))\n    }, i = await n.R(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Ge(n.C, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        v(!!e), u.push(e);\n    })), u;\n}\n\nasync function sn(t, e) {\n    const n = b(t), r = Ke(n.C, ye(e));\n    return (await n.R(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ue(t, e.name), s = Ce(e.updateTime), i = new Yt({\n            mapValue: {\n                fields: e.fields\n            }\n        }), o = Ht.newFoundDocument(r, s, i);\n        return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n    }(n.C, t.document, void 0)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const on = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction un(t) {\n    if (t._terminated) throw new L(x, \"The client has already been terminated.\");\n    if (!on.has(t)) {\n        m(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new wt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new Y(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = Ze(t._databaseId), u = function(t, e, n, r) {\n            return new en(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        on.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return on.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass cn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new L(A, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new L(A, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new L(A, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */ class an {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._authCredentials = e, this._appCheckCredentials = n, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new cn({}), \n        this._settingsFrozen = !1, t instanceof H ? this._databaseId = t : (this._app = t, \n        this._databaseId = function(t) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new L(A, '\"projectId\" not provided in firebase.initializeApp.');\n            return new H(t.options.projectId);\n        }\n        /**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link getFirestore}. If the custom settings are empty, this function is\n * equivalent to calling {@link getFirestore}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @returns A newly initialized `Firestore` instance.\n */ (t));\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new L(x, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new L(x, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new cn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new j;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new W(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new L(A, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = on.get(t);\n            e && (m(\"ComponentProvider\", \"Removing Datastore\"), on.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction hn(t, e) {\n    const n = _getProvider(t, \"firestore/lite\");\n    if (n.isInitialized()) throw new L(x, \"Firestore can only be initialized once per app.\");\n    return n.initialize({\n        options: e\n    });\n}\n\n/**\n * Returns the existing `Firestore` instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned `Firestore`\n * instance is associated with.\n * @returns The `Firestore` instance of the provided app.\n */ function ln(e = t()) {\n    return _getProvider(e, \"firestore/lite\").getImmediate();\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function fn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ot(t, an))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = l.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = a(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new L(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new l(i);\n        }\n        t._authCredentials = new B(new U(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function dn(t) {\n    return t = ot(t, an), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass wn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new pn(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new wn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class mn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new mn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class pn extends mn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new fe(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new wn(this.firestore, \n        /* converter= */ null, new et(t));\n    }\n    withConverter(t) {\n        return new pn(this.firestore, t, this._path);\n    }\n}\n\nfunction yn(t, e, ...n) {\n    if (t = h(t), nt(\"collection\", \"path\", e), t instanceof an) {\n        const r = X.fromString(e, ...n);\n        return st(r), new pn(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return st(r), new pn(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function _n(t, e) {\n    if (t = ot(t, an), nt(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new L(A, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new mn(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new fe(X.emptyPath(), t);\n    }(e));\n}\n\nfunction gn(t, e, ...n) {\n    if (t = h(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = pt.N()), nt(\"doc\", \"path\", e), t instanceof an) {\n        const r = X.fromString(e, ...n);\n        return rt(r), new wn(t, \n        /* converter= */ null, new et(r));\n    }\n    {\n        if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return rt(r), new wn(t.firestore, t instanceof pn ? t.converter : null, new et(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function vn(t, e) {\n    return t = h(t), e = h(e), (t instanceof wn || t instanceof pn) && (e instanceof wn || e instanceof pn) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function bn(t, e) {\n    return t = h(t), e = h(e), t instanceof mn && e instanceof mn && (t.firestore === e.firestore && _e(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class En {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new L(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new tt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Tn() {\n    return new En(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class In {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new In(Nt.fromBase64String(t));\n        } catch (t) {\n            throw new L(A, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new In(Nt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class An {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Rn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new L(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new L(A, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return yt(this._lat, t._lat) || yt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Pn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Vn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Ve(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Nn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Dn(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw g();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class $n {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.nt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get rt() {\n        return this.settings.rt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    st(t) {\n        return new $n(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    it(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.st({\n            path: n,\n            ot: !1\n        });\n        return r.ut(t), r;\n    }\n    ct(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.st({\n            path: n,\n            ot: !1\n        });\n        return r.nt(), r;\n    }\n    at(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.st({\n            path: void 0,\n            ot: !0\n        });\n    }\n    ht(t) {\n        return Jn(t, this.settings.methodName, this.settings.lt || !1, this.path, this.settings.ft);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    nt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ut(this.path.get(t));\n    }\n    ut(t) {\n        if (0 === t.length) throw this.ht(\"Document fields must not be empty\");\n        if (Dn(this.rt) && Pn.test(t)) throw this.ht('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class xn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || Ze(t);\n    }\n    /** Creates a new top-level parse context. */    dt(t, e, n, r = !1) {\n        return new $n({\n            rt: t,\n            methodName: e,\n            ft: n,\n            path: tt.emptyPath(),\n            ot: !1,\n            lt: r\n        }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Fn(t) {\n    const e = t._freezeSettings(), n = Ze(t._databaseId);\n    return new xn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Sn(t, e, n, r, s, i = {}) {\n    const o = t.dt(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, s);\n    Kn(\"Data must be an object, but it was:\", o, r);\n    const u = Gn(r, o);\n    let c, a;\n    if (i.merge) c = new Vt(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = Qn(e, r, n);\n            if (!o.contains(s)) throw new L(A, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            Xn(t, s) || t.push(s);\n        }\n        c = new Vt(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Vn(new Yt(u), c, a);\n}\n\nclass qn extends An {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.rt) throw 1 /* Update */ === t.rt ? t.ht(`${this._methodName}() can only appear at the top level of your update data`) : t.ht(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof qn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function On(t, e, n) {\n    return new $n({\n        rt: 3 /* Argument */ ,\n        ft: e.settings.ft,\n        methodName: t._methodName,\n        ot: n\n    }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass kn extends An {\n    _toFieldTransform(t) {\n        return new Ae(t.path, new be);\n    }\n    isEqual(t) {\n        return t instanceof kn;\n    }\n}\n\nclass Cn extends An {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = On(this, t, \n        /*array=*/ !0), n = this.wt.map((t => zn(t, e))), r = new Ee(n);\n        return new Ae(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Ln extends An {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = On(this, t, \n        /*array=*/ !0), n = this.wt.map((t => zn(t, e))), r = new Te(n);\n        return new Ae(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Mn extends An {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ie(t.C, ge(t.C, this.yt));\n        return new Ae(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function Un(t, e, n, r) {\n    const s = t.dt(1 /* Update */ , e, n);\n    Kn(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = Yt.empty();\n    Et(r, ((t, r) => {\n        const u = Hn(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = h(r);\n        const c = s.ct(u);\n        if (r instanceof qn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = zn(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new Vt(i);\n    return new Nn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function jn(t, e, n, r, s, i) {\n    const o = t.dt(1 /* Update */ , e, n), u = [ Qn(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new L(A, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(Qn(e, i[t])), c.push(i[t + 1]);\n    const a = [], l = Yt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!Xn(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = h(n);\n        const r = o.ct(e);\n        if (n instanceof qn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = zn(n, r);\n            null != t && (a.push(e), l.set(e, t));\n        }\n    }\n    const f = new Vt(a);\n    return new Nn(l, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function Bn(t, e, n, r = !1) {\n    return zn(n, t.dt(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function zn(t, e) {\n    if (Wn(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = h(t))) return Kn(\"Unsupported field value:\", e, t), Gn(t, e);\n    if (t instanceof An) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Dn(e.rt)) throw e.ht(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ht(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ot && 4 /* ArrayArgument */ !== e.rt) throw e.ht(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = zn(s, e.at(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = h(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return ge(e.C, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = gt.fromDate(t);\n            return {\n                timestampValue: qe(e.C, n)\n            };\n        }\n        if (t instanceof gt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new gt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: qe(e.C, n)\n            };\n        }\n        if (t instanceof Rn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof In) return {\n            bytesValue: Oe(e.C, t._byteString)\n        };\n        if (t instanceof wn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ht(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Le(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ht(`Unsupported field value: ${it(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction Gn(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Et(t, ((t, r) => {\n        const s = zn(r, e.it(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction Wn(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof gt || t instanceof Rn || t instanceof In || t instanceof wn || t instanceof An);\n}\n\nfunction Kn(t, e, n) {\n    if (!Wn(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = it(n);\n        throw \"an object\" === r ? e.ht(t + \" a custom object\") : e.ht(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function Qn(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = h(e)) instanceof En) return e._internalPath;\n    if (\"string\" == typeof e) return Hn(t, e);\n    throw Jn(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const Yn = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function Hn(t, e, n) {\n    if (e.search(Yn) >= 0) throw Jn(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new En(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw Jn(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction Jn(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new L(A, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function Xn(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class Zn {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new wn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new tr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(rr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class tr extends Zn {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class er {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function nr(t, e) {\n    return t = h(t), e = h(e), t instanceof Zn && e instanceof Zn ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof er && e instanceof er && (bn(t.query, e.query) && _t(t.docs, e.docs, nr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function rr(t, e) {\n    return \"string\" == typeof e ? Hn(t, e) : e instanceof En ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass sr {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function ir(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass or extends sr {\n    constructor(t, e, n) {\n        super(), this._t = t, this.gt = e, this.vt = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = Fn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new L(A, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    br(o, i);\n                    const e = [];\n                    for (const n of o) e.push(vr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = vr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || br(o, i), \n            u = Bn(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = Zt.create(s, i, u);\n            return function(t, e) {\n                if (e.S()) {\n                    const n = we(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new L(A, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const r = de(t);\n                    null !== r && Er(t, e.field, r);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new L(A, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new L(A, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", e, t.firestore._databaseId, this._t, this.gt, this.vt);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function ur(t, e, n) {\n    const r = e, s = rr(\"where\", t);\n    return new or(s, r, n);\n}\n\nclass cr extends sr {\n    constructor(t, e) {\n        super(), this._t = t, this.bt = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new L(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new L(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new ae(e, n);\n            return function(t, e) {\n                if (null === de(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = we(t);\n                    null !== n && Er(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._t, this.bt);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new fe(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function ar(t, e = \"asc\") {\n    const n = e, r = rr(\"orderBy\", t);\n    return new cr(r, n);\n}\n\nclass hr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Et = e, this.Tt = n;\n    }\n    _apply(t) {\n        return new mn(t.firestore, t.converter, function(t, e, n) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this.Et, this.Tt));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function lr(t) {\n    return ut(\"limit\", t), new hr(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function fr(t) {\n    return ut(\"limitToLast\", t), new hr(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass dr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.It = e, this.At = n;\n    }\n    _apply(t) {\n        const e = gr(t, this.type, this.It, this.At);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction wr(...t) {\n    return new dr(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction mr(...t) {\n    return new dr(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\nclass pr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.It = e, this.At = n;\n    }\n    _apply(t) {\n        const e = gr(t, this.type, this.It, this.At);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction yr(...t) {\n    return new pr(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction _r(...t) {\n    return new pr(\"endAt\", t, /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function gr(t, e, n, r) {\n    if (n[0] = h(n[0]), n[0] instanceof Zn) return function(t, e, n, r, s) {\n        if (!r) throw new L(P, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of pe(t)) if (n.field.isKeyField()) i.push(Bt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (St(t)) throw new L(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new L(A, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new ce(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Fn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new L(A, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new L(A, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!me(t) && -1 !== c.indexOf(\"/\")) throw new L(A, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(X.fromString(c));\n                    if (!et.isDocumentKey(n)) throw new L(A, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new et(n);\n                    u.push(Bt(e, s));\n                } else {\n                    const t = Bn(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new ce(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction vr(t, e, n) {\n    if (\"string\" == typeof (n = h(n))) {\n        if (\"\" === n) throw new L(A, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!me(e) && -1 !== n.indexOf(\"/\")) throw new L(A, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(X.fromString(n));\n        if (!et.isDocumentKey(r)) throw new L(A, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Bt(t, new et(r));\n    }\n    if (n instanceof wn) return Bt(t, n._key);\n    throw new L(A, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${it(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function br(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new L(A, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new L(A, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction Er(t, e, n) {\n    if (!n.isEqual(e)) throw new L(A, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Tr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Ir extends class {\n    convertValue(t, e = \"none\") {\n        switch (Ct(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return xt(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(Ft(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw g();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Rn(xt(t.latitude), xt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = qt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Ot(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = $t(t);\n        return new gt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = X.fromString(t);\n        v(Xe(n));\n        const r = new H(n.get(1), n.get(3)), s = new et(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        p(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new In(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new wn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Ar(t) {\n    const e = un((t = ot(t, wn)).firestore), n = new Ir(t.firestore);\n    return rn(e, [ t._key ]).then((e => {\n        v(1 === e.length);\n        const r = e[0];\n        return new Zn(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Rr(t) {\n    !function(t) {\n        if (\"L\" /* Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new L(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ot(t, mn))._query);\n    const e = un(t.firestore), n = new Ir(t.firestore);\n    return sn(e, t._query).then((e => {\n        const r = e.map((e => new tr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new er(t, r);\n    }));\n}\n\nfunction Pr(t, e, n) {\n    const r = Tr((t = ot(t, wn)).converter, e, n), s = Sn(Fn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return nn(un(t.firestore), [ s.toMutation(t._key, Re.none()) ]);\n}\n\nfunction Vr(t, e, n, ...r) {\n    const s = Fn((t = ot(t, wn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(s, \"updateDoc\", t._key, e, n, r) : Un(s, \"updateDoc\", t._key, e);\n    return nn(un(t.firestore), [ i.toMutation(t._key, Re.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Nr(t) {\n    return nn(un((t = ot(t, wn)).firestore), [ new De(t._key, Re.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Dr(t, e) {\n    const n = gn(t = ot(t, pn)), r = Tr(t.converter, e), s = Sn(Fn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return nn(un(t.firestore), [ s.toMutation(n._key, Re.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function $r() {\n    return new qn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function xr() {\n    return new kn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Fr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Cn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Sr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Ln(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function qr(t) {\n    return new Mn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class Or {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Fn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = kr(t, this._firestore), s = Tr(r.converter, e, n), i = Sn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Re.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = kr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : Un(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Re.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = kr(t, this._firestore);\n        return this._mutations = this._mutations.concat(new De(e._key, Re.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new L(x, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction kr(t, e) {\n    if ((t = h(t)).firestore !== e) throw new L(A, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function Cr(t) {\n    const e = un(t = ot(t, an));\n    return new Or(t, (t => nn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class Lr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new L(A, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await rn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new De(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = et.fromPath(e);\n            this.mutations.push(new $e(n, this.precondition(n)));\n        })), await nn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw g();\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n            e = vt.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new L(F, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? Re.updateTime(e) : Re.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(vt.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new L(A, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Re.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Re.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mr = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass Ur {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.Rt = n.maxAttempts, this.Pt = new tn(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Rt -= 1, this.Vt();\n    }\n    Vt() {\n        this.Pt.H((async () => {\n            const t = new Lr(this.datastore), e = this.Nt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.Dt(t);\n                }))));\n            })).catch((t => {\n                this.Dt(t);\n            }));\n        }));\n    }\n    Nt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ct(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Dt(t) {\n        this.Rt > 0 && this.$t(t) ? (this.Rt -= 1, this.asyncQueue.enqueueAndForget((() => (this.Vt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    $t(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return g();\n\n                  case T:\n                  case I:\n                  case R:\n                  case $:\n                  case O:\n                  case k:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case D:\n                    return !1;\n\n                  case A:\n                  case P:\n                  case V:\n                  case N:\n                  case x:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case F:\n                  case S:\n                  case q:\n                  case C:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function jr() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class Br {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new M, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new Br(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new L(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class zr {\n    constructor() {\n        // The last promise in the queue.\n        this.xt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Ft = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.St = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.qt = [], \n        // visible for testing\n        this.Ot = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.kt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Ct = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Lt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.Pt = new tn(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Mt = () => {\n            const t = jr();\n            t && m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.Pt.X();\n        };\n        const t = jr();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Mt);\n    }\n    get isShuttingDown() {\n        return this.St;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ut(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.jt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.St) {\n            this.St = !0, this.Ct = t || !1;\n            const e = jr();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Mt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ut(), this.St) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new M;\n        return this.jt((() => this.St && this.Ct ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Ft.push(t), this.Bt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Bt() {\n        if (0 !== this.Ft.length) {\n            try {\n                await this.Ft[0](), this.Ft.shift(), this.Pt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                m(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Ft.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.Pt.H((() => this.Bt()));\n        }\n    }\n    jt(t) {\n        const e = this.xt.then((() => (this.kt = !0, t().catch((t => {\n            this.Ot = t, this.kt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw p(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.kt = !1, t))))));\n        return this.xt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ut(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Lt.indexOf(t) > -1 && (e = 0);\n        const r = Br.createAndSchedule(this, t, e, n, (t => this.zt(t)));\n        return this.qt.push(r), r;\n    }\n    Ut() {\n        this.Ot && g();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Gt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.xt, await t;\n        } while (t !== this.xt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Wt(t) {\n        for (const e of this.qt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Kt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Gt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.qt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.qt) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.Gt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Qt(t) {\n        this.Lt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    zt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.qt.indexOf(t);\n        this.qt.splice(e, 1);\n    }\n}\n\nclass Gr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Fn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = kr(t, this._firestore), n = new Ir(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return g();\n            const r = t[0];\n            if (r.isFoundDocument()) return new Zn(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new Zn(this._firestore, n, e._key, null, e.converter);\n            throw g();\n        }));\n    }\n    set(t, e, n) {\n        const r = kr(t, this._firestore), s = Tr(r.converter, e, n), i = Sn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = kr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : Un(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = kr(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function Wr(t, e, n) {\n    const r = un(t = ot(t, an)), s = Object.assign(Object.assign({}, Mr), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new L(A, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new M;\n    return new Ur(new zr, r, s, (n => e(new Gr(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    f = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {options: e}) => {\n    const n = t.getProvider(\"app\").getImmediate(), r = new an(n, new z(t.getProvider(\"auth-internal\")), new Q(t.getProvider(\"app-check-internal\")));\n    return e && r._setSettings(e), r;\n}), \"PUBLIC\")), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.4.14\", \"\"), r(\"firestore-lite\", \"3.4.14\", \"__BUILD_TARGET__\");\n\nexport { In as Bytes, pn as CollectionReference, wn as DocumentReference, Zn as DocumentSnapshot, En as FieldPath, An as FieldValue, an as Firestore, L as FirestoreError, Rn as GeoPoint, mn as Query, sr as QueryConstraint, tr as QueryDocumentSnapshot, er as QuerySnapshot, gt as Timestamp, Gr as Transaction, Or as WriteBatch, Dr as addDoc, Sr as arrayRemove, Fr as arrayUnion, yn as collection, _n as collectionGroup, fn as connectFirestoreEmulator, Nr as deleteDoc, $r as deleteField, gn as doc, Tn as documentId, _r as endAt, yr as endBefore, Ar as getDoc, Rr as getDocs, ln as getFirestore, qr as increment, hn as initializeFirestore, lr as limit, fr as limitToLast, ar as orderBy, ir as query, bn as queryEqual, vn as refEqual, Wr as runTransaction, xr as serverTimestamp, Pr as setDoc, w as setLogLevel, nr as snapshotEqual, mr as startAfter, wr as startAt, dn as terminate, Vr as updateDoc, ur as where, Cr as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n"],"names":["stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","FirebaseError","constructor","code","message","customData","super","name","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","PATTERN","_","key","value","replaceTemplate","fullMessage","getModularInstance","_delegate","LogLevel","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","info","INFO","warn","WARN","error","ERROR","silent","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","args","logLevel","now","Date","toISOString","method","console","l","t","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","f","d","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","log","w","m","e","n","map","y","JSON","stringify","g","v","b","T","I","A","R","P","N","D","$","x","F","S","q","O","k","L","toString","M","promise","Promise","resolve","reject","U","user","type","headers","Map","set","j","getToken","invalidateToken","start","enqueueRetryable","shutdown","B","token","changeListener","z","auth","onInit","then","accessToken","getUid","G","r","o","h","getAuthHeaderValueForFirstParty","W","K","Q","appCheck","Y","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","H","projectId","database","static","isDefaultDatabase","J","segments","offset","len","comparator","child","slice","limit","forEach","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","X","canonicalString","indexOf","split","filter","Z","tt","test","isValidIdentifier","isKeyField","et","path","fromString","emptyPath","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","nt","rt","isDocumentKey","st","it","substring","ot","ut","ct","at","ht","BatchGetDocuments","Commit","RunQuery","lt","ft","dt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","wt","databaseInfo","V","async","body","status","statusText","ok","json","mt","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","pt","yt","_t","every","gt","seconds","nanoseconds","fromMillis","getTime","toDate","toMillis","_compareTo","toJSON","valueOf","padStart","vt","timestamp","compareTo","toMicroseconds","toTimestamp","bt","hasOwnProperty","call","Et","Tt","root","At","EMPTY","insert","copy","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","It","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","Rt","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","Pt","add","delete","unionWith","iter","Vt","fields","sort","covers","Nt","binaryString","Symbol","iterator","next","done","toBase64","toUint8Array","approximateByteSize","EMPTY_BYTE_STRING","Dt","RegExp","$t","exec","substr","Number","nanos","xt","Ft","fromBase64String","fromUint8Array","St","mapValue","__type__","stringValue","qt","__previous_value__","Ot","__local_write_time__","timestampValue","kt","Ct","Lt","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","Mt","find","Ut","jt","keys","Bt","zt","Gt","Wt","Kt","Qt","assign","Yt","field","getFieldsMap","setAll","applyChanges","clone","Ht","documentType","version","readTime","documentState","empty","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","Jt","orderBy","filters","startAt","endAt","Xt","Zt","op","te","se","ie","oe","ue","ee","ne","matches","fromName","re","some","nullValue","ce","position","inclusive","ae","dir","he","le","fe","explicitOrderBy","limitType","de","we","me","pe","keyField","ye","ge","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","ve","be","Ee","elements","Te","Ie","C","Ae","transform","Re","updateTime","exists","isNone","Pe","Ve","precondition","fieldTransforms","getFieldMask","Ne","fieldMask","De","$e","xe","asc","desc","Fe","in","Se","qe","Oe","ke","Ce","fromTimestamp","Le","Me","Ue","Xe","je","Be","ze","Qe","Ye","He","fieldPath","Je","fieldPaths","Ze","tn","timerId","reset","cancel","max","enqueueAfterDelay","skipDelay","en","authCredentials","appCheckCredentials","all","catch","terminate","nn","writes","update","updateMask","verify","updateTransforms","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","We","rn","documents","found","newFoundDocument","missing","newNoDocument","Ge","sn","structuredQuery","parent","from","collectionId","allDescendants","unaryFilter","fieldFilter","compositeFilter","where","direction","before","Ke","document","on","un","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","cn","credentials","ignoreUndefinedProperties","cacheSizeBytes","an","_settings","_settingsFrozen","_app","apply","_initialized","_terminateTask","_setSettings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_delete","_terminate","settings","hn","_getProvider","isInitialized","initialize","ln","getImmediate","fn","mockUserToken","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","alg","a","dn","wn","converter","_key","firestore","_path","id","pn","withConverter","mn","_query","yn","_n","gn","arguments","vn","bn","_e","En","_internalPath","Tn","In","_byteString","An","_methodName","Rn","isFinite","_lat","_long","Pn","Vn","toMutation","Nn","Dn","$n","Jn","methodName","contains","xn","Fn","Sn","merge","mergeFields","Kn","Gn","Qn","Xn","qn","_toFieldTransform","On","kn","Cn","zn","Ln","Mn","Un","Hn","jn","Bn","Wn","fromDate","getPrototypeOf","Yn","search","Zn","_firestore","_userDataWriter","_document","_converter","ref","tr","fromFirestore","convertValue","rr","er","_docs","query","docs","nr","sr","ir","_apply","or","br","vr","Er","concat","ur","cr","ar","hr","lr","fr","dr","gr","wr","mr","pr","yr","_r","Tr","toFirestore","Ir","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","Ar","Rr","reverse","Pr","none","Vr","Nr","Dr","$r","xr","Fr","Sr","qr","Or","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","kr","commit","Cr","Lr","datastore","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","fromPath","Mr","maxAttempts","Ur","asyncQueue","updateFunction","deferred","run","enqueueAndForget","jr","Br","targetTimeMs","removalCallback","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","zr","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","shift","stack","includes","createAndSchedule","verifyOperationInProgress","splice","Gr","_transaction","lookup","Wr","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","callback","getProvider"],"mappings":"mJAiBA,MAAMA,EAAoB,SAAUC,GAElC,MAAMC,EAAgB,GACtB,IAAIC,EAAI,EACR,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAAK,CACnC,IAAIE,EAAIL,EAAIM,WAAWH,GACnBE,EAAI,IACNJ,EAAIC,KAAOG,EACFA,EAAI,MACbJ,EAAIC,KAAQG,GAAK,EAAK,IACtBJ,EAAIC,KAAY,GAAJG,EAAU,KAEL,QAAZ,MAAJA,IACDF,EAAI,EAAIH,EAAII,QACyB,QAAZ,MAAxBJ,EAAIM,WAAWH,EAAI,KAGpBE,EAAI,QAAgB,KAAJA,IAAe,KAA6B,KAAtBL,EAAIM,aAAaH,IACvDF,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,GAAM,GAAM,IAC9BJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,MAEtBJ,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,KAG1B,OAAOJ,GA6DIM,EAAiB,CAI5BC,eAAgB,KAKhBC,eAAgB,KAMhBC,sBAAuB,KAMvBC,sBAAuB,KAMvBC,kBACE,iEAKEC,mBACF,OAAOC,KAAKF,kBAAoB,OAM9BG,2BACF,OAAOD,KAAKF,kBAAoB,OAUlCI,mBAAoC,mBAATC,KAW3BC,gBAAgBC,EAA8BC,GAC5C,IAAKC,MAAMC,QAAQH,GACjB,MAAMI,MAAM,iDAGdT,KAAKU,QAEL,MAAMC,EAAgBL,EAClBN,KAAKJ,sBACLI,KAAKN,eAEHkB,EAAS,GAEf,IAAK,IAAIvB,EAAI,EAAGA,EAAIgB,EAAMf,OAAQD,GAAK,EAAG,CACxC,MAAMwB,EAAQR,EAAMhB,GACdyB,EAAYzB,EAAI,EAAIgB,EAAMf,OAC1ByB,EAAQD,EAAYT,EAAMhB,EAAI,GAAK,EACnC2B,EAAY3B,EAAI,EAAIgB,EAAMf,OAC1B2B,EAAQD,EAAYX,EAAMhB,EAAI,GAAK,EAEnC6B,EAAWL,GAAS,EACpBM,GAAqB,EAARN,IAAiB,EAAME,GAAS,EACnD,IAAIK,GAAqB,GAARL,IAAiB,EAAME,GAAS,EAC7CI,EAAmB,GAARJ,EAEVD,IACHK,EAAW,GAENP,IACHM,EAAW,KAIfR,EAAOU,KACLX,EAAcO,GACdP,EAAcQ,GACdR,EAAcS,GACdT,EAAcU,IAIlB,OAAOT,EAAOW,KAAK,KAWrBC,aAAanB,EAAeC,GAG1B,OAAIN,KAAKE,qBAAuBI,EACvBmB,KAAKpB,GAEPL,KAAKI,gBAAgBnB,EAAkBoB,GAAQC,IAWxDoB,aAAarB,EAAeC,GAG1B,OAAIN,KAAKE,qBAAuBI,EACvBH,KAAKE,GA3LQ,SAAUsB,GAElC,MAAMxC,EAAgB,GACtB,IAAIyC,EAAM,EACRrC,EAAI,EACN,KAAOqC,EAAMD,EAAMrC,QAAQ,CACzB,MAAMuC,EAAKF,EAAMC,KACjB,GAAIC,EAAK,IACP1C,EAAII,KAAOuC,OAAOC,aAAaF,QAC1B,GAAIA,EAAK,KAAOA,EAAK,IAAK,CAC/B,MAAMG,EAAKL,EAAMC,KACjBzC,EAAII,KAAOuC,OAAOC,cAAoB,GAALF,IAAY,EAAW,GAALG,QAC9C,GAAIH,EAAK,KAAOA,EAAK,IAAK,CAE/B,MAGMI,IACI,EAALJ,IAAW,IAAa,GAJlBF,EAAMC,OAImB,IAAa,GAHtCD,EAAMC,OAGuC,EAAW,GAFxDD,EAAMC,MAGf,MACFzC,EAAII,KAAOuC,OAAOC,aAAa,OAAUE,GAAK,KAC9C9C,EAAII,KAAOuC,OAAOC,aAAa,OAAc,KAAJE,QACpC,CACL,MAAMD,EAAKL,EAAMC,KACXM,EAAKP,EAAMC,KACjBzC,EAAII,KAAOuC,OAAOC,cACT,GAALF,IAAY,IAAa,GAALG,IAAY,EAAW,GAALE,IAI9C,OAAO/C,EAAIoC,KAAK,IA+JPY,CAAkBnC,KAAKoC,wBAAwB/B,EAAOC,KAkB/D8B,wBAAwB/B,EAAeC,GACrCN,KAAKU,QAEL,MAAM2B,EAAgB/B,EAClBN,KAAKH,sBACLG,KAAKL,eAEHiB,EAAmB,GAEzB,IAAK,IAAIvB,EAAI,EAAGA,EAAIgB,EAAMf,QAAU,CAClC,MAAMuB,EAAQwB,EAAchC,EAAMiC,OAAOjD,MAGnC0B,EADY1B,EAAIgB,EAAMf,OACF+C,EAAchC,EAAMiC,OAAOjD,IAAM,IACzDA,EAEF,MACM4B,EADY5B,EAAIgB,EAAMf,OACF+C,EAAchC,EAAMiC,OAAOjD,IAAM,KACzDA,EAEF,MACMkD,EADYlD,EAAIgB,EAAMf,OACF+C,EAAchC,EAAMiC,OAAOjD,IAAM,GAG3D,KAFEA,EAEW,MAATwB,GAA0B,MAATE,GAA0B,MAATE,GAA0B,MAATsB,EACrD,MAAM9B,QAGR,MAAMS,EAAYL,GAAS,EAAME,GAAS,EAG1C,GAFAH,EAAOU,KAAKJ,GAEE,KAAVD,EAAc,CAChB,MAAME,EAAaJ,GAAS,EAAK,IAASE,GAAS,EAGnD,GAFAL,EAAOU,KAAKH,GAEE,KAAVoB,EAAc,CAChB,MAAMnB,EAAaH,GAAS,EAAK,IAAQsB,EACzC3B,EAAOU,KAAKF,KAKlB,OAAOR,GAQTF,QACE,IAAKV,KAAKN,eAAgB,CACxBM,KAAKN,eAAiB,GACtBM,KAAKL,eAAiB,GACtBK,KAAKJ,sBAAwB,GAC7BI,KAAKH,sBAAwB,GAG7B,IAAK,IAAIR,EAAI,EAAGA,EAAIW,KAAKD,aAAaT,OAAQD,IAC5CW,KAAKN,eAAeL,GAAKW,KAAKD,aAAauC,OAAOjD,GAClDW,KAAKL,eAAeK,KAAKN,eAAeL,IAAMA,EAC9CW,KAAKJ,sBAAsBP,GAAKW,KAAKC,qBAAqBqC,OAAOjD,GACjEW,KAAKH,sBAAsBG,KAAKJ,sBAAsBP,IAAMA,EAGxDA,GAAKW,KAAKF,kBAAkBR,SAC9BU,KAAKL,eAAeK,KAAKC,qBAAqBqC,OAAOjD,IAAMA,EAC3DW,KAAKH,sBAAsBG,KAAKD,aAAauC,OAAOjD,IAAMA,MAmBvDmD,EAAgC,SAAUtD,GAErD,OAX0B,SAAUA,GACpC,MAAMuD,EAAYxD,EAAkBC,GACpC,OAAOO,EAAOW,gBAAgBqC,GAAW,GASlCC,CAAaxD,GAAKyD,QAAQ,MAAO,KCpRpC,MAAOC,UAAsBnC,MAIjCoC,YAEWC,EACTC,EAEOC,GAEPC,MAAMF,GALG/C,KAAI8C,KAAJA,EAGF9C,KAAUgD,WAAVA,EAPAhD,KAAIkD,KAdI,gBA2BfC,OAAOC,eAAepD,KAAM4C,EAAcS,WAItC5C,MAAM6C,mBACR7C,MAAM6C,kBAAkBtD,KAAMuD,EAAaF,UAAUG,SAK9C,MAAAD,EAIXV,YACmBY,EACAC,EACAC,GAFA3D,KAAOyD,QAAPA,EACAzD,KAAW0D,YAAXA,EACA1D,KAAM2D,OAANA,EAGnBH,OACEV,KACGc,GAEH,MAAMZ,EAAcY,EAAK,IAAoB,GACvCC,EAAW,GAAG7D,KAAKyD,WAAWX,IAC9BgB,EAAW9D,KAAK2D,OAAOb,GAEvBC,EAAUe,EAUpB,SAAyBA,EAAkBF,GACzC,OAAOE,EAASnB,QAAQoB,GAAS,CAACC,EAAGC,KACnC,MAAMC,EAAQN,EAAKK,GACnB,OAAgB,MAATC,EAAgBpC,OAAOoC,GAAS,IAAID,SAbhBE,CAAgBL,EAAUd,GAAc,QAE7DoB,EAAc,GAAGpE,KAAK0D,gBAAgBX,MAAYc,MAIxD,OAFc,IAAIjB,EAAciB,EAAUO,EAAapB,IAa3D,MAAMe,EAAU,gBChHV,SAAUM,EACdZ,GAEA,OAAIA,GAAYA,EAA+Ba,UACrCb,EAA+Ba,UAEhCb,MC2BCc,GAAZ,SAAYA,GACVA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SANF,CAAYA,IAAAA,EAOX,KAED,MAAMC,EAA2D,CAC/DC,MAASF,EAASG,MAClBC,QAAWJ,EAASK,QACpBC,KAAQN,EAASO,KACjBC,KAAQR,EAASS,KACjBC,MAASV,EAASW,MAClBC,OAAUZ,EAASa,QAMfC,EAA4Bd,EAASO,KAmBrCQ,EAAgB,CACpB,CAACf,EAASG,OAAQ,MAClB,CAACH,EAASK,SAAU,MACpB,CAACL,EAASO,MAAO,OACjB,CAACP,EAASS,MAAO,OACjB,CAACT,EAASW,OAAQ,SAQdK,EAAgC,CAACC,EAAUC,KAAYC,KAC3D,GAAID,EAAUD,EAASG,SACrB,OAEF,MAAMC,GAAM,IAAIC,MAAOC,cACjBC,EAAST,EAAcG,GAC7B,IAAIM,EAMF,MAAM,IAAItF,MACR,8DAA8DgF,MANhEO,QAAQD,GACN,IAAIH,OAASJ,EAAStC,WACnBwC,ICxFT,MAAMO,EACFpD,YAAYqD,GACRlG,KAAKmG,IAAMD,EAEfE,kBACI,OAAO,MAAQpG,KAAKmG,IAKjBE,QACH,OAAOrG,KAAKoG,kBAAoB,OAASpG,KAAKmG,IAAM,iBAExDG,QAAQJ,GACJ,OAAOA,EAAEC,MAAQnG,KAAKmG,KAICF,EAAEM,gBAAkB,IAAIN,EAAE,MAGzDA,EAAEO,mBAAqB,IAAIP,EAAE,0BAA2BA,EAAEQ,YAAc,IAAIR,EAAE,mBAC9EA,EAAES,UAAY,IAAIT,EAAE,aAkBpB,IAAIU,EAAI,QAkBR,MAAMC,EAAI,IDuCG,MAOX/D,YAAmBK,GAAAlD,KAAIkD,KAAJA,EAUXlD,KAAS6G,UAAGxB,EAsBZrF,KAAW8G,YAAevB,EAc1BvF,KAAe+G,gBAAsB,KAlCzCpB,eACF,OAAO3F,KAAK6G,UAGVlB,aAASqB,GACX,KAAMA,KAAOzC,GACX,MAAM,IAAI0C,UAAU,kBAAkBD,+BAExChH,KAAK6G,UAAYG,EAInBE,YAAYF,GACVhH,KAAK6G,UAA2B,iBAARG,EAAmBxC,EAAkBwC,GAAOA,EAQlEG,iBACF,OAAOnH,KAAK8G,YAEVK,eAAWH,GACb,GAAmB,mBAARA,EACT,MAAM,IAAIC,UAAU,qDAEtBjH,KAAK8G,YAAcE,EAOjBI,qBACF,OAAOpH,KAAK+G,gBAEVK,mBAAeJ,GACjBhH,KAAK+G,gBAAkBC,EAOzBvC,SAASiB,GACP1F,KAAK+G,iBAAmB/G,KAAK+G,gBAAgB/G,KAAMuE,EAASG,SAAUgB,GACtE1F,KAAK8G,YAAY9G,KAAMuE,EAASG,SAAUgB,GAE5C2B,OAAO3B,GACL1F,KAAK+G,iBACH/G,KAAK+G,gBAAgB/G,KAAMuE,EAASK,WAAYc,GAClD1F,KAAK8G,YAAY9G,KAAMuE,EAASK,WAAYc,GAE9Cb,QAAQa,GACN1F,KAAK+G,iBAAmB/G,KAAK+G,gBAAgB/G,KAAMuE,EAASO,QAASY,GACrE1F,KAAK8G,YAAY9G,KAAMuE,EAASO,QAASY,GAE3CX,QAAQW,GACN1F,KAAK+G,iBAAmB/G,KAAK+G,gBAAgB/G,KAAMuE,EAASS,QAASU,GACrE1F,KAAK8G,YAAY9G,KAAMuE,EAASS,QAASU,GAE3CT,SAASS,GACP1F,KAAK+G,iBAAmB/G,KAAK+G,gBAAgB/G,KAAMuE,EAASW,SAAUQ,GACtE1F,KAAK8G,YAAY9G,KAAMuE,EAASW,SAAUQ,KC3H9B,uBAcZ,SAAS4B,EAAEpB,GACXU,EAAEM,YAAYhB,GAGlB,SAASqB,EAAErB,KAAMsB,GACb,GAAIZ,EAAEjB,UAAY1D,EAAEyC,MAAO,CACvB,MAAM+C,EAAID,EAAEE,IAAI1D,GAChB4C,EAAEnC,MAAM,cAAckC,OAAOT,OAAQuB,IAI7C,SAASrI,EAAE8G,KAAMsB,GACb,GAAIZ,EAAEjB,UAAY1D,EAAEiD,MAAO,CACvB,MAAMuC,EAAID,EAAEE,IAAI1D,GAChB4C,EAAE3B,MAAM,cAAc0B,OAAOT,OAAQuB,IAMzC,SAASE,EAAEzB,KAAMsB,GACjB,GAAIZ,EAAEjB,UAAY1D,EAAE+C,KAAM,CACtB,MAAMyC,EAAID,EAAEE,IAAI1D,GAChB4C,EAAE7B,KAAK,cAAc4B,OAAOT,OAAQuB,IAMxC,SAASzD,EAAEkC,GACX,GAAI,iBAAmBA,EAAG,OAAOA,EACjC,IACI,OAAOsB,EAAItB,EAAG0B,KAAKC,UAAUL,GAC/B,MAAOA,GAEL,OAAOtB,EAmBX,IAAIsB,EA0BJ,SAASM,EAAE5B,EAAI,oBAGf,MAAMsB,EAAI,cAAcb,iCAAmCT,EAI3D,MAAM9G,EAAEoI,GAAI,IAAI/G,MAAM+G,GAQtB,SAASO,EAAE7B,EAAGsB,GACdtB,GAAK4B,IAML,SAASE,EAAE9B,EAEfsB,GACI,OAAOtB,EAkBP,MAAgB+B,EAAI,YAAaC,EAAI,UAAWC,EAAI,mBAAoBC,EAAI,oBAAqBC,EAAI,YAAmCC,EAAI,oBAAqBC,EAAI,kBAAmBC,EAAI,qBAAsBC,EAAI,sBAAuBC,EAAI,UAAWC,EAAI,eAAgBC,EAAI,gBAAiBC,EAAI,WAAYC,EAAI,cAE1Q,MAAMC,UAAUxJ,EAE/DsD,YAIAqD,EAIAsB,GACIvE,MAAMiD,EAAGsB,GAAIxH,KAAK8C,KAAOoD,EAAGlG,KAAK+C,QAAUyE,EAI3CxH,KAAKgJ,SAAW,IAAM,GAAGhJ,KAAKkD,eAAelD,KAAK8C,UAAU9C,KAAK+C,WAmBrE,MAAMkG,EACNpG,cACI7C,KAAKkJ,QAAU,IAAIC,SAAO,CAAGjD,EAAGsB,KAC5BxH,KAAKoJ,QAAUlD,EAAGlG,KAAKqJ,OAAS7B,MAoBxC,MAAM8B,EACNzG,YAAYqD,EAAGsB,GACXxH,KAAKuJ,KAAO/B,EAAGxH,KAAKwJ,KAAO,QAASxJ,KAAKyJ,QAAU,IAAIC,IAAK1J,KAAKyJ,QAAQE,IAAI,gBAAiB,UAAUzD,MAO5G,MAAM0D,EACNC,WACI,OAAOV,QAAQC,QAAQ,MAE3BU,mBACAC,MAAM7D,EAAGsB,GAELtB,EAAE8D,kBAAgB,IAAQxC,EAAEvB,EAAEM,mBAElC0D,aAMA,MAAMC,EACNrH,YAAYqD,GACRlG,KAAKmK,MAAQjE,EAMblG,KAAKoK,eAAiB,KAE1BP,WACI,OAAOV,QAAQC,QAAQpJ,KAAKmK,OAEhCL,mBACAC,MAAM7D,EAAGsB,GACLxH,KAAKoK,eAAiB5C,EAEtBtB,EAAE8D,kBAAgB,IAAQxC,EAAExH,KAAKmK,MAAMZ,QAE3CU,WACIjK,KAAKoK,eAAiB,MAIe,MAAMC,EAC/CxH,YAAYqD,GACRlG,KAAKsK,KAAO,KAAMpE,EAAEqE,QAAQrE,IACxBlG,KAAKsK,KAAOpE,KAGpB2D,WACI,OAAO7J,KAAKsK,KAAOtK,KAAKsK,KAAKT,WAAWW,MAAMtE,GAAKA,GAAK6B,EAAE,iBAAmB7B,EAAEuE,aAC/E,IAAInB,EAAEpD,EAAEuE,YAAa,IAAIxE,EAAEjG,KAAKsK,KAAKI,YAAc,OAASvB,QAAQC,QAAQ,MAEhFU,mBACAC,MAAM7D,EAAGsB,IACTyC,aASA,MAAMU,EACN9H,YAAYqD,EAAGsB,EAAGC,EAAGmD,GACjB5K,KAAKkG,EAAIA,EAAGlG,KAAKX,EAAImI,EAAGxH,KAAK6K,EAAIpD,EAAGzH,KAAKiC,EAAI2I,EAAG5K,KAAKwJ,KAAO,aAAcxJ,KAAKuJ,KAAOtD,EAAEQ,YACxFzG,KAAK8K,EAAI,IAAIpB,IAE8FzD,IAC3G,OAAOjG,KAAKiC,EAAIjC,KAAKiC,KAErB8F,IAAI,iBAAmB/H,KAAKkG,GAAK,OAASlG,KAAKkG,IAAMlG,KAAKkG,EAAEoE,OAAStK,KAAKkG,EAAEoE,KAAKS,kCACjF/K,KAAKkG,EAAEoE,KAAKS,gCAAgC,KAE5CtB,cACAzJ,KAAK8K,EAAEnB,IAAI,kBAAmB3J,KAAKX,GAEnC,MAAM6G,EAAIlG,KAAKiG,IACf,OAAOC,GAAKlG,KAAK8K,EAAEnB,IAAI,gBAAiBzD,GAAIlG,KAAK6K,GAAK7K,KAAK8K,EAAEnB,IAAI,iCAAkC3J,KAAK6K,GACxG7K,KAAK8K,GAQT,MAAME,EACNnI,YAAYqD,EAAGsB,EAAGC,EAAGmD,GACjB5K,KAAKkG,EAAIA,EAAGlG,KAAKX,EAAImI,EAAGxH,KAAK6K,EAAIpD,EAAGzH,KAAKiC,EAAI2I,EAEjDf,WACI,OAAOV,QAAQC,QAAQ,IAAIuB,EAAE3K,KAAKkG,EAAGlG,KAAKX,EAAGW,KAAK6K,EAAG7K,KAAKiC,IAE9D8H,MAAM7D,EAAGsB,GAELtB,EAAE8D,kBAAgB,IAAQxC,EAAEvB,EAAEQ,eAElCwD,YACAH,oBAGJ,MAAMmB,EACFpI,YAAYqD,GACRlG,KAAKkE,MAAQgC,EAAGlG,KAAKwJ,KAAO,WAAYxJ,KAAKyJ,QAAU,IAAIC,IAAKxD,GAAKA,EAAE5G,OAAS,GAAKU,KAAKyJ,QAAQE,IAAI,sBAAuB3J,KAAKkE,QAIzF,MAAMgH,EACnDrI,YAAYqD,GACRlG,KAAKuH,EAAIrB,EAAGlG,KAAKmL,SAAW,KAAMjF,EAAEqE,QAAQrE,IACxClG,KAAKmL,SAAWjF,KAGxB2D,WACI,OAAO7J,KAAKmL,SAAWnL,KAAKmL,SAAStB,WAAWW,MAAMtE,GAAKA,GAAK6B,EAAE,iBAAmB7B,EAAEiE,OACvF,IAAIc,EAAE/E,EAAEiE,QAAU,OAAShB,QAAQC,QAAQ,MAE/CU,mBACAC,MAAM7D,EAAGsB,IACTyC,aAuBJ,MAAMmB,EAkBFvI,YAAYqD,EAAGsB,EAAGC,EAAGmD,EAAGS,EAAGhM,EAAGwL,EAAG5I,GAC7BjC,KAAKsL,WAAapF,EAAGlG,KAAKuL,MAAQ/D,EAAGxH,KAAKwL,eAAiB/D,EAAGzH,KAAKyL,KAAOb,EAAG5K,KAAK0L,IAAML,EACxFrL,KAAK2L,iBAAmBtM,EAAGW,KAAK4L,sBAAwBf,EAAG7K,KAAK6L,gBAAkB5J,GAS1F,MAAM6J,GACFjJ,YAAYqD,EAAGsB,GACXxH,KAAK+L,UAAY7F,EAAGlG,KAAKgM,SAAWxE,GAAK,YAE7CyE,eACI,OAAO,IAAIH,GAAE,GAAI,IAEjBI,wBACA,MAAO,cAAgBlM,KAAKgM,SAEhC1F,QAAQJ,GACJ,OAAOA,aAAa4F,IAAK5F,EAAE6F,YAAc/L,KAAK+L,WAAa7F,EAAE8F,WAAahM,KAAKgM,UAuBvF,MAAMG,GACFtJ,YAAYqD,EAAGsB,EAAGC,QACd,IAAWD,EAAIA,EAAI,EAAIA,EAAItB,EAAE5G,QAAUwI,SAAK,IAAWL,EAAIA,EAAIvB,EAAE5G,OAASkI,EAAIC,EAAIvB,EAAE5G,OAASkI,GAAKM,IAClG9H,KAAKoM,SAAWlG,EAAGlG,KAAKqM,OAAS7E,EAAGxH,KAAKsM,IAAM7E,EAE/CnI,aACA,OAAOU,KAAKsM,IAEhBhG,QAAQJ,GACJ,OAAO,IAAMiG,GAAEI,WAAWvM,KAAMkG,GAEpCsG,MAAMtG,GACF,MAAMsB,EAAIxH,KAAKoM,SAASK,MAAMzM,KAAKqM,OAAQrM,KAAK0M,SAChD,OAAOxG,aAAaiG,GAAIjG,EAAEyG,SAASzG,IAC/BsB,EAAElG,KAAK4E,MACLsB,EAAElG,KAAK4E,GAAIlG,KAAK4M,UAAUpF,GAE0BkF,QAC1D,OAAO1M,KAAKqM,OAASrM,KAAKV,OAE9BuN,SAAS3G,GACL,OAAOA,OAAI,IAAWA,EAAI,EAAIA,EAAGlG,KAAK4M,UAAU5M,KAAKoM,SAAUpM,KAAKqM,OAASnG,EAAGlG,KAAKV,OAAS4G,GAElG4G,UACI,OAAO9M,KAAK4M,UAAU5M,KAAKoM,SAAUpM,KAAKqM,OAAQrM,KAAKV,OAAS,GAEpEyN,eACI,OAAO/M,KAAKoM,SAASpM,KAAKqM,QAE9BW,cACI,OAAOhN,KAAKiN,IAAIjN,KAAKV,OAAS,GAElC2N,IAAI/G,GACA,OAAOlG,KAAKoM,SAASpM,KAAKqM,OAASnG,GAEvCgH,UACI,OAAO,IAAMlN,KAAKV,OAEtB6N,WAAWjH,GACP,GAAIA,EAAE5G,OAASU,KAAKV,OAAQ,OAAO,EACnC,IAAK,IAAIkI,EAAI,EAAGA,EAAIxH,KAAKV,OAAQkI,IAAK,GAAIxH,KAAKiN,IAAIzF,KAAOtB,EAAE+G,IAAIzF,GAAI,OAAO,EAC3E,OAAO,EAEX4F,oBAAoBlH,GAChB,GAAIlG,KAAKV,OAAS,IAAM4G,EAAE5G,OAAQ,OAAO,EACzC,IAAK,IAAIkI,EAAI,EAAGA,EAAIxH,KAAKV,OAAQkI,IAAK,GAAIxH,KAAKiN,IAAIzF,KAAOtB,EAAE+G,IAAIzF,GAAI,OAAO,EAC3E,OAAO,EAEXmF,QAAQzG,GACJ,IAAK,IAAIsB,EAAIxH,KAAKqM,OAAQ5E,EAAIzH,KAAK0M,QAASlF,EAAIC,EAAGD,IAAKtB,EAAElG,KAAKoM,SAAS5E,IAE5E6F,UACI,OAAOrN,KAAKoM,SAASK,MAAMzM,KAAKqM,OAAQrM,KAAK0M,SAEjDT,kBAAkB/F,EAAGsB,GACjB,MAAMC,EAAI6F,KAAKC,IAAIrH,EAAE5G,OAAQkI,EAAElI,QAC/B,IAAK,IAAIsL,EAAI,EAAGA,EAAInD,EAAGmD,IAAK,CACxB,MAAMnD,EAAIvB,EAAE+G,IAAIrC,GAAIS,EAAI7D,EAAEyF,IAAIrC,GAC9B,GAAInD,EAAI4D,EAAG,OAAQ,EACnB,GAAI5D,EAAI4D,EAAG,OAAO,EAEtB,OAAOnF,EAAE5G,OAASkI,EAAElI,QAAU,EAAI4G,EAAE5G,OAASkI,EAAElI,OAAS,EAAI,GAShE,MAAMkO,WAAUrB,GAChBS,UAAU1G,EAAGsB,EAAGC,GACZ,OAAO,IAAI+F,GAAEtH,EAAGsB,EAAGC,GAEvBgG,kBAII,OAAOzN,KAAKqN,UAAU9L,KAAK,KAE/ByH,WACI,OAAOhJ,KAAKyN,kBAMTxB,qBAAqB/F,GAIxB,MAAMsB,EAAI,GACV,IAAK,MAAMC,KAAKvB,EAAG,CACf,GAAIuB,EAAEiG,QAAQ,OAAS,EAAG,MAAM,IAAI3E,EAAEZ,EAAG,oBAAoBV,0CAEjDD,EAAElG,QAAQmG,EAAEkG,MAAM,KAAKC,QAAQ1H,GAAKA,EAAE5G,OAAS,KAE/D,OAAO,IAAIkO,GAAEhG,GAEjByE,mBACI,OAAO,IAAIuB,GAAE,KAIrB,MAAMK,GAAI,2BAKN,MAAMC,WAAW3B,GACjBS,UAAU1G,EAAGsB,EAAGC,GACZ,OAAO,IAAIqG,GAAG5H,EAAGsB,EAAGC,GAKjBwE,yBAAyB/F,GAC5B,OAAO2H,GAAEE,KAAK7H,GAElBuH,kBACI,OAAOzN,KAAKqN,UAAU3F,KAAKxB,IAAMA,EAAIA,EAAEvD,QAAQ,MAAO,QAAQA,QAAQ,KAAM,OAC5EmL,GAAGE,kBAAkB9H,KAAOA,EAAI,IAAMA,EAAI,KAAMA,KAAK3E,KAAK,KAE9DyH,WACI,OAAOhJ,KAAKyN,kBAITQ,aACH,OAAO,IAAMjO,KAAKV,QAAU,aAAeU,KAAKiN,IAAI,GAIjDhB,kBACH,OAAO,IAAI6B,GAAG,CAAE,aAWb7B,wBAAwB/F,GAC3B,MAAMsB,EAAI,GACV,IAAIC,EAAI,GAAImD,EAAI,EAChB,MAAMS,EAAI,KACN,GAAI,IAAM5D,EAAEnI,OAAQ,MAAM,IAAIyJ,EAAEZ,EAAG,uBAAuBjC,8EAC1DsB,EAAElG,KAAKmG,GAAIA,EAAI,IAEnB,IAAIpI,GAAI,EACR,KAAMuL,EAAI1E,EAAE5G,QAAU,CAClB,MAAMkI,EAAItB,EAAE0E,GACZ,GAAI,OAASpD,EAAG,CACZ,GAAIoD,EAAI,IAAM1E,EAAE5G,OAAQ,MAAM,IAAIyJ,EAAEZ,EAAG,uCAAyCjC,GAChF,MAAMsB,EAAItB,EAAE0E,EAAI,GAChB,GAAI,OAASpD,GAAK,MAAQA,GAAK,MAAQA,EAAG,MAAM,IAAIuB,EAAEZ,EAAG,qCAAuCjC,GAChGuB,GAAKD,EAAGoD,GAAK,MACV,MAAQpD,GAAKnI,GAAKA,EAAGuL,KAAO,MAAQpD,GAAKnI,GAAKoI,GAAKD,EAAGoD,MAAQS,IAAKT,KAE9E,GAAIS,IAAKhM,EAAG,MAAM,IAAI0J,EAAEZ,EAAG,2BAA6BjC,GACxD,OAAO,IAAI4H,GAAGtG,GAElByE,mBACI,OAAO,IAAI6B,GAAG,KAsBlB,MAAMI,GACNrL,YAAYqD,GACRlG,KAAKmO,KAAOjI,EAEhB+F,gBAAgB/F,GACZ,OAAO,IAAIgI,GAAGV,GAAEY,WAAWlI,IAE/B+F,gBAAgB/F,GACZ,OAAO,IAAIgI,GAAGV,GAAEY,WAAWlI,GAAG2G,SAAS,IAE3CZ,eACI,OAAO,IAAIiC,GAAGV,GAAEa,aAEhBC,sBACA,OAAOtO,KAAKmO,KAAKrB,UAAUE,cAE0CuB,gBAAgBrI,GACrF,OAAOlG,KAAKmO,KAAK7O,QAAU,GAAKU,KAAKmO,KAAKlB,IAAIjN,KAAKmO,KAAK7O,OAAS,KAAO4G,EAEkBsI,qBAC1F,OAAOxO,KAAKmO,KAAKlB,IAAIjN,KAAKmO,KAAK7O,OAAS,GAEyBmP,oBACjE,OAAOzO,KAAKmO,KAAKrB,UAErBxG,QAAQJ,GACJ,OAAO,OAASA,GAAK,IAAMsH,GAAEjB,WAAWvM,KAAKmO,KAAMjI,EAAEiI,MAEzDnF,WACI,OAAOhJ,KAAKmO,KAAKnF,WAErBiD,kBAAkB/F,EAAGsB,GACjB,OAAOgG,GAAEjB,WAAWrG,EAAEiI,KAAM3G,EAAE2G,MAElClC,qBAAqB/F,GACjB,OAAOA,EAAE5G,OAAS,GAAK,EAOpB2M,oBAAoB/F,GACvB,OAAO,IAAIgI,GAAG,IAAIV,GAAEtH,EAAEuG,WAmB1B,SAASiC,GAAGxI,EAAGsB,EAAGC,GAClB,IAAKA,EAAG,MAAM,IAAIsB,EAAEZ,EAAG,YAAYjC,sCAAsCsB,MAW7E,SAASmH,GAAGzI,GACR,IAAKgI,GAAGU,cAAc1I,GAAI,MAAM,IAAI6C,EAAEZ,EAAG,6FAA6FjC,SAASA,EAAE5G,WAMjJ,SAASuP,GAAG3I,GACZ,GAAIgI,GAAGU,cAAc1I,GAAI,MAAM,IAAI6C,EAAEZ,EAAG,gGAAgGjC,SAASA,EAAE5G,WAQvJ,SAASwP,GAAG5I,GACR,QAAI,IAAWA,EAAG,MAAO,YACzB,GAAI,OAASA,EAAG,MAAO,OACvB,GAAI,iBAAmBA,EAAG,OAAOA,EAAE5G,OAAS,KAAO4G,EAAI,GAAGA,EAAE6I,UAAU,EAAG,UACzEnH,KAAKC,UAAU3B,GACf,GAAI,iBAAmBA,GAAK,kBAAoBA,EAAG,MAAO,GAAKA,EAC/D,GAAI,iBAAmBA,EAAG,CACtB,GAAIA,aAAa3F,MAAO,MAAO,WAC/B,CACI,MAAMiH,EAEN,SAAStB,GACL,OAAIA,EAAErD,YAAoBqD,EAAErD,YAAYK,KACjC,KAFX,CAWPgD,GACO,OAAOsB,EAAI,YAAYA,WAAa,aAG5C,MAAO,mBAAqBtB,EAAI,aAAe4B,IAGnD,SAASkH,GAAG9I,EAEZsB,GACI,GAAI,cAAetB,IAGnBA,EAAIA,EAAE5B,aAAc4B,aAAasB,GAAI,CACjC,GAAIA,EAAEtE,OAASgD,EAAErD,YAAYK,KAAM,MAAM,IAAI6F,EAAEZ,EAAG,uGAClD,CACI,MAAMV,EAAIqH,GAAG5I,GACb,MAAM,IAAI6C,EAAEZ,EAAG,kBAAkBX,EAAEtE,sBAAsBuE,MAGjE,OAAOvB,EAGX,SAAS+I,GAAG/I,EAAGsB,GACX,GAAIA,GAAK,EAAG,MAAM,IAAIuB,EAAEZ,EAAG,YAAYjC,+CAA+CsB,MAqBtF,SAAS0H,GAAGhJ,GACZ,OAAO,MAAQA,EAG6B,SAASiJ,GAAGjJ,GAGxD,OAAO,IAAMA,GAAK,EAAIA,IAAK,EAAA,EAuB/B,MAAMkJ,GAAK,CACPC,kBAAmB,WACnBC,OAAQ,SACRC,SAAU,YAkCd,IAAIC,GAAIC,GASR,SAASC,GAAGxJ,GACR,QAAI,IAAWA,EAAG,OAAO9G,EAAE,YAAa,4BAA6B8I,EAOjE,OAAQhC,GACV,KAAK,IAEH,MA/rBM,KAisBR,KAAK,IAEH,OAAOuC,EAKD,KAAK,IAEX,OAAOF,EAET,KAAK,IAEH,OAAOD,EAET,KAAK,IAEH,OAAOD,EAET,KAAK,IAEH,OAAOK,EAID,KAAK,IAEX,OAAOC,EAET,KAAK,IAEH,OAAOH,EAET,KAAK,IAEH,OAAOP,EAET,KAAK,IAEH,OAAOC,EAKD,KAAK,IAEX,OAAOU,EAET,KAAK,IAEH,OAAOE,EAET,KAAK,IAEH,OAAOV,EAET,QACE,OAAOlC,GAAK,KAAOA,EAAI,IA1vBjB,KA0vB2BA,GAAK,KAAOA,EAAI,IAAMuC,EAAIvC,GAAK,KAAOA,EAAI,IAAM2C,EAAIX,IAuBxFuH,GAAKD,KAAOA,GAAK,KAAKC,GAAGE,GAAK,GAAK,KAAMF,GAAGA,GAAGG,UAAY,GAAK,YACrEH,GAAGA,GAAGI,QAAU,GAAK,UAAWJ,GAAGA,GAAGK,iBAAmB,GAAK,mBAC9DL,GAAGA,GAAGM,kBAAoB,GAAK,oBAAqBN,GAAGA,GAAGO,UAAY,GAAK,YAC3EP,GAAGA,GAAGQ,eAAiB,GAAK,iBAAkBR,GAAGA,GAAGS,kBAAoB,GAAK,oBAC7ET,GAAGA,GAAGlJ,gBAAkB,IAAM,kBAAmBkJ,GAAGA,GAAGU,mBAAqB,GAAK,qBACjFV,GAAGA,GAAGW,oBAAsB,GAAK,sBAAuBX,GAAGA,GAAGY,QAAU,IAAM,UAC9EZ,GAAGA,GAAGa,aAAe,IAAM,eAAgBb,GAAGA,GAAGc,cAAgB,IAAM,gBACvEd,GAAGA,GAAGe,SAAW,IAAM,WAAYf,GAAGA,GAAGgB,YAAc,IAAM,cAAehB,GAAGA,GAAGiB,UAAY,IAAM,YAEpG,MAAMC,WAKN,MACI9N,YAAYqD,GACRlG,KAAK4Q,aAAe1K,EAAGlG,KAAKsL,WAAapF,EAAEoF,WAC3C,MAAM9D,EAAItB,EAAEwF,IAAM,QAAU,OAC5B1L,KAAKZ,EAAIoI,EAAI,MAAQtB,EAAEuF,KAAMzL,KAAK8H,EAAI,YAAc9H,KAAKsL,WAAWS,UAAY,cAAgB/L,KAAKsL,WAAWU,SAAW,aAE/HjE,EAAE7B,EAAGsB,EAAGC,EAAGmD,EAAGS,GACV,MAAMhM,EAAIW,KAAKiI,EAAE/B,EAAGsB,GACpBD,EAAE,iBAAkB,YAAalI,EAAGoI,GACpC,MAAMoD,EAAI,GACV,OAAO7K,KAAKkI,EAAE2C,EAAGD,EAAGS,GAAIrL,KAAKmI,EAAEjC,EAAG7G,EAAGwL,EAAGpD,GAAG+C,MAAMtE,IAAMqB,EAAE,iBAAkB,aAAcrB,GACzFA,KAAMsB,IACF,MAAMG,EAAE,iBAAkB,GAAGzB,wBAAyBsB,EAAG,QAASnI,EAAG,WAAYoI,GACjFD,KAGRY,EAAElC,EAAGsB,EAAGC,EAAGmD,EAAGS,EAAGhM,GAGb,OAAOW,KAAK+H,EAAE7B,EAAGsB,EAAGC,EAAGmD,EAAGS,GAKvBnD,EAAEhC,EAAGsB,EAAGC,GACXvB,EAAE,qBAAuB,eAAiBS,EAK1CT,EAAE,gBAAkB,aAAclG,KAAK4Q,aAAarF,QAAUrF,EAAE,oBAAsBlG,KAAK4Q,aAAarF,OACxG/D,GAAKA,EAAEiC,QAAQkD,SAAS,CAACnF,EAAGC,IAAMvB,EAAEuB,GAAKD,IAAKC,GAAKA,EAAEgC,QAAQkD,UAAUnF,EAAGC,IAAMvB,EAAEuB,GAAKD,IAE3FS,EAAE/B,EAAGsB,GACD,MAAMC,EAAI2H,GAAGlJ,GACb,MAAO,GAAGlG,KAAKZ,QAAQoI,KAAKC,MAOhC5E,YAAYqD,EAAGsB,GACXvE,MAAMiD,GAAIlG,KAAKqI,EAAIb,EAEvBqJ,EAAE3K,EAAGsB,GACD,MAAM,IAAI/G,MAAM,oCAEpBqQ,QAAQ5K,EAAGsB,EAAGC,EAAGmD,GACb,MAAMS,EAAIzD,KAAKC,UAAU+C,GACzB,IAAIvL,EACJ,IACIA,QAAUW,KAAKqI,EAAEb,EAAG,CAChBzB,OAAQ,OACR0D,QAAShC,EACTsJ,KAAM1F,IAEZ,MAAOnF,GACL,MAAM,IAAI6C,EAAE2G,GAAGxJ,EAAE8K,QAAS,8BAAgC9K,EAAE+K,YAEhE,IAAK5R,EAAE6R,GAAI,MAAM,IAAInI,EAAE2G,GAAGrQ,EAAE2R,QAAS,8BAAgC3R,EAAE4R,YACvE,OAAO5R,EAAE8R,QA0CjB,SAASC,GAAGlL,GAER,MAAMsB,EAEN,oBAAsB6J,OAASA,KAAKC,QAAUD,KAAKE,UAAW9J,EAAI,IAAI+J,WAAWtL,GACjF,GAAIsB,GAAK,mBAAqBA,EAAEiK,gBAAiBjK,EAAEiK,gBAAgBhK,QAEnE,IAAK,IAAID,EAAI,EAAGA,EAAItB,EAAGsB,IAAKC,EAAED,GAAK8F,KAAKoE,MAAM,IAAMpE,KAAKqE,UACzD,OAAOlK,EAkBP,MAAMmK,GACN3F,WAEI,MAAM/F,EAAI,iEAAkEsB,EAAI8F,KAAKoE,MAAM,IAAMxL,EAAE5G,QAAU4G,EAAE5G,OAEvG,IAAImI,EAAI,GAChB,KAAMA,EAAEnI,OAAS,IAAM,CACnB,MAAMsL,EAAIwG,GAAG,IACb,IAAK,IAAI/F,EAAI,EAAGA,EAAIT,EAAEtL,SAAU+L,EAGhC5D,EAAEnI,OAAS,IAAMsL,EAAES,GAAK7D,IAAMC,GAAKvB,EAAE5D,OAAOsI,EAAES,GAAKnF,EAAE5G,SAEzD,OAAOmI,GAIf,SAASoK,GAAG3L,EAAGsB,GACX,OAAOtB,EAAIsB,GAAK,EAAItB,EAAIsB,EAAI,EAAI,EAGa,SAASsK,GAAG5L,EAAGsB,EAAGC,GAC/D,OAAOvB,EAAE5G,SAAWkI,EAAElI,QAAU4G,EAAE6L,OAAO,CAAC7L,EAAG0E,IAAMnD,EAAEvB,EAAGsB,EAAEoD,MAkC9D,MAAMoH,GAYFnP,YAIAqD,EAIAsB,GACI,GAAIxH,KAAKiS,QAAU/L,EAAGlG,KAAKkS,YAAc1K,EAAGA,EAAI,EAAG,MAAM,IAAIuB,EAAEZ,EAAG,uCAAyCX,GAC3G,GAAIA,GAAK,IAAK,MAAM,IAAIuB,EAAEZ,EAAG,uCAAyCX,GACtE,GAAItB,GAAK,YAAa,MAAM,IAAI6C,EAAEZ,EAAG,mCAAqCjC,GAElE,GAAIA,GAAK,aAAc,MAAM,IAAI6C,EAAEZ,EAAG,mCAAqCjC,GAMhF+F,aACH,OAAO+F,GAAGG,WAAWtM,KAAKD,OAQvBqG,gBAAgB/F,GACnB,OAAO8L,GAAGG,WAAWjM,EAAEkM,WASpBnG,kBAAkB/F,GACrB,MAAMsB,EAAI8F,KAAKoE,MAAMxL,EAAI,KAAMuB,EAAI6F,KAAKoE,MAAM,KAAOxL,EAAI,IAAMsB,IAC/D,OAAO,IAAIwK,GAAGxK,EAAGC,GASd4K,SACH,OAAO,IAAIxM,KAAK7F,KAAKsS,YAQlBA,WACH,OAAO,IAAMtS,KAAKiS,QAAUjS,KAAKkS,YAAc,IAEnDK,WAAWrM,GACP,OAAOlG,KAAKiS,UAAY/L,EAAE+L,QAAUJ,GAAG7R,KAAKkS,YAAahM,EAAEgM,aAAeL,GAAG7R,KAAKiS,QAAS/L,EAAE+L,SAO1F3L,QAAQJ,GACX,OAAOA,EAAE+L,UAAYjS,KAAKiS,SAAW/L,EAAEgM,cAAgBlS,KAAKkS,YAEAlJ,WAC5D,MAAO,qBAAuBhJ,KAAKiS,QAAU,iBAAmBjS,KAAKkS,YAAc,IAEbM,SACtE,MAAO,CACHP,QAASjS,KAAKiS,QACdC,YAAalS,KAAKkS,aAMnBO,UAQH,MAAMvM,EAAIlG,KAAKiS,UAAW,YAGlB,OAAOnQ,OAAOoE,GAAGwM,SAAS,GAAI,KAAO,IAAM5Q,OAAO9B,KAAKkS,aAAaQ,SAAS,EAAG,MAuB5F,MAAMC,GACN9P,YAAYqD,GACRlG,KAAK4S,UAAY1M,EAErB+F,qBAAqB/F,GACjB,OAAO,IAAIyM,GAAGzM,GAElB+F,aACI,OAAO,IAAI0G,GAAG,IAAIX,GAAG,EAAG,IAE5B/F,aACI,OAAO,IAAI0G,GAAG,IAAIX,GAAG,aAAc,YAEvCa,UAAU3M,GACN,OAAOlG,KAAK4S,UAAUL,WAAWrM,EAAE0M,WAEvCtM,QAAQJ,GACJ,OAAOlG,KAAK4S,UAAUtM,QAAQJ,EAAE0M,WAE4CE,iBAE5E,OAAO,IAAM9S,KAAK4S,UAAUX,QAAUjS,KAAK4S,UAAUV,YAAc,IAEvElJ,WACI,MAAO,mBAAqBhJ,KAAK4S,UAAU5J,WAAa,IAE5D+J,cACI,OAAO/S,KAAK4S,WAmBhB,SAASI,GAAG9M,GACZ,IAAIsB,EAAI,EACR,IAAK,MAAMC,KAAKvB,EAAG/C,OAAOE,UAAU4P,eAAeC,KAAKhN,EAAGuB,IAAMD,IACjE,OAAOA,EAGX,SAAS2L,GAAGjN,EAAGsB,GACX,IAAK,MAAMC,KAAKvB,EAAG/C,OAAOE,UAAU4P,eAAeC,KAAKhN,EAAGuB,IAAMD,EAAEC,EAAGvB,EAAEuB,IAqB5E,MAAM2L,GACFvQ,YAAYqD,EAAGsB,GACXxH,KAAKuM,WAAarG,EAAGlG,KAAKqT,KAAO7L,GAAK8L,GAAGC,MAG7CC,OAAOtN,EAAGsB,GACN,OAAO,IAAI4L,GAAGpT,KAAKuM,WAAYvM,KAAKqT,KAAKG,OAAOtN,EAAGsB,EAAGxH,KAAKuM,YAAYkH,KAAK,KAAM,KAAMH,GAAGI,MAAO,KAAM,OAG5GC,OAAOzN,GACH,OAAO,IAAIkN,GAAGpT,KAAKuM,WAAYvM,KAAKqT,KAAKM,OAAOzN,EAAGlG,KAAKuM,YAAYkH,KAAK,KAAM,KAAMH,GAAGI,MAAO,KAAM,OAGzGzG,IAAI/G,GACA,IAAIsB,EAAIxH,KAAKqT,KACb,MAAO7L,EAAE0F,WAAa,CAClB,MAAMzF,EAAIzH,KAAKuM,WAAWrG,EAAGsB,EAAEvD,KAC/B,GAAI,IAAMwD,EAAG,OAAOD,EAAEtD,MACtBuD,EAAI,EAAID,EAAIA,EAAEoM,KAAOnM,EAAI,IAAMD,EAAIA,EAAEqM,OAEzC,OAAO,KAIXnG,QAAQxH,GAEJ,IAAIsB,EAAI,EAAGC,EAAIzH,KAAKqT,KACpB,MAAO5L,EAAEyF,WAAa,CAClB,MAAMtC,EAAI5K,KAAKuM,WAAWrG,EAAGuB,EAAExD,KAC/B,GAAI,IAAM2G,EAAG,OAAOpD,EAAIC,EAAEmM,KAAKE,KAC/BlJ,EAAI,EAAInD,EAAIA,EAAEmM,MAEdpM,GAAKC,EAAEmM,KAAKE,KAAO,EAAGrM,EAAIA,EAAEoM,OAGxB,OAAQ,EAEpB3G,UACI,OAAOlN,KAAKqT,KAAKnG,UAGjB4G,WACA,OAAO9T,KAAKqT,KAAKS,KAGrBC,SACI,OAAO/T,KAAKqT,KAAKU,SAGrBC,SACI,OAAOhU,KAAKqT,KAAKW,SAMrBC,iBAAiB/N,GACb,OAAOlG,KAAKqT,KAAKY,iBAAiB/N,GAEtCyG,QAAQzG,GACJlG,KAAKiU,kBAAgB,CAAGzM,EAAGC,KAAOvB,EAAEsB,EAAGC,IAAI,KAE/CuB,WACI,MAAM9C,EAAI,GACV,OAAOlG,KAAKiU,kBAAkB,CAACzM,EAAGC,KAAOvB,EAAE5E,KAAK,GAAGkG,KAAKC,MAAM,KAAO,IAAIvB,EAAE3E,KAAK,SAOpF2S,iBAAiBhO,GACb,OAAOlG,KAAKqT,KAAKa,iBAAiBhO,GAGtCiO,cACI,OAAO,IAAIC,GAAGpU,KAAKqT,KAAM,KAAMrT,KAAKuM,YAAY,GAEpD8H,gBAAgBnO,GACZ,OAAO,IAAIkO,GAAGpU,KAAKqT,KAAMnN,EAAGlG,KAAKuM,YAAY,GAEjD+H,qBACI,OAAO,IAAIF,GAAGpU,KAAKqT,KAAM,KAAMrT,KAAKuM,YAAY,GAEpDgI,uBAAuBrO,GACnB,OAAO,IAAIkO,GAAGpU,KAAKqT,KAAMnN,EAAGlG,KAAKuM,YAAY,IAMrD,MAAM6H,GACFvR,YAAYqD,EAAGsB,EAAGC,EAAGmD,GACjB5K,KAAKwU,UAAY5J,EAAG5K,KAAKyU,UAAY,GACrC,IAAIpJ,EAAI,EACR,MAAOnF,EAAEgH,WAAa,GAAI7B,EAAI7D,EAAIC,EAAEvB,EAAEjC,IAAKuD,GAAK,EAEhDA,GAAKoD,IAAMS,IAAM,GAAIA,EAAI,EAEzBnF,EAAIlG,KAAKwU,UAAYtO,EAAE0N,KAAO1N,EAAE2N,UAAY,CACxC,GAAI,IAAMxI,EAAG,CAGTrL,KAAKyU,UAAUnT,KAAK4E,GACpB,MAIJlG,KAAKyU,UAAUnT,KAAK4E,GAAIA,EAAIlG,KAAKwU,UAAYtO,EAAE2N,MAAQ3N,EAAE0N,MAGjEc,UACI,IAAIxO,EAAIlG,KAAKyU,UAAUE,MACvB,MAAMnN,EAAI,CACNvD,IAAKiC,EAAEjC,IACPC,MAAOgC,EAAEhC,OAEb,GAAIlE,KAAKwU,UAAW,IAAKtO,EAAIA,EAAE0N,MAAO1N,EAAEgH,WAAalN,KAAKyU,UAAUnT,KAAK4E,GAAIA,EAAIA,EAAE2N,WAAY,IAAK3N,EAAIA,EAAE2N,OAAQ3N,EAAEgH,WAAalN,KAAKyU,UAAUnT,KAAK4E,GACrJA,EAAIA,EAAE0N,KACN,OAAOpM,EAEXoN,UACI,OAAO5U,KAAKyU,UAAUnV,OAAS,EAEnCuV,OACI,GAAI,IAAM7U,KAAKyU,UAAUnV,OAAQ,OAAO,KACxC,MAAM4G,EAAIlG,KAAKyU,UAAUzU,KAAKyU,UAAUnV,OAAS,GACjD,MAAO,CACH2E,IAAKiC,EAAEjC,IACPC,MAAOgC,EAAEhC,QAOrB,MAAMoP,GACFzQ,YAAYqD,EAAGsB,EAAGC,EAAGmD,EAAGS,GACpBrL,KAAKiE,IAAMiC,EAAGlG,KAAKkE,MAAQsD,EAAGxH,KAAK8U,MAAQ,MAAQrN,EAAIA,EAAI6L,GAAGyB,IAAK/U,KAAK4T,KAAO,MAAQhJ,EAAIA,EAAI0I,GAAGC,MAClGvT,KAAK6T,MAAQ,MAAQxI,EAAIA,EAAIiI,GAAGC,MAAOvT,KAAK8T,KAAO9T,KAAK4T,KAAKE,KAAO,EAAI9T,KAAK6T,MAAMC,KAGvFL,KAAKvN,EAAGsB,EAAGC,EAAGmD,EAAGS,GACb,OAAO,IAAIiI,GAAG,MAAQpN,EAAIA,EAAIlG,KAAKiE,IAAK,MAAQuD,EAAIA,EAAIxH,KAAKkE,MAAO,MAAQuD,EAAIA,EAAIzH,KAAK8U,MAAO,MAAQlK,EAAIA,EAAI5K,KAAK4T,KAAM,MAAQvI,EAAIA,EAAIrL,KAAK6T,OAEpJ3G,UACI,OAAO,EAMX+G,iBAAiB/N,GACb,OAAOlG,KAAK4T,KAAKK,iBAAiB/N,IAAMA,EAAElG,KAAKiE,IAAKjE,KAAKkE,QAAUlE,KAAK6T,MAAMI,iBAAiB/N,GAMnGgO,iBAAiBhO,GACb,OAAOlG,KAAK6T,MAAMK,iBAAiBhO,IAAMA,EAAElG,KAAKiE,IAAKjE,KAAKkE,QAAUlE,KAAK4T,KAAKM,iBAAiBhO,GAGnGqH,MACI,OAAOvN,KAAK4T,KAAK1G,UAAYlN,KAAOA,KAAK4T,KAAKrG,MAGlDwG,SACI,OAAO/T,KAAKuN,MAAMtJ,IAGtB+P,SACI,OAAOhU,KAAK6T,MAAM3G,UAAYlN,KAAKiE,IAAMjE,KAAK6T,MAAMG,SAGxDR,OAAOtN,EAAGsB,EAAGC,GACT,IAAImD,EAAI5K,KACR,MAAMqL,EAAI5D,EAAEvB,EAAG0E,EAAE3G,KACjB,OAAO2G,EAAIS,EAAI,EAAIT,EAAE6I,KAAK,KAAM,KAAM,KAAM7I,EAAEgJ,KAAKJ,OAAOtN,EAAGsB,EAAGC,GAAI,MAAQ,IAAM4D,EAAIT,EAAE6I,KAAK,KAAMjM,EAAG,KAAM,KAAM,MAAQoD,EAAE6I,KAAK,KAAM,KAAM,KAAM,KAAM7I,EAAEiJ,MAAML,OAAOtN,EAAGsB,EAAGC,IAC9KmD,EAAEoK,QAENC,YACI,GAAIjV,KAAK4T,KAAK1G,UAAW,OAAOoG,GAAGC,MACnC,IAAIrN,EAAIlG,KACR,OAAOkG,EAAE0N,KAAKsB,SAAWhP,EAAE0N,KAAKA,KAAKsB,UAAYhP,EAAIA,EAAEiP,eAAgBjP,EAAIA,EAAEuN,KAAK,KAAM,KAAM,KAAMvN,EAAE0N,KAAKqB,YAAa,MACxH/O,EAAE8O,QAGNrB,OAAOzN,EAAGsB,GACN,IAAIC,EAAGmD,EAAI5K,KACX,GAAIwH,EAAEtB,EAAG0E,EAAE3G,KAAO,EAAG2G,EAAEgJ,KAAK1G,WAAatC,EAAEgJ,KAAKsB,SAAWtK,EAAEgJ,KAAKA,KAAKsB,UAAYtK,EAAIA,EAAEuK,eACzFvK,EAAIA,EAAE6I,KAAK,KAAM,KAAM,KAAM7I,EAAEgJ,KAAKD,OAAOzN,EAAGsB,GAAI,UAAY,CAC1D,GAAIoD,EAAEgJ,KAAKsB,UAAYtK,EAAIA,EAAEwK,eAAgBxK,EAAEiJ,MAAM3G,WAAatC,EAAEiJ,MAAMqB,SAAWtK,EAAEiJ,MAAMD,KAAKsB,UAAYtK,EAAIA,EAAEyK,gBACpH,IAAM7N,EAAEtB,EAAG0E,EAAE3G,KAAM,CACf,GAAI2G,EAAEiJ,MAAM3G,UAAW,OAAOoG,GAAGC,MACjC9L,EAAImD,EAAEiJ,MAAMtG,MAAO3C,EAAIA,EAAE6I,KAAKhM,EAAExD,IAAKwD,EAAEvD,MAAO,KAAM,KAAM0G,EAAEiJ,MAAMoB,aAEtErK,EAAIA,EAAE6I,KAAK,KAAM,KAAM,KAAM,KAAM7I,EAAEiJ,MAAMF,OAAOzN,EAAGsB,IAEzD,OAAOoD,EAAEoK,QAEbE,QACI,OAAOlV,KAAK8U,MAGhBE,QACI,IAAI9O,EAAIlG,KACR,OAAOkG,EAAE2N,MAAMqB,UAAYhP,EAAE0N,KAAKsB,UAAYhP,EAAIA,EAAEoP,cAAepP,EAAE0N,KAAKsB,SAAWhP,EAAE0N,KAAKA,KAAKsB,UAAYhP,EAAIA,EAAEkP,eACnHlP,EAAE0N,KAAKsB,SAAWhP,EAAE2N,MAAMqB,UAAYhP,EAAIA,EAAEqP,aAAcrP,EAE9DiP,cACI,IAAIjP,EAAIlG,KAAKuV,YACb,OAAOrP,EAAE2N,MAAMD,KAAKsB,UAAYhP,EAAIA,EAAEuN,KAAK,KAAM,KAAM,KAAM,KAAMvN,EAAE2N,MAAMuB,eAC3ElP,EAAIA,EAAEoP,aAAcpP,EAAIA,EAAEqP,aAAcrP,EAE5CmP,eACI,IAAInP,EAAIlG,KAAKuV,YACb,OAAOrP,EAAE0N,KAAKA,KAAKsB,UAAYhP,EAAIA,EAAEkP,cAAelP,EAAIA,EAAEqP,aAAcrP,EAE5EoP,aACI,MAAMpP,EAAIlG,KAAKyT,KAAK,KAAM,KAAMH,GAAGyB,IAAK,KAAM/U,KAAK6T,MAAMD,MACzD,OAAO5T,KAAK6T,MAAMJ,KAAK,KAAM,KAAMzT,KAAK8U,MAAO5O,EAAG,MAEtDkP,cACI,MAAMlP,EAAIlG,KAAKyT,KAAK,KAAM,KAAMH,GAAGyB,IAAK/U,KAAK4T,KAAKC,MAAO,MACzD,OAAO7T,KAAK4T,KAAKH,KAAK,KAAM,KAAMzT,KAAK8U,MAAO,KAAM5O,GAExDqP,YACI,MAAMrP,EAAIlG,KAAK4T,KAAKH,KAAK,KAAM,MAAOzT,KAAK4T,KAAKkB,MAAO,KAAM,MAAOtN,EAAIxH,KAAK6T,MAAMJ,KAAK,KAAM,MAAOzT,KAAK6T,MAAMiB,MAAO,KAAM,MAC7H,OAAO9U,KAAKyT,KAAK,KAAM,MAAOzT,KAAK8U,MAAO5O,EAAGsB,GAGjDgO,gBACI,MAAMtP,EAAIlG,KAAKyV,QACf,OAAOnI,KAAKoI,IAAI,EAAGxP,IAAMlG,KAAK8T,KAAO,EAIzC2B,QACI,GAAIzV,KAAKkV,SAAWlV,KAAK4T,KAAKsB,QAAS,MAAMpN,IAC7C,GAAI9H,KAAK6T,MAAMqB,QAAS,MAAMpN,IAC9B,MAAM5B,EAAIlG,KAAK4T,KAAK6B,QACpB,GAAIvP,IAAMlG,KAAK6T,MAAM4B,QAAS,MAAM3N,IACpC,OAAO5B,GAAKlG,KAAKkV,QAAU,EAAI,IAOvC5B,GAAGC,MAAQ,KAAMD,GAAGyB,KAAM,EAAIzB,GAAGI,OAAQ,EAGzCJ,GAAGC,MAAQ,IAEX,MACI1Q,cACI7C,KAAK8T,KAAO,EAEZ7P,UACA,MAAM6D,IAEN5D,YACA,MAAM4D,IAENgN,YACA,MAAMhN,IAEN8L,WACA,MAAM9L,IAEN+L,YACA,MAAM/L,IAGV2L,KAAKvN,EAAGsB,EAAGC,EAAGmD,EAAGS,GACb,OAAOrL,KAGXwT,OAAOtN,EAAGsB,EAAGC,GACT,OAAO,IAAI6L,GAAGpN,EAAGsB,GAGrBmM,OAAOzN,EAAGsB,GACN,OAAOxH,KAEXkN,UACI,OAAO,EAEX+G,iBAAiB/N,GACb,OAAO,EAEXgO,iBAAiBhO,GACb,OAAO,EAEX6N,SACI,OAAO,KAEXC,SACI,OAAO,KAEXkB,QACI,OAAO,EAGXM,gBACI,OAAO,EAEXC,QACI,OAAO,IA2Bf,MAAME,GACF9S,YAAYqD,GACRlG,KAAKuM,WAAarG,EAAGlG,KAAK4D,KAAO,IAAIwP,GAAGpT,KAAKuM,YAEjDqJ,IAAI1P,GACA,OAAO,OAASlG,KAAK4D,KAAKqJ,IAAI/G,GAElC2P,QACI,OAAO7V,KAAK4D,KAAKmQ,SAErB+B,OACI,OAAO9V,KAAK4D,KAAKoQ,SAEjBF,WACA,OAAO9T,KAAK4D,KAAKkQ,KAErBpG,QAAQxH,GACJ,OAAOlG,KAAK4D,KAAK8J,QAAQxH,GAEgCyG,QAAQzG,GACjElG,KAAK4D,KAAKqQ,kBAAkB,CAACzM,EAAGC,KAAOvB,EAAEsB,IAAI,KAE6BuO,eAAe7P,EAAGsB,GAC5F,MAAMC,EAAIzH,KAAK4D,KAAKyQ,gBAAgBnO,EAAE,IACtC,KAAMuB,EAAEmN,WAAa,CACjB,MAAMhK,EAAInD,EAAEiN,UACZ,GAAI1U,KAAKuM,WAAW3B,EAAE3G,IAAKiC,EAAE,KAAO,EAAG,OACvCsB,EAAEoD,EAAE3G,MAKL+R,aAAa9P,EAAGsB,GACnB,IAAIC,EACJ,IAAKA,OAAI,IAAWD,EAAIxH,KAAK4D,KAAKyQ,gBAAgB7M,GAAKxH,KAAK4D,KAAKuQ,cAAe1M,EAAEmN,WAC9E,IAAK1O,EAAEuB,EAAEiN,UAAUzQ,KAAM,OAGkCgS,kBAAkB/P,GACjF,MAAMsB,EAAIxH,KAAK4D,KAAKyQ,gBAAgBnO,GACpC,OAAOsB,EAAEoN,UAAYpN,EAAEkN,UAAUzQ,IAAM,KAE3CkQ,cACI,OAAO,IAAI+B,GAAGlW,KAAK4D,KAAKuQ,eAE5BE,gBAAgBnO,GACZ,OAAO,IAAIgQ,GAAGlW,KAAK4D,KAAKyQ,gBAAgBnO,IAEJiQ,IAAIjQ,GACxC,OAAOlG,KAAKyT,KAAKzT,KAAK4D,KAAK+P,OAAOzN,GAAGsN,OAAOtN,GAAG,IAEtBkQ,OAAOlQ,GAChC,OAAOlG,KAAK4V,IAAI1P,GAAKlG,KAAKyT,KAAKzT,KAAK4D,KAAK+P,OAAOzN,IAAMlG,KAE1DkN,UACI,OAAOlN,KAAK4D,KAAKsJ,UAErBmJ,UAAUnQ,GACN,IAAIsB,EAAIxH,KAEA,OAAOwH,EAAEsM,KAAO5N,EAAE4N,OAAStM,EAAItB,EAAGA,EAAIlG,MAAOkG,EAAEyG,SAASzG,IAC5DsB,EAAIA,EAAE2O,IAAIjQ,MACTsB,EAETlB,QAAQJ,GACJ,KAAMA,aAAayP,IAAK,OAAO,EAC/B,GAAI3V,KAAK8T,OAAS5N,EAAE4N,KAAM,OAAO,EACjC,MAAMtM,EAAIxH,KAAK4D,KAAKuQ,cAAe1M,EAAIvB,EAAEtC,KAAKuQ,cAC9C,KAAM3M,EAAEoN,WAAa,CACjB,MAAM1O,EAAIsB,EAAEkN,UAAUzQ,IAAK2G,EAAInD,EAAEiN,UAAUzQ,IAC3C,GAAI,IAAMjE,KAAKuM,WAAWrG,EAAG0E,GAAI,OAAO,EAE5C,OAAO,EAEXyC,UACI,MAAMnH,EAAI,GACV,OAAOlG,KAAK2M,SAASnF,IACjBtB,EAAE5E,KAAKkG,MACNtB,EAET8C,WACI,MAAM9C,EAAI,GACV,OAAOlG,KAAK2M,SAASnF,GAAKtB,EAAE5E,KAAKkG,KAAM,aAAetB,EAAE8C,WAAa,IAEzEyK,KAAKvN,GACD,MAAMsB,EAAI,IAAImO,GAAG3V,KAAKuM,YACtB,OAAO/E,EAAE5D,KAAOsC,EAAGsB,GAI3B,MAAM0O,GACFrT,YAAYqD,GACRlG,KAAKsW,KAAOpQ,EAEhBwO,UACI,OAAO1U,KAAKsW,KAAK5B,UAAUzQ,IAE/B2Q,UACI,OAAO5U,KAAKsW,KAAK1B,WA6BrB,MAAM2B,GACN1T,YAAYqD,GACRlG,KAAKwW,OAAStQ,EAGdA,EAAEuQ,KAAK3I,GAAGvB,YAEdN,eACI,OAAO,IAAIsK,GAAG,IAKXF,UAAUnQ,GACb,IAAIsB,EAAI,IAAImO,GAAG7H,GAAGvB,YAClB,IAAK,MAAMrG,KAAKlG,KAAKwW,OAAQhP,EAAIA,EAAE2O,IAAIjQ,GACvC,IAAK,MAAMuB,KAAKvB,EAAGsB,EAAIA,EAAE2O,IAAI1O,GAC7B,OAAO,IAAI8O,GAAG/O,EAAE6F,WAObqJ,OAAOxQ,GACV,IAAK,MAAMsB,KAAKxH,KAAKwW,OAAQ,GAAIhP,EAAE2F,WAAWjH,GAAI,OAAO,EACzD,OAAO,EAEXI,QAAQJ,GACJ,OAAO4L,GAAG9R,KAAKwW,OAAQtQ,EAAEsQ,QAAM,CAAItQ,EAAGsB,IAAMtB,EAAEI,QAAQkB,MA8C9D,MAAMmP,GACF9T,YAAYqD,GACRlG,KAAK4W,aAAe1Q,EAExB+F,wBAAwB/F,GACpB,MAAMsB,EAAIrH,KAAK+F,GACf,OAAO,IAAIyQ,GAAGnP,GAElByE,sBAAsB/F,GAGlB,MAAMsB,EAIN,SAAStB,GACL,IAAIsB,EAAI,GACR,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAAE5G,SAAUmI,EAAGD,GAAK1F,OAAOC,aAAamE,EAAEuB,IAC9D,OAAOD,EAHX,CAOHtB,GACG,OAAO,IAAIyQ,GAAGnP,GAElB,CAACqP,OAAOC,YACJ,IAAI5Q,EAAI,EACR,MAAO,CACH6Q,KAAM,IAAM7Q,EAAIlG,KAAK4W,aAAatX,OAAS,CACvC4E,MAAOlE,KAAK4W,aAAapX,WAAW0G,KACpC8Q,MAAM,GACN,CACA9S,WAAO,EACP8S,MAAM,IAIlBC,WACI,OAAO/Q,EAAIlG,KAAK4W,aAAcnV,KAAKyE,GAEnC,IAAIA,EAERgR,eACI,OAAO,SAAShR,GACZ,MAAMsB,EAAI,IAAIgK,WAAWtL,EAAE5G,QAC3B,IAAK,IAAImI,EAAI,EAAGA,EAAIvB,EAAE5G,OAAQmI,IAAKD,EAAEC,GAAKvB,EAAE1G,WAAWiI,GACvD,OAAOD,EAHJ,CAsBNxH,KAAK4W,cAEVO,sBACI,OAAO,EAAInX,KAAK4W,aAAatX,OAEjCuT,UAAU3M,GACN,OAAO2L,GAAG7R,KAAK4W,aAAc1Q,EAAE0Q,cAEnCtQ,QAAQJ,GACJ,OAAOlG,KAAK4W,eAAiB1Q,EAAE0Q,cAIvCD,GAAGS,kBAAoB,IAAIT,GAAG,IAE9B,MAAMU,GAAK,IAAIC,OAAO,iDAKlB,SAASC,GAAGrR,GAIZ,GAAI6B,IAAI7B,GAAI,iBAAmBA,EAAG,CAI9B,IAAIsB,EAAI,EACR,MAAMC,EAAI4P,GAAGG,KAAKtR,GAClB,GAAI6B,IAAIN,GAAIA,EAAE,GAAI,CAEd,IAAIvB,EAAIuB,EAAE,GACVvB,GAAKA,EAAI,aAAauR,OAAO,EAAG,GAAIjQ,EAAIkQ,OAAOxR,GAG3C,MAAM0E,EAAI,IAAI/E,KAAKK,GAC3B,MAAO,CACH+L,QAAS3E,KAAKoE,MAAM9G,EAAEwH,UAAY,KAClCuF,MAAOnQ,GAGf,MAAO,CACHyK,QAAS2F,GAAG1R,EAAE+L,SACd0F,MAAOC,GAAG1R,EAAEyR,QAOhB,SAASC,GAAG1R,GAEZ,MAAO,iBAAmBA,EAAIA,EAAI,iBAAmBA,EAAIwR,OAAOxR,GAAK,EAGH,SAAS2R,GAAG3R,GAC9E,MAAO,iBAAmBA,EAAIyQ,GAAGmB,iBAAiB5R,GAAKyQ,GAAGoB,eAAe7R,GAoCzE,SAAS8R,GAAG9R,GACZ,IAAIsB,EAAGC,EACP,MAAO,sBAAwB,QAAUA,IAAM,QAAUD,EAAI,MAAQtB,OAAI,EAASA,EAAE+R,gBAAa,IAAWzQ,OAAI,EAASA,EAAEgP,SAAW,IAAI0B,gBAAa,IAAWzQ,OAAI,EAASA,EAAE0Q,aAQjL,SAASC,GAAGlS,GACZ,MAAMsB,EAAItB,EAAE+R,SAASzB,OAAO6B,mBAC5B,OAAOL,GAAGxQ,GAAK4Q,GAAG5Q,GAAKA,EAKvB,SAAS8Q,GAAGpS,GACZ,MAAMsB,EAAI+P,GAAGrR,EAAE+R,SAASzB,OAAO+B,qBAAqBC,gBACpD,OAAO,IAAIxG,GAAGxK,EAAEyK,QAASzK,EAAEmQ,OAkB3B,MAAMc,GAAK,CACXjC,OAAQ,CACJ0B,SAAU,CACNC,YAAa,aAMzB,SAASO,GAAGxS,GACR,MAAO,cAAeA,EAAI,EAAoB,iBAAkBA,EAAI,EAAuB,iBAAkBA,GAAK,gBAAiBA,EAAI,EAAsB,mBAAoBA,EAAI,EAAyB,gBAAiBA,EAAI,EAAsB,eAAgBA,EAAI,EAAoB,mBAAoBA,EAAI,EAAmB,kBAAmBA,EAAI,EAAwB,eAAgBA,EAAI,EAAqB,aAAcA,EAAI8R,GAAG9R,GAAK,EAE9b,SAASA,GACL,MAAO,eAAiBA,EAAE+R,UAAY,IAAIzB,QAAU,IAAI0B,UAAY,IAAIC,YAD5E,CAsBCjS,GAAK,iBAAkC,GAAuB4B,IAGU,SAAS6Q,GAAGzS,EAAGsB,GACxF,GAAItB,IAAMsB,EAAG,OAAO,EACpB,MAAMC,EAAIiR,GAAGxS,GACb,GAAIuB,IAAMiR,GAAGlR,GAAI,OAAO,EACxB,OAAQC,GACN,KAAK,EACL,KAAK,iBACH,OAAO,EAET,KAAK,EACH,OAAOvB,EAAE0S,eAAiBpR,EAAEoR,aAE9B,KAAK,EACH,OAAON,GAAGpS,GAAGI,QAAQgS,GAAG9Q,IAE1B,KAAK,EACH,OAAO,SAAStB,EAAGsB,GACf,GAAI,iBAAmBtB,EAAEsS,gBAAkB,iBAAmBhR,EAAEgR,gBAAkBtS,EAAEsS,eAAelZ,SAAWkI,EAAEgR,eAAelZ,OAE/H,OAAO4G,EAAEsS,iBAAmBhR,EAAEgR,eAC9B,MAAM/Q,EAAI8P,GAAGrR,EAAEsS,gBAAiB5N,EAAI2M,GAAG/P,EAAEgR,gBACzC,OAAO/Q,EAAEwK,UAAYrH,EAAEqH,SAAWxK,EAAEkQ,QAAU/M,EAAE+M,MAL7C,CAMLzR,EAAGsB,GAEP,KAAK,EACH,OAAOtB,EAAEiS,cAAgB3Q,EAAE2Q,YAE7B,KAAK,EACH,OAAO,SAASjS,EAAGsB,GACf,OAAOqQ,GAAG3R,EAAE2S,YAAYvS,QAAQuR,GAAGrQ,EAAEqR,aADlC,CAEL3S,EAAGsB,GAEP,KAAK,EACH,OAAOtB,EAAE4S,iBAAmBtR,EAAEsR,eAEhC,KAAK,EACH,OAAO,SAAS5S,EAAGsB,GACf,OAAOoQ,GAAG1R,EAAE6S,cAAcC,YAAcpB,GAAGpQ,EAAEuR,cAAcC,WAAapB,GAAG1R,EAAE6S,cAAcE,aAAerB,GAAGpQ,EAAEuR,cAAcE,WAD1H,CAEL/S,EAAGsB,GAEP,KAAK,EACH,OAAO,SAAStB,EAAGsB,GACf,GAAI,iBAAkBtB,GAAK,iBAAkBsB,EAAG,OAAOoQ,GAAG1R,EAAEgT,gBAAkBtB,GAAGpQ,EAAE0R,cACnF,GAAI,gBAAiBhT,GAAK,gBAAiBsB,EAAG,CAC1C,MAAMC,EAAImQ,GAAG1R,EAAEiT,aAAcvO,EAAIgN,GAAGpQ,EAAE2R,aACtC,OAAO1R,IAAMmD,EAAIuE,GAAG1H,KAAO0H,GAAGvE,GAAKwO,MAAM3R,IAAM2R,MAAMxO,GAEzD,OAAO,EANJ,CAOL1E,EAAGsB,GAEP,KAAK,EACH,OAAOsK,GAAG5L,EAAEmT,WAAWC,QAAU,GAAI9R,EAAE6R,WAAWC,QAAU,GAAIX,IAElE,KAAK,GACH,OAAO,SAASzS,EAAGsB,GACf,MAAMC,EAAIvB,EAAE+R,SAASzB,QAAU,GAAI5L,EAAIpD,EAAEyQ,SAASzB,QAAU,GAC5D,GAAIxD,GAAGvL,KAAOuL,GAAGpI,GAAI,OAAO,EAC5B,IAAK,MAAM1E,KAAKuB,EAAG,GAAIA,EAAEwL,eAAe/M,UAAO,IAAW0E,EAAE1E,KAAOyS,GAAGlR,EAAEvB,GAAI0E,EAAE1E,KAAM,OAAO,EAC3F,OAAO,EAJJ,CAMgEA,EAAGsB,GAE5E,QACE,OAAOM,KAIf,SAASyR,GAAGrT,EAAGsB,GACX,YAAO,KAAYtB,EAAEoT,QAAU,IAAIE,MAAMtT,GAAKyS,GAAGzS,EAAGsB,KAGxD,SAASiS,GAAGvT,EAAGsB,GACX,GAAItB,IAAMsB,EAAG,OAAO,EACpB,MAAMC,EAAIiR,GAAGxS,GAAI0E,EAAI8N,GAAGlR,GACxB,GAAIC,IAAMmD,EAAG,OAAOiH,GAAGpK,EAAGmD,GAC1B,OAAQnD,GACN,KAAK,EACL,KAAK,iBACH,OAAO,EAET,KAAK,EACH,OAAOoK,GAAG3L,EAAE0S,aAAcpR,EAAEoR,cAE9B,KAAK,EACH,OAAO,SAAS1S,EAAGsB,GACf,MAAMC,EAAImQ,GAAG1R,EAAEgT,cAAgBhT,EAAEiT,aAAcvO,EAAIgN,GAAGpQ,EAAE0R,cAAgB1R,EAAE2R,aAC1E,OAAO1R,EAAImD,GAAK,EAAInD,EAAImD,EAAI,EAAInD,IAAMmD,EAAI,EAE1CwO,MAAM3R,GAAK2R,MAAMxO,GAAK,GAAK,EAAI,EAJ5B,CAKL1E,EAAGsB,GAEP,KAAK,EACH,OAAOkS,GAAGxT,EAAEsS,eAAgBhR,EAAEgR,gBAEhC,KAAK,EACH,OAAOkB,GAAGpB,GAAGpS,GAAIoS,GAAG9Q,IAEtB,KAAK,EACH,OAAOqK,GAAG3L,EAAEiS,YAAa3Q,EAAE2Q,aAE7B,KAAK,EACH,OAAO,SAASjS,EAAGsB,GACf,MAAMC,EAAIoQ,GAAG3R,GAAI0E,EAAIiN,GAAGrQ,GACxB,OAAOC,EAAEoL,UAAUjI,GAFhB,CAGL1E,EAAE2S,WAAYrR,EAAEqR,YAEpB,KAAK,EACH,OAAO,SAAS3S,EAAGsB,GACf,MAAMC,EAAIvB,EAAEyH,MAAM,KAAM/C,EAAIpD,EAAEmG,MAAM,KACpC,IAAK,IAAIzH,EAAI,EAAGA,EAAIuB,EAAEnI,QAAU4G,EAAI0E,EAAEtL,OAAQ4G,IAAK,CAC/C,MAAMsB,EAAIqK,GAAGpK,EAAEvB,GAAI0E,EAAE1E,IACrB,GAAI,IAAMsB,EAAG,OAAOA,EAExB,OAAOqK,GAAGpK,EAAEnI,OAAQsL,EAAEtL,QANnB,CAOL4G,EAAE4S,eAAgBtR,EAAEsR,gBAExB,KAAK,EACH,OAAO,SAAS5S,EAAGsB,GACf,MAAMC,EAAIoK,GAAG+F,GAAG1R,EAAE8S,UAAWpB,GAAGpQ,EAAEwR,WAClC,OAAI,IAAMvR,EAAUA,EACboK,GAAG+F,GAAG1R,EAAE+S,WAAYrB,GAAGpQ,EAAEyR,YAH7B,CAIL/S,EAAE6S,cAAevR,EAAEuR,eAEvB,KAAK,EACH,OAAO,SAAS7S,EAAGsB,GACf,MAAMC,EAAIvB,EAAEoT,QAAU,GAAI1O,EAAIpD,EAAE8R,QAAU,GAC1C,IAAK,IAAIpT,EAAI,EAAGA,EAAIuB,EAAEnI,QAAU4G,EAAI0E,EAAEtL,SAAU4G,EAAG,CAC/C,MAAMsB,EAAIiS,GAAGhS,EAAEvB,GAAI0E,EAAE1E,IACrB,GAAIsB,EAAG,OAAOA,EAElB,OAAOqK,GAAGpK,EAAEnI,OAAQsL,EAAEtL,QANnB,CAOL4G,EAAEmT,WAAY7R,EAAE6R,YAEpB,KAAK,GACH,OAAO,SAASnT,EAAGsB,GACf,GAAItB,IAAMuS,IAAMjR,IAAMiR,GAAI,OAAO,EACjC,GAAIvS,IAAMuS,GAAI,OAAO,EACrB,GAAIjR,IAAMiR,GAAI,OAAQ,EACtB,MAAMhR,EAAIvB,EAAEsQ,QAAU,GAAI5L,EAAIzH,OAAOwW,KAAKlS,GAAI4D,EAAI7D,EAAEgP,QAAU,GAAInX,EAAI8D,OAAOwW,KAAKtO,GAKlFT,EAAE6L,OAAQpX,EAAEoX,OACZ,IAAK,IAAIvQ,EAAI,EAAGA,EAAI0E,EAAEtL,QAAU4G,EAAI7G,EAAEC,SAAU4G,EAAG,CAC/C,MAAMsB,EAAIqK,GAAGjH,EAAE1E,GAAI7G,EAAE6G,IACrB,GAAI,IAAMsB,EAAG,OAAOA,EACpB,MAAMqD,EAAI4O,GAAGhS,EAAEmD,EAAE1E,IAAKmF,EAAEhM,EAAE6G,KAC1B,GAAI,IAAM2E,EAAG,OAAOA,EAExB,OAAOgH,GAAGjH,EAAEtL,OAAQD,EAAEC,QAhBnB,CAkB8D4G,EAAE+R,SAAUzQ,EAAEyQ,UAErF,QACE,MAAMnQ,KAId,SAAS4R,GAAGxT,EAAGsB,GACX,GAAI,iBAAmBtB,GAAK,iBAAmBsB,GAAKtB,EAAE5G,SAAWkI,EAAElI,OAAQ,OAAOuS,GAAG3L,EAAGsB,GACxF,MAAMC,EAAI8P,GAAGrR,GAAI0E,EAAI2M,GAAG/P,GAAI6D,EAAIwG,GAAGpK,EAAEwK,QAASrH,EAAEqH,SAChD,OAAO,IAAM5G,EAAIA,EAAIwG,GAAGpK,EAAEkQ,MAAO/M,EAAE+M,OAGvC,SAASiC,GAAG1T,EAAGsB,GACX,MAAO,CACHsR,eAAgB,YAAY5S,EAAE6F,uBAAuB7F,EAAE8F,sBAAsBxE,EAAE2G,KAAKV,qBAI3C,SAASoM,GAAG3T,GACzD,QAASA,GAAK,eAAgBA,EAGa,SAAS4T,GAAG5T,GACvD,QAASA,GAAK,cAAeA,EAGM,SAAS6T,GAAG7T,GAC/C,QAASA,GAAK,gBAAiBA,GAAKkT,MAAM1B,OAAOxR,EAAEiT,cAGT,SAASa,GAAG9T,GACtD,QAASA,GAAK,aAAcA,EAGQ,SAAS+T,GAAG/T,GAChD,GAAIA,EAAE6S,cAAe,MAAO,CACxBA,cAAe5V,OAAO+W,OAAO,GAAIhU,EAAE6S,gBAEvC,GAAI7S,EAAEsS,gBAAkB,iBAAmBtS,EAAEsS,eAAgB,MAAO,CAChEA,eAAgBrV,OAAO+W,OAAO,GAAIhU,EAAEsS,iBAExC,GAAItS,EAAE+R,SAAU,CACZ,MAAMzQ,EAAI,CACNyQ,SAAU,CACNzB,OAAQ,KAGhB,OAAOrD,GAAGjN,EAAE+R,SAASzB,QAAS,CAACtQ,EAAGuB,IAAMD,EAAEyQ,SAASzB,OAAOtQ,GAAK+T,GAAGxS,KAAMD,EAE5E,GAAItB,EAAEmT,WAAY,CACd,MAAM7R,EAAI,CACN6R,WAAY,CACRC,OAAQ,KAGhB,IAAK,IAAI7R,EAAI,EAAGA,GAAKvB,EAAEmT,WAAWC,QAAU,IAAIha,SAAUmI,EAAGD,EAAE6R,WAAWC,OAAO7R,GAAKwS,GAAG/T,EAAEmT,WAAWC,OAAO7R,IAC7G,OAAOD,EAEX,OAAOrE,OAAO+W,OAAO,GAAIhU,GAG7B,MAAMiU,GACFtX,YAAYqD,GACRlG,KAAKkE,MAAQgC,EAEjB+F,eACI,OAAO,IAAIkO,GAAG,CACVlC,SAAU,KAQXmC,MAAMlU,GACT,GAAIA,EAAEgH,UAAW,OAAOlN,KAAKkE,MAC7B,CACI,IAAIsD,EAAIxH,KAAKkE,MACb,IAAK,IAAIuD,EAAI,EAAGA,EAAIvB,EAAE5G,OAAS,IAAKmI,EAAG,GAAID,GAAKA,EAAEyQ,SAASzB,QAAU,IAAItQ,EAAE+G,IAAIxF,KAC9EuS,GAAGxS,GAAI,OAAO,KACf,OAAOA,GAAKA,EAAEyQ,SAASzB,QAAU,IAAItQ,EAAE8G,eAAgBxF,GAAK,MAQ7DmC,IAAIzD,EAAGsB,GACVxH,KAAKqa,aAAanU,EAAE4G,WAAW5G,EAAE8G,eAAiBiN,GAAGzS,GAMlD8S,OAAOpU,GACV,IAAIsB,EAAIsG,GAAGO,YAAa5G,EAAI,GAAImD,EAAI,GACpC1E,EAAEyG,SAAO,CAAGzG,EAAGmF,KACX,IAAK7D,EAAE4F,oBAAoB/B,GAAI,CAE3B,MAAMnF,EAAIlG,KAAKqa,aAAa7S,GAC5BxH,KAAKua,aAAarU,EAAGuB,EAAGmD,GAAInD,EAAI,GAAImD,EAAI,GAAIpD,EAAI6D,EAAEyB,UAEtD5G,EAAIuB,EAAE4D,EAAE2B,eAAiBiN,GAAG/T,GAAK0E,EAAEtJ,KAAK+J,EAAE2B,kBAE9C,MAAM3B,EAAIrL,KAAKqa,aAAa7S,GAC5BxH,KAAKua,aAAalP,EAAG5D,EAAGmD,GAOrBwL,OAAOlQ,GACV,MAAMsB,EAAIxH,KAAKoa,MAAMlU,EAAE4G,WACvBkN,GAAGxS,IAAMA,EAAEyQ,SAASzB,eAAiBhP,EAAEyQ,SAASzB,OAAOtQ,EAAE8G,eAE7D1G,QAAQJ,GACJ,OAAOyS,GAAG3Y,KAAKkE,MAAOgC,EAAEhC,OAKrBmW,aAAanU,GAChB,IAAIsB,EAAIxH,KAAKkE,MACbsD,EAAEyQ,SAASzB,SAAWhP,EAAEyQ,SAAW,CAC/BzB,OAAQ,KAEZ,IAAK,IAAI/O,EAAI,EAAGA,EAAIvB,EAAE5G,SAAUmI,EAAG,CAC/B,IAAImD,EAAIpD,EAAEyQ,SAASzB,OAAOtQ,EAAE+G,IAAIxF,IAChCuS,GAAGpP,IAAMA,EAAEqN,SAASzB,SAAW5L,EAAI,CAC/BqN,SAAU,CACNzB,OAAQ,KAEbhP,EAAEyQ,SAASzB,OAAOtQ,EAAE+G,IAAIxF,IAAMmD,GAAIpD,EAAIoD,EAE7C,OAAOpD,EAAEyQ,SAASzB,OAKf+D,aAAarU,EAAGsB,EAAGC,GACtB0L,GAAG3L,GAAI,CAACA,EAAGC,IAAMvB,EAAEsB,GAAKC,IACxB,IAAK,MAAMD,KAAKC,SAAUvB,EAAEsB,GAEhCgT,QACI,OAAO,IAAIL,GAAGF,GAAGja,KAAKkE,SA6B1B,MAAMuW,GACN5X,YAAYqD,EAAGsB,EAAGC,EAAGmD,EAAGS,EAAGhM,GACvBW,KAAKiE,IAAMiC,EAAGlG,KAAK0a,aAAelT,EAAGxH,KAAK2a,QAAUlT,EAAGzH,KAAK4a,SAAWhQ,EAAG5K,KAAK4D,KAAOyH,EACtFrL,KAAK6a,cAAgBxb,EAKlB4M,0BAA0B/F,GAC7B,OAAO,IAAIuU,GAAGvU,EAAG,EAAkByM,GAAGpF,MAAOoF,GAAGpF,MAAO4M,GAAGW,QAAS,GAKhE7O,wBAAwB/F,EAAGsB,EAAGC,GACjC,OAAO,IAAIgT,GAAGvU,EAAG,EAAyBsB,EAAGmL,GAAGpF,MAAO9F,EAAG,GAEoBwE,qBAAqB/F,EAAGsB,GACtG,OAAO,IAAIiT,GAAGvU,EAAG,EAAsBsB,EAAGmL,GAAGpF,MAAO4M,GAAGW,QAAS,GAM7D7O,0BAA0B/F,EAAGsB,GAChC,OAAO,IAAIiT,GAAGvU,EAAG,EAA2BsB,EAAGmL,GAAGpF,MAAO4M,GAAGW,QAAS,GAKlEC,uBAAuB7U,EAAGsB,GAC7B,OAAOxH,KAAK2a,QAAUzU,EAAGlG,KAAK0a,aAAe,EAAyB1a,KAAK4D,KAAO4D,EAClFxH,KAAK6a,cAAgB,EAAiB7a,KAKnCgb,oBAAoB9U,GACvB,OAAOlG,KAAK2a,QAAUzU,EAAGlG,KAAK0a,aAAe,EAAsB1a,KAAK4D,KAAOuW,GAAGW,QAClF9a,KAAK6a,cAAgB,EAAiB7a,KAMnCib,yBAAyB/U,GAC5B,OAAOlG,KAAK2a,QAAUzU,EAAGlG,KAAK0a,aAAe,EAA2B1a,KAAK4D,KAAOuW,GAAGW,QACvF9a,KAAK6a,cAAgB,EAAkC7a,KAE3Dkb,2BACI,OAAOlb,KAAK6a,cAAgB,EAAkC7a,KAElEmb,uBACI,OAAOnb,KAAK6a,cAAgB,EAA8B7a,KAAK2a,QAAUhI,GAAGpF,MAC5EvN,KAEJob,YAAYlV,GACR,OAAOlG,KAAK4a,SAAW1U,EAAGlG,KAE1Bqb,wBACA,OAAO,IAAgCrb,KAAK6a,cAE5CS,4BACA,OAAO,IAAoCtb,KAAK6a,cAEhDU,uBACA,OAAOvb,KAAKqb,mBAAqBrb,KAAKsb,sBAE1CE,kBACI,OAAO,IAAoBxb,KAAK0a,aAEpCe,kBACI,OAAO,IAA2Bzb,KAAK0a,aAE3CgB,eACI,OAAO,IAAwB1b,KAAK0a,aAExCiB,oBACI,OAAO,IAA6B3b,KAAK0a,aAE7CpU,QAAQJ,GACJ,OAAOA,aAAauU,IAAMza,KAAKiE,IAAIqC,QAAQJ,EAAEjC,MAAQjE,KAAK2a,QAAQrU,QAAQJ,EAAEyU,UAAY3a,KAAK0a,eAAiBxU,EAAEwU,cAAgB1a,KAAK6a,gBAAkB3U,EAAE2U,eAAiB7a,KAAK4D,KAAK0C,QAAQJ,EAAEtC,MAElMgY,cACI,OAAO,IAAInB,GAAGza,KAAKiE,IAAKjE,KAAK0a,aAAc1a,KAAK2a,QAAS3a,KAAK4a,SAAU5a,KAAK4D,KAAK4W,QAASxa,KAAK6a,eAEpG7R,WACI,MAAO,YAAYhJ,KAAKiE,QAAQjE,KAAK2a,YAAY/S,KAAKC,UAAU7H,KAAK4D,KAAKM,0BAA0BlE,KAAK0a,mCAAmC1a,KAAK6a,mBAqBzJ,MAAMgB,GACFhZ,YAAYqD,EAAGsB,EAAI,KAAMC,EAAI,GAAImD,EAAI,GAAIS,EAAI,KAAMhM,EAAI,KAAMwL,EAAI,MAC7D7K,KAAKmO,KAAOjI,EAAGlG,KAAKsO,gBAAkB9G,EAAGxH,KAAK8b,QAAUrU,EAAGzH,KAAK+b,QAAUnR,EAAG5K,KAAK0M,MAAQrB,EAC1FrL,KAAKgc,QAAU3c,EAAGW,KAAKic,MAAQpR,EAAG7K,KAAKuI,EAAI,MAW/C,SAAS2T,GAAGhW,EAAGsB,EAAI,KAAMC,EAAI,GAAImD,EAAI,GAAIS,EAAI,KAAMhM,EAAI,KAAMwL,EAAI,MACjE,OAAO,IAAIgR,GAAG3V,EAAGsB,EAAGC,EAAGmD,EAAGS,EAAGhM,EAAGwL,GAGpC,MAAMsR,WAAW,QACbtZ,YAAYqD,EAAGsB,EAAGC,GACdxE,QAASjD,KAAKoa,MAAQlU,EAAGlG,KAAKoc,GAAK5U,EAAGxH,KAAKkE,MAAQuD,EAIhDwE,cAAc/F,EAAGsB,EAAGC,GACvB,OAAOvB,EAAE+H,aAAe,OAAkBzG,GAAK,WAA0BA,EAAIxH,KAAKwI,EAAEtC,EAAGsB,EAAGC,GAAK,IAAI4U,GAAGnW,EAAGsB,EAAGC,GAAK,mBAA0CD,EAAI,IAAI8U,GAAGpW,EAAGuB,GAAK,OAAkBD,EAAI,IAAI+U,GAAGrW,EAAGuB,GAAK,WAA0BD,EAAI,IAAIgV,GAAGtW,EAAGuB,GAAK,uBAAkDD,EAAI,IAAIiV,GAAGvW,EAAGuB,GAAK,IAAI0U,GAAGjW,EAAGsB,EAAGC,GAEtVwE,SAAS/F,EAAGsB,EAAGC,GACX,MAAO,OAAkBD,EAAI,IAAIkV,GAAGxW,EAAGuB,GAAK,IAAIkV,GAAGzW,EAAGuB,GAE1DmV,QAAQ1W,GACJ,MAAMsB,EAAItB,EAAEtC,KAAKwW,MAAMpa,KAAKoa,OAEpB,MAAO,OAAyBpa,KAAKoc,GAAK,OAAS5U,GAAKxH,KAAK0I,EAAE+Q,GAAGjS,EAAGxH,KAAKkE,QAAU,OAASsD,GAAKkR,GAAG1Y,KAAKkE,SAAWwU,GAAGlR,IAAMxH,KAAK0I,EAAE+Q,GAAGjS,EAAGxH,KAAKkE,QAG5JwE,EAAExC,GACE,OAAQlG,KAAKoc,IACX,IAAK,IACH,OAAOlW,EAAI,EAEb,IAAK,KACH,OAAOA,GAAK,EAEd,IAAK,KACH,OAAO,IAAMA,EAEf,IAAK,KACH,OAAO,IAAMA,EAEf,IAAK,IACH,OAAOA,EAAI,EAEb,IAAK,KACH,OAAOA,GAAK,EAEd,QACE,OAAO4B,KAGfa,IACI,MAAO,CAAE,IAAsB,KAAgC,IAAyB,KAAmC,KAAuB,UAAwB+E,QAAQ1N,KAAKoc,KAAO,GAKtM,MAAMC,WAAWF,GACbtZ,YAAYqD,EAAGsB,EAAGC,GACdxE,MAAMiD,EAAGsB,EAAGC,GAAIzH,KAAKiE,IAAMiK,GAAG2O,SAASpV,EAAEqR,gBAE7C8D,QAAQ1W,GACJ,MAAMsB,EAAI0G,GAAG3B,WAAWrG,EAAEjC,IAAKjE,KAAKiE,KACpC,OAAOjE,KAAK0I,EAAElB,IAIoC,MAAMkV,WAAWP,GACvEtZ,YAAYqD,EAAGsB,GACXvE,MAAMiD,EAAG,KAAgBsB,GAAIxH,KAAK2Z,KAAOmD,GAAG,KAAgBtV,GAEhEoV,QAAQ1W,GACJ,OAAOlG,KAAK2Z,KAAKoD,MAAMvV,GAAKA,EAAElB,QAAQJ,EAAEjC,QAIsB,MAAM0Y,WAAWR,GACnFtZ,YAAYqD,EAAGsB,GACXvE,MAAMiD,EAAG,SAAwBsB,GAAIxH,KAAK2Z,KAAOmD,GAAG,SAAwBtV,GAEhFoV,QAAQ1W,GACJ,OAAQlG,KAAK2Z,KAAKoD,MAAMvV,GAAKA,EAAElB,QAAQJ,EAAEjC,QAIjD,SAAS6Y,GAAG5W,EAAGsB,GACX,IAAIC,EACJ,QAAS,QAAUA,EAAID,EAAE6R,kBAAe,IAAW5R,OAAI,EAASA,EAAE6R,SAAW,IAAI5R,KAAKxB,GAAKgI,GAAG2O,SAAS3W,EAAE4S,kBAGhD,MAAMwD,WAAWH,GAC1EtZ,YAAYqD,EAAGsB,GACXvE,MAAMiD,EAAG,iBAAwCsB,GAErDoV,QAAQ1W,GACJ,MAAMsB,EAAItB,EAAEtC,KAAKwW,MAAMpa,KAAKoa,OAC5B,OAAOP,GAAGrS,IAAM+R,GAAG/R,EAAE6R,WAAYrZ,KAAKkE,QAIG,MAAMqY,WAAWJ,GAC9DtZ,YAAYqD,EAAGsB,GACXvE,MAAMiD,EAAG,KAAgBsB,GAE7BoV,QAAQ1W,GACJ,MAAMsB,EAAItB,EAAEtC,KAAKwW,MAAMpa,KAAKoa,OAC5B,OAAO,OAAS5S,GAAK+R,GAAGvZ,KAAKkE,MAAMmV,WAAY7R,IAIF,MAAMgV,WAAWL,GAClEtZ,YAAYqD,EAAGsB,GACXvE,MAAMiD,EAAG,SAAwBsB,GAErCoV,QAAQ1W,GACJ,GAAIqT,GAAGvZ,KAAKkE,MAAMmV,WAAY,CAC1B2D,UAAW,eACX,OAAO,EACX,MAAMxV,EAAItB,EAAEtC,KAAKwW,MAAMpa,KAAKoa,OAC5B,OAAO,OAAS5S,IAAM+R,GAAGvZ,KAAKkE,MAAMmV,WAAY7R,IAIS,MAAMiV,WAAWN,GAC9EtZ,YAAYqD,EAAGsB,GACXvE,MAAMiD,EAAG,qBAAgDsB,GAE7DoV,QAAQ1W,GACJ,MAAMsB,EAAItB,EAAEtC,KAAKwW,MAAMpa,KAAKoa,OAC5B,SAAUP,GAAGrS,KAAOA,EAAE6R,WAAWC,SAAW9R,EAAE6R,WAAWC,OAAOyD,MAAM7W,GAAKqT,GAAGvZ,KAAKkE,MAAMmV,WAAYnT,MAiBzG,MAAM+W,GACNpa,YAAYqD,EAAGsB,GACXxH,KAAKkd,SAAWhX,EAAGlG,KAAKmd,UAAY3V,GAMxC,MAAM4V,GACNva,YAAYqD,EAAGsB,EAAI,OACfxH,KAAKoa,MAAQlU,EAAGlG,KAAKqd,IAAM7V,GAInC,SAAS8V,GAAGpX,EAAGsB,GACX,OAAOtB,EAAEmX,MAAQ7V,EAAE6V,KAAOnX,EAAEkU,MAAM9T,QAAQkB,EAAE4S,OAGhD,SAASmD,GAAGrX,EAAGsB,GACX,GAAI,OAAStB,EAAG,OAAO,OAASsB,EAChC,GAAI,OAASA,EAAG,OAAO,EACvB,GAAItB,EAAEiX,YAAc3V,EAAE2V,WAAajX,EAAEgX,SAAS5d,SAAWkI,EAAE0V,SAAS5d,OAAQ,OAAO,EACnF,IAAK,IAAImI,EAAI,EAAGA,EAAIvB,EAAEgX,SAAS5d,OAAQmI,IACnC,IAAKkR,GAAGzS,EAAEgX,SAASzV,GAAID,EAAE0V,SAASzV,IAAK,OAAO,EAElD,OAAO,EAyBP,MAAM+V,GAKN3a,YAAYqD,EAAGsB,EAAI,KAAMC,EAAI,GAAImD,EAAI,GAAIS,EAAI,KAAMhM,EAAI,IAAkBwL,EAAI,KAAM5I,EAAI,MACnFjC,KAAKmO,KAAOjI,EAAGlG,KAAKsO,gBAAkB9G,EAAGxH,KAAKyd,gBAAkBhW,EAAGzH,KAAK+b,QAAUnR,EAClF5K,KAAK0M,MAAQrB,EAAGrL,KAAK0d,UAAYre,EAAGW,KAAKgc,QAAUnR,EAAG7K,KAAKic,MAAQha,EAAGjC,KAAK4I,EAAI,KAE/E5I,KAAK6I,EAAI,KAAM7I,KAAKgc,QAAShc,KAAKic,OAIkC,SAAS0B,GAAGzX,GACpF,OAAOA,EAAEuX,gBAAgBne,OAAS,EAAI4G,EAAEuX,gBAAgB,GAAGrD,MAAQ,KAGvE,SAASwD,GAAG1X,GACR,IAAK,MAAMsB,KAAKtB,EAAE6V,QAAS,GAAIvU,EAAEmB,IAAK,OAAOnB,EAAE4S,MAC/C,OAAO,KAWX,SAASyD,GAAG3X,GACR,OAAO,OAASA,EAAEoI,gBAOlB,SAASwP,GAAG5X,GACZ,MAAMsB,EAAIQ,EAAE9B,GACZ,GAAI,OAASsB,EAAEoB,EAAG,CACdpB,EAAEoB,EAAI,GACN,MAAM1C,EAAI0X,GAAGpW,GAAIC,EAAIkW,GAAGnW,GACxB,GAAI,OAAStB,GAAK,OAASuB,EAI3BvB,EAAE+H,cAAgBzG,EAAEoB,EAAEtH,KAAK,IAAI8b,GAAGlX,IAAKsB,EAAEoB,EAAEtH,KAAK,IAAI8b,GAAGtP,GAAGiQ,WAAY,YAA8B,CAChG,IAAI7X,GAAI,EACR,IAAK,MAAMuB,KAAKD,EAAEiW,gBAAiBjW,EAAEoB,EAAEtH,KAAKmG,GAAIA,EAAE2S,MAAMnM,eAAiB/H,GAAI,GAC7E,IAAKA,EAAG,CAGJ,MAAMA,EAAIsB,EAAEiW,gBAAgBne,OAAS,EAAIkI,EAAEiW,gBAAgBjW,EAAEiW,gBAAgBne,OAAS,GAAG+d,IAAM,MAC/F7V,EAAEoB,EAAEtH,KAAK,IAAI8b,GAAGtP,GAAGiQ,WAAY7X,MAI3C,OAAOsB,EAAEoB,EAKT,SAASoV,GAAG9X,GACZ,MAAMsB,EAAIQ,EAAE9B,GACZ,IAAKsB,EAAEqB,EAAG,GAAI,MAAoBrB,EAAEkW,UAAWlW,EAAEqB,EAAIqT,GAAG1U,EAAE2G,KAAM3G,EAAE8G,gBAAiBwP,GAAGtW,GAAIA,EAAEuU,QAASvU,EAAEkF,MAAOlF,EAAEwU,QAASxU,EAAEyU,WAAa,CAEpI,MAAM/V,EAAI,GACV,IAAK,MAAMuB,KAAKqW,GAAGtW,GAAI,CACnB,MAAMA,EAAI,SAA4BC,EAAE4V,IAAM,MAAwB,OACtEnX,EAAE5E,KAAK,IAAI8b,GAAG3V,EAAE2S,MAAO5S,IAGnB,MAAMC,EAAID,EAAEyU,MAAQ,IAAIgB,GAAGzV,EAAEyU,MAAMiB,SAAU1V,EAAEyU,MAAMkB,WAAa,KAAMvS,EAAIpD,EAAEwU,QAAU,IAAIiB,GAAGzV,EAAEwU,QAAQkB,SAAU1V,EAAEwU,QAAQmB,WAAa,KAElJ3V,EAAEqB,EAAIqT,GAAG1U,EAAE2G,KAAM3G,EAAE8G,gBAAiBpI,EAAGsB,EAAEuU,QAASvU,EAAEkF,MAAOjF,EAAGmD,GAElE,OAAOpD,EAAEqB,EAyCb,SAASoV,GAAG/X,EAAGsB,GACX,OAAO,SAAStB,GACZ,MAAO,iBAAmBA,GAAKwR,OAAOwG,UAAUhY,KAAOiJ,GAAGjJ,IAAMA,GAAKwR,OAAOyG,kBAAoBjY,GAAKwR,OAAO0G,iBADzG,CAEL5W,GAIF,SAAStB,GACL,MAAO,CACHgT,aAAc,GAAKhT,GAF3B,CAIEsB,GAAK,SAAStB,EAAGsB,GACf,GAAItB,EAAE4C,EAAG,CACL,GAAIsQ,MAAM5R,GAAI,MAAO,CACjB2R,YAAa,OAEjB,GAAI3R,IAAM,EAAA,EAAO,MAAO,CACpB2R,YAAa,YAEjB,GAAI3R,KAAM,EAAA,EAAQ,MAAO,CACrB2R,YAAa,aAGrB,MAAO,CACHA,YAAahK,GAAG3H,GAAK,KAAOA,GAb7B,CAeLtB,EAAGsB,GAmBiD,MAAM6W,GAC5Dxb,cAGI7C,KAAKgE,OAAI,GAI4C,MAAMsa,WAAWD,IAEtB,MAAME,WAAWF,GACrExb,YAAYqD,GACRjD,QAASjD,KAAKwe,SAAWtY,GAIwB,MAAMuY,WAAWJ,GACtExb,YAAYqD,GACRjD,QAASjD,KAAKwe,SAAWtY,GAS7B,MAAMwY,WAAWL,GACjBxb,YAAYqD,EAAGsB,GACXvE,QAASjD,KAAK2e,EAAIzY,EAAGlG,KAAK+I,EAAIvB,GAoB6B,MAAMoX,GACrE/b,YAAYqD,EAAGsB,GACXxH,KAAKoa,MAAQlU,EAAGlG,KAAK6e,UAAYrX,GAQrC,MAAMsX,GACNjc,YAAYqD,EAAGsB,GACXxH,KAAK+e,WAAa7Y,EAAGlG,KAAKgf,OAASxX,EAEKyE,cACxC,OAAO,IAAI6S,GAE2C7S,cAAc/F,GACpE,OAAO,IAAI4Y,QAAG,EAAQ5Y,GAEoD+F,kBAAkB/F,GAC5F,OAAO,IAAI4Y,GAAG5Y,GAEwC+Y,aACtD,YAAO,IAAWjf,KAAK+e,iBAAc,IAAW/e,KAAKgf,OAEzD1Y,QAAQJ,GACJ,OAAOlG,KAAKgf,SAAW9Y,EAAE8Y,SAAWhf,KAAK+e,aAAe7Y,EAAE6Y,YAAc/e,KAAK+e,WAAWzY,QAAQJ,EAAE6Y,aAAe7Y,EAAE6Y,aA+CvH,MAAMG,IAKN,MAAMC,WAAWD,GACjBrc,YAAYqD,EAAGsB,EAAGC,EAAGmD,EAAI,IACrB3H,QAASjD,KAAKiE,IAAMiC,EAAGlG,KAAKkE,MAAQsD,EAAGxH,KAAKof,aAAe3X,EAAGzH,KAAKqf,gBAAkBzU,EACrF5K,KAAKwJ,KAAO,EAEhB8V,eACI,OAAO,MAgBX,MAAMC,WAAWL,GACjBrc,YAAYqD,EAAGsB,EAAGC,EAAGmD,EAAGS,EAAI,IACxBpI,QAASjD,KAAKiE,IAAMiC,EAAGlG,KAAK4D,KAAO4D,EAAGxH,KAAKwf,UAAY/X,EAAGzH,KAAKof,aAAexU,EAC9E5K,KAAKqf,gBAAkBhU,EAAGrL,KAAKwJ,KAAO,EAE1C8V,eACI,OAAOtf,KAAKwf,WAI0C,MAAMC,WAAWP,GAC3Erc,YAAYqD,EAAGsB,GACXvE,QAASjD,KAAKiE,IAAMiC,EAAGlG,KAAKof,aAAe5X,EAAGxH,KAAKwJ,KAAO,EAAiBxJ,KAAKqf,gBAAkB,GAEtGC,eACI,OAAO,MAUX,MAAMI,WAAWR,GACjBrc,YAAYqD,EAAGsB,GACXvE,QAASjD,KAAKiE,IAAMiC,EAAGlG,KAAKof,aAAe5X,EAAGxH,KAAKwJ,KAAO,EAAiBxJ,KAAKqf,gBAAkB,GAEtGC,eACI,OAAO,MAmBX,MAAMK,GACI,CACNC,IAAK,YACLC,KAAM,cAGRC,GACQ,CACN,IAAK,YACL,KAAM,qBACN,IAAK,eACL,KAAM,wBACN,KAAM,QACN,KAAM,YACN,iBAAkB,iBAClBC,GAAI,KACJ,SAAU,SACV,qBAAsB,sBAmB9B,MAAMC,GACFnd,YAAYqD,EAAGsB,GACXxH,KAAKsL,WAAapF,EAAGlG,KAAK8I,EAAItB,GAetC,SAASyY,GAAG/Z,EAAGsB,GACX,OAAItB,EAAE4C,EACK,GAAG,IAAIjD,KAAK,IAAM2B,EAAEyK,SAASnM,cAAcnD,QAAQ,QAAS,IAAIA,QAAQ,IAAK,QAAQ,YAAc6E,EAAE0K,aAAazF,OAAO,MAE7H,CACHwF,QAAS,GAAKzK,EAAEyK,QAChB0F,MAAOnQ,EAAE0K,aASjB,SAASgO,GAAGha,EAAGsB,GACX,OAAOtB,EAAE4C,EAAItB,EAAEyP,WAAazP,EAAE0P,eAGlC,SAASiJ,GAAGja,EAAGsB,GACX,OAAOyY,GAAG/Z,EAAGsB,EAAEuL,eAGnB,SAASqN,GAAGla,GACR,OAAO6B,IAAI7B,GAAIyM,GAAG0N,cAAc,SAASna,GACrC,MAAMsB,EAAI+P,GAAGrR,GACb,OAAO,IAAI8L,GAAGxK,EAAEyK,QAASzK,EAAEmQ,OAFC,CAG9BzR,IAGN,SAASoa,GAAGpa,EAAGsB,GACX,OAAO,SAAStB,GACZ,OAAO,IAAIsH,GAAE,CAAE,WAAYtH,EAAE6F,UAAW,YAAa7F,EAAE8F,WADpD,CAEL9F,GAAGsG,MAAM,aAAaA,MAAMhF,GAAGiG,kBAGrC,SAAS8S,GAAGra,EAAGsB,GACX,OAAO8Y,GAAGpa,EAAEoF,WAAY9D,EAAE2G,MAG9B,SAASqS,GAAGta,EAAGsB,GACX,MAAMC,EAAI,SAASvB,GACf,MAAMsB,EAAIgG,GAAEY,WAAWlI,GACvB,OAAO6B,EAAE0Y,GAAGjZ,IAAKA,EAFX,CAGRA,GACF,GAAIC,EAAEwF,IAAI,KAAO/G,EAAEoF,WAAWS,UAAW,MAAM,IAAIhD,EAAEZ,EAAG,oDAAsDV,EAAEwF,IAAI,GAAK,OAAS/G,EAAEoF,WAAWS,WAC/I,GAAItE,EAAEwF,IAAI,KAAO/G,EAAEoF,WAAWU,SAAU,MAAM,IAAIjD,EAAEZ,EAAG,qDAAuDV,EAAEwF,IAAI,GAAK,OAAS/G,EAAEoF,WAAWU,UAC/I,OAAO,IAAIkC,IAAInG,GAAG6C,EAAInD,GAAGnI,OAAS,GAAK,cAAgBsL,EAAEqC,IAAI,IAAKrC,EAAEiC,SAAS,KAC7E,IAAIjC,EAGR,SAAS8V,GAAGxa,EAAGsB,GACX,OAAO8Y,GAAGpa,EAAEoF,WAAY9D,GAG5B,SAASmZ,GAAGza,GACR,OAAO,IAAIsH,GAAE,CAAE,WAAYtH,EAAEoF,WAAWS,UAAW,YAAa7F,EAAEoF,WAAWU,WAAYyB,kBAG7F,SAASmT,GAAG1a,EAAGsB,EAAGC,GACd,MAAO,CACHvE,KAAMqd,GAAGra,EAAGsB,GACZgP,OAAQ/O,EAAEvD,MAAM+T,SAASzB,QA8JjC,SAASqK,GAAG3a,GACR,OAAOyZ,GAAGzZ,GAId,SAAS4a,GAAG5a,GACR,OAAO4Z,GAAG5Z,GAGd,SAAS6a,GAAG7a,GACR,MAAO,CACH8a,UAAW9a,EAAEuH,mBAIrB,SAASwT,GAAG/a,GACR,MAAMsB,EAAI,GACV,OAAOtB,EAAEsQ,OAAO7J,SAASzG,GAAKsB,EAAElG,KAAK4E,EAAEuH,qBAAsB,CACzDyT,WAAY1Z,GAIpB,SAASiZ,GAAGva,GAER,OAAOA,EAAE5G,QAAU,GAAK,aAAe4G,EAAE+G,IAAI,IAAM,cAAgB/G,EAAE+G,IAAI,GAkBzE,SAASkU,GAAGjb,GACZ,OAAO,IAAI8Z,GAAG9Z,GAAwB,GA4B1C,MAAMkb,GACFve,YAIAqD,EAIAsB,EAMAC,EAAI,IAIEmD,EAAI,IAKJS,EAAI,KACNrL,KAAKiJ,EAAI/C,EAAGlG,KAAKqhB,QAAU7Z,EAAGxH,KAAKsJ,EAAI7B,EAAGzH,KAAK4J,EAAIgB,EAAG5K,KAAKkK,EAAImB,EAAGrL,KAAK2K,EAAI,EAAG3K,KAAKgL,EAAI,KAEvFhL,KAAKiL,EAAIpF,KAAKD,MAAO5F,KAAKshB,QAQvBA,QACHthB,KAAK2K,EAAI,EAKNS,IACHpL,KAAK2K,EAAI3K,KAAKkK,EAMX4B,EAAE5F,GAELlG,KAAKuhB,SAGL,MAAM/Z,EAAI8F,KAAKoE,MAAM1R,KAAK2K,EAAI3K,KAAKmM,KAAM1E,EAAI6F,KAAKkU,IAAI,EAAG3b,KAAKD,MAAQ5F,KAAKiL,GAAIL,EAAI0C,KAAKkU,IAAI,EAAGha,EAAIC,GAE3FmD,EAAI,GAAKrD,EAAE,qBAAsB,mBAAmBqD,qBAAqB5K,KAAK2K,4BAA4BnD,uBAAuBC,aACzIzH,KAAKgL,EAAIhL,KAAKiJ,EAAEwY,kBAAkBzhB,KAAKqhB,QAASzW,GAAI,KAAO5K,KAAKiL,EAAIpF,KAAKD,MACzEM,OAGAlG,KAAK2K,GAAK3K,KAAK4J,EAAG5J,KAAK2K,EAAI3K,KAAKsJ,IAAMtJ,KAAK2K,EAAI3K,KAAKsJ,GAAItJ,KAAK2K,EAAI3K,KAAKkK,IAAMlK,KAAK2K,EAAI3K,KAAKkK,GAE9FsD,IACI,OAASxN,KAAKgL,IAAMhL,KAAKgL,EAAE0W,YAAa1hB,KAAKgL,EAAI,MAErDuW,SACI,OAASvhB,KAAKgL,IAAMhL,KAAKgL,EAAEuW,SAAUvhB,KAAKgL,EAAI,MAEgCmB,IAC9E,OAAQmB,KAAKqE,SAAW,IAAM3R,KAAK2K,GA6B3C,MAAMgX,WAAW,QACb9e,YAAYqD,EAAGsB,EAAGC,EAAGmD,GACjB3H,QAASjD,KAAK4hB,gBAAkB1b,EAAGlG,KAAK6hB,oBAAsBra,EAAGxH,KAAK6N,EAAIpG,EAAGzH,KAAK2e,EAAI/T,EACtF5K,KAAK8N,IAAK,EAEdI,KACI,GAAIlO,KAAK8N,GAAI,MAAM,IAAI/E,EAAEN,EAAG,2CAEkCV,EAAE7B,EAAGsB,EAAGC,GACtE,OAAOzH,KAAKkO,KAAM/E,QAAQ2Y,IAAI,CAAE9hB,KAAK4hB,gBAAgB/X,WAAY7J,KAAK6hB,oBAAoBhY,aAAcW,QAAQI,EAAGS,KAAOrL,KAAK6N,EAAE9F,EAAE7B,EAAGsB,EAAGC,EAAGmD,EAAGS,KAAK0W,OAAO7b,IACvJ,KAAM,kBAAoBA,EAAEhD,MAAQgD,EAAEpD,OAASyF,IAAMvI,KAAK4hB,gBAAgB9X,kBAC1E9J,KAAK6hB,oBAAoB/X,mBAAoB5D,GAAK,IAAI6C,EAAEb,EAAGhC,EAAE8C,eAGmBZ,EAAElC,EAAGsB,EAAGC,EAAGmD,GAC/F,OAAO5K,KAAKkO,KAAM/E,QAAQ2Y,IAAI,CAAE9hB,KAAK4hB,gBAAgB/X,WAAY7J,KAAK6hB,oBAAoBhY,aAAcW,MAAI,EAAIa,EAAGhM,KAAOW,KAAK6N,EAAEzF,EAAElC,EAAGsB,EAAGC,EAAG4D,EAAGhM,EAAGuL,KAAKmX,OAAO7b,IAC1J,KAAM,kBAAoBA,EAAEhD,MAAQgD,EAAEpD,OAASyF,IAAMvI,KAAK4hB,gBAAgB9X,kBAC1E9J,KAAK6hB,oBAAoB/X,mBAAoB5D,GAAK,IAAI6C,EAAEb,EAAGhC,EAAE8C,eAGrEgZ,YACIhiB,KAAK8N,IAAK,GAMlBgD,eAAemR,GAAG/b,EAAGsB,GACjB,MAAMC,EAAIO,EAAE9B,GAAI0E,EAAI+V,GAAGlZ,EAAEkX,GAAK,aAActT,EAAI,CAC5C6W,OAAQ1a,EAAEE,KAAKxB,GAhVvB,SAAYA,EAAGsB,GACX,IAAIC,EACJ,GAAID,aAAa2X,GAAI1X,EAAI,CACrB0a,OAAQvB,GAAG1a,EAAGsB,EAAEvD,IAAKuD,EAAEtD,aACnB,GAAIsD,aAAaiY,GAAIhY,EAAI,CAC7B2O,OAAQmK,GAAGra,EAAGsB,EAAEvD,WACZ,GAAIuD,aAAa+X,GAAI9X,EAAI,CAC7B0a,OAAQvB,GAAG1a,EAAGsB,EAAEvD,IAAKuD,EAAE5D,MACvBwe,WAAYnB,GAAGzZ,EAAEgY,gBACb,CACJ,KAAMhY,aAAakY,IAAK,OAAO5X,IAC/BL,EAAI,CACA4a,OAAQ9B,GAAGra,EAAGsB,EAAEvD,MAGxB,OAAOuD,EAAE6X,gBAAgB/f,OAAS,IAAMmI,EAAE6a,iBAAmB9a,EAAE6X,gBAAgB3X,KAAKxB,GAAK,SAASA,EAAGsB,GACjG,MAAMC,EAAID,EAAEqX,UACZ,GAAIpX,aAAa6W,GAAI,MAAO,CACxB0C,UAAWxZ,EAAE4S,MAAM3M,kBACnB8U,iBAAkB,gBAEtB,GAAI9a,aAAa8W,GAAI,MAAO,CACxByC,UAAWxZ,EAAE4S,MAAM3M,kBACnB+U,sBAAuB,CACnBlJ,OAAQ7R,EAAE+W,WAGlB,GAAI/W,aAAagX,GAAI,MAAO,CACxBuC,UAAWxZ,EAAE4S,MAAM3M,kBACnBgV,mBAAoB,CAChBnJ,OAAQ7R,EAAE+W,WAGlB,GAAI/W,aAAaiX,GAAI,MAAO,CACxBsC,UAAWxZ,EAAE4S,MAAM3M,kBACnBiV,UAAWjb,EAAEsB,GAEjB,MAAMjB,IAtB+E,CAuBvF,EAAG5B,MAAOsB,EAAE4X,aAAaH,SAAWxX,EAAEkb,gBAAkB,SAASzc,EAAGsB,GAClE,YAAO,IAAWA,EAAEuX,WAAa,CAC7BA,WAAYoB,GAAGja,EAAGsB,EAAEuX,kBACpB,IAAWvX,EAAEwX,OAAS,CACtBA,OAAQxX,EAAEwX,QACVlX,IALkD,CAMxD5B,EAAGsB,EAAE4X,eAAgB3X,EAoSCmb,CAAGnb,EAAEkX,EAAGzY,YAE1BuB,EAAEM,EAAE,SAAU6C,EAAGS,GAG3ByF,eAAe+R,GAAG3c,EAAGsB,GACjB,MAAMC,EAAIO,EAAE9B,GAAI0E,EAAI+V,GAAGlZ,EAAEkX,GAAK,aAActT,EAAI,CAC5CyX,UAAWtb,EAAEE,KAAKxB,GAAKqa,GAAG9Y,EAAEkX,EAAGzY,MAChC7G,QAAUoI,EAAEW,EAAE,oBAAqBwC,EAAGS,EAAG7D,EAAElI,QAASuL,EAAI,IAAInB,IAC/DrK,EAAEsN,SAASzG,IACP,MAAMsB,EA1Wd,SAAYtB,EAAGsB,GACX,MAAO,UAAWA,EAAI,SAAStB,EAAGsB,GAC9BO,IAAIP,EAAEub,OAAQvb,EAAEub,MAAM7f,KAAMsE,EAAEub,MAAMhE,WACpC,MAAMtX,EAAI+Y,GAAGta,EAAGsB,EAAEub,MAAM7f,MAAO0H,EAAIwV,GAAG5Y,EAAEub,MAAMhE,YAAa1T,EAAI,IAAI8O,GAAG,CAClElC,SAAU,CACNzB,OAAQhP,EAAEub,MAAMvM,UAGxB,OAAOiE,GAAGuI,iBAAiBvb,EAAGmD,EAAGS,GAPf,CAQpBnF,EAAGsB,GAAK,YAAaA,EAAI,SAAStB,EAAGsB,GACnCO,IAAIP,EAAEyb,SAAUlb,IAAIP,EAAEoT,UACtB,MAAMnT,EAAI+Y,GAAGta,EAAGsB,EAAEyb,SAAUrY,EAAIwV,GAAG5Y,EAAEoT,UACrC,OAAOH,GAAGyI,cAAczb,EAAGmD,GAHJ,CAIzB1E,EAAGsB,GAAKM,IA6VIqb,CAAG1b,EAAEkX,EAAGzY,GAClB2E,EAAElB,IAAInC,EAAEvD,IAAI+E,WAAYxB,MAE5B,MAAMvF,EAAI,GACV,OAAOuF,EAAEmF,SAASzG,IACd,MAAMsB,EAAIqD,EAAEoC,IAAI/G,EAAE8C,YAClBjB,IAAIP,GAAIvF,EAAEX,KAAKkG,MACdvF,EAGT6O,eAAesS,GAAGld,EAAGsB,GACjB,MAAMC,EAAIO,EAAE9B,GAAI0E,EAtTpB,SAAY1E,EAAGsB,GAEX,MAAMC,EAAI,CACN4b,gBAAiB,IAClBzY,EAAIpD,EAAE2G,KACT,OAAS3G,EAAE8G,iBAAmB7G,EAAE6b,OAAS5C,GAAGxa,EAAG0E,GAAInD,EAAE4b,gBAAgBE,KAAO,CAAE,CAC1EC,aAAchc,EAAE8G,gBAChBmV,gBAAgB,MACZhc,EAAE6b,OAAS5C,GAAGxa,EAAG0E,EAAEkC,WAAYrF,EAAE4b,gBAAgBE,KAAO,CAAE,CAC9DC,aAAc5Y,EAAEoC,iBAEpB,MAAM3B,EAAI,SAASnF,GACf,GAAI,IAAMA,EAAE5G,OAAQ,OACpB,MAAMkI,EAAItB,EAAEwB,KAAKxB,GAEjB,SAASA,GACL,GAAI,OAAqBA,EAAEkW,GAAI,CAC3B,GAAIrC,GAAG7T,EAAEhC,OAAQ,MAAO,CACpBwf,YAAa,CACTtJ,MAAO2G,GAAG7a,EAAEkU,OACZgC,GAAI,WAGZ,GAAItC,GAAG5T,EAAEhC,OAAQ,MAAO,CACpBwf,YAAa,CACTtJ,MAAO2G,GAAG7a,EAAEkU,OACZgC,GAAI,iBAGT,GAAI,OAAyBlW,EAAEkW,GAAI,CACtC,GAAIrC,GAAG7T,EAAEhC,OAAQ,MAAO,CACpBwf,YAAa,CACTtJ,MAAO2G,GAAG7a,EAAEkU,OACZgC,GAAI,eAGZ,GAAItC,GAAG5T,EAAEhC,OAAQ,MAAO,CACpBwf,YAAa,CACTtJ,MAAO2G,GAAG7a,EAAEkU,OACZgC,GAAI,gBAIhB,MAAO,CACHuH,YAAa,CACTvJ,MAAO2G,GAAG7a,EAAEkU,OACZgC,GAAI0E,GAAG5a,EAAEkW,IACTlY,MAAOgC,EAAEhC,QAhCrB,CAmCEgC,KACF,OAAI,IAAMsB,EAAElI,OAAekI,EAAE,GACtB,CACHoc,gBAAiB,CACbxH,GAAI,MACJL,QAASvU,IA5CX,CA+CRA,EAAEuU,SACJ1Q,IAAM5D,EAAE4b,gBAAgBQ,MAAQxY,GAChC,MAAMhM,EAAI,SAAS6G,GACf,GAAI,IAAMA,EAAE5G,OACZ,OAAO4G,EAAEwB,KAAKxB,GAEd,SAASA,GACL,MAAO,CACHkU,MAAO2G,GAAG7a,EAAEkU,OACZ0J,UAAWjD,GAAG3a,EAAEmX,MAHxB,CAKEnX,KATI,CAURsB,EAAEsU,SACJzc,IAAMoI,EAAE4b,gBAAgBvH,QAAUzc,GAClC,MAAMwL,EAAI,SAAS3E,EAAGsB,GAClB,OAAOtB,EAAE4C,GAAKoG,GAAG1H,GAAKA,EAAI,CACtBtD,MAAOsD,GAFL,CAIRtB,EAAGsB,EAAEkF,OACP,IAAIzK,EACJ,OAAO,OAAS4I,IAAMpD,EAAE4b,gBAAgB3W,MAAQ7B,GAAIrD,EAAEwU,UAAYvU,EAAE4b,gBAAgBrH,QAAU,CAC1F+H,QAAS9hB,EAAIuF,EAAEwU,SAASmB,UACxB7D,OAAQrX,EAAEib,WACV1V,EAAEyU,QAAUxU,EAAE4b,gBAAgBpH,MAAQ,SAAS/V,GAC/C,MAAO,CACH6d,QAAS7d,EAAEiX,UACX7D,OAAQpT,EAAEgX,UAHwB,CAOzC1V,EAAEyU,QAASxU,EA8NQuc,CAAGvc,EAAEkX,EAAGX,GAAGxW,IAC/B,aAAcC,EAAEW,EAAE,WAAYwC,EAAE0Y,OAAQ,CACpCD,gBAAiBzY,EAAEyY,mBACnBzV,QAAQ1H,KAAOA,EAAE+d,WAAWvc,KAAKxB,GAAK,SAASA,EAAGsB,EAAGC,GACrD,MAAMmD,EAAI4V,GAAGta,EAAGsB,EAAEtE,MAAOmI,EAAI+U,GAAG5Y,EAAEuX,YAAa1f,EAAI,IAAI8a,GAAG,CACtDlC,SAAU,CACNzB,OAAQhP,EAAEgP,UAEd3L,EAAI4P,GAAGuI,iBAAiBpY,EAAGS,EAAGhM,GAClC,OAA6EwL,EANvC,CAOxCpD,EAAEkX,EAAGzY,EAAE+d,YAkBT,MAAMC,GAAK,IAAIxa,IAWnB,SAASya,GAAGje,GACR,GAAIA,EAAEke,YAAa,MAAM,IAAIrb,EAAEN,EAAG,2CAClC,IAAKyb,GAAGtO,IAAI1P,GAAI,CACZqB,EAAE,oBAAqB,0BACvB,MAAMlI,EAAI,SAAS6G,GACf,OAAO,IAAIyK,GAAGzK,EAAGme,MAAMC,KAAK,OADtB,EAEP9c,EAAItB,EAAEqe,YAAa9c,EAAIvB,EAAEse,IAAIC,QAAQlZ,OAAS,GAAIX,EAAI1E,EAAEwe,gBAAiBrZ,EAAInF,EAAEye,kBAClF,IAAIvZ,EAAE5D,EAAGC,EAAGmD,EAAGS,EAAEI,KAAMJ,EAAEK,IAAKL,EAAEuZ,6BAA8BvZ,EAAEwZ,kCAAmCxZ,EAAEQ,mBAAoBhB,EAAIsW,GAAGjb,EAAEqe,aAActiB,EAAI,SAASiE,EAAGsB,EAAGC,EAAGmD,GAClK,OAAO,IAAI+W,GAAGzb,EAAGsB,EAAGC,EAAGmD,GADyH,CAElJ1E,EAAE4e,iBAAkB5e,EAAE6e,qBAAsB1lB,EAAGwL,GACjDqZ,GAAGva,IAAIzD,EAAGjE,GAEd,IAAIuF,EAAGC,EAAGmD,EAAGS,EAgBV,OAAO6Y,GAAGjX,IAAI/G,GAYrB,MAAM8e,GACFniB,YAAYqD,GACR,IAAIsB,EACJ,QAAI,IAAWtB,EAAEuF,KAAM,CACnB,QAAI,IAAWvF,EAAEwF,IAAK,MAAM,IAAI3C,EAAEZ,EAAG,sDACrCnI,KAAKyL,KAAO,2BAA4BzL,KAAK0L,KAAM,OAChD1L,KAAKyL,KAAOvF,EAAEuF,KAAMzL,KAAK0L,IAAM,QAAUlE,EAAItB,EAAEwF,WAAQ,IAAWlE,GAAKA,EAC9E,GAAIxH,KAAKilB,YAAc/e,EAAE+e,YAAajlB,KAAKklB,4BAA8Bhf,EAAEgf,+BAC3E,IAAWhf,EAAEif,eAAgBnlB,KAAKmlB,eAAiB,aAAe,CAC9D,IAAK,IAAMjf,EAAEif,gBAAkBjf,EAAEif,eAAiB,QAAS,MAAM,IAAIpc,EAAEZ,EAAG,2CAC1EnI,KAAKmlB,eAAiBjf,EAAEif,eAE5BnlB,KAAK4kB,+BAAiC1e,EAAE0e,6BAA8B5kB,KAAK6kB,oCAAsC3e,EAAE2e,kCACnH7kB,KAAK6L,kBAAoB3F,EAAE2F,gBAAiB,SAAS3F,EAAGsB,EAAGC,EAAGmD,GAC1D,IAAI,IAAOpD,IAAK,IAAOoD,EAAG,MAAM,IAAI7B,EAAEZ,EAAG,+FADD,CAE1C,EAAgCjC,EAAE0e,6BAA8B,EAAqC1e,EAAE2e,mCAE7Gve,QAAQJ,GACJ,OAAOlG,KAAKyL,OAASvF,EAAEuF,MAAQzL,KAAK0L,MAAQxF,EAAEwF,KAAO1L,KAAKilB,cAAgB/e,EAAE+e,aAAejlB,KAAKmlB,iBAAmBjf,EAAEif,gBAAkBnlB,KAAK4kB,+BAAiC1e,EAAE0e,8BAAgC5kB,KAAK6kB,oCAAsC3e,EAAE2e,mCAAqC7kB,KAAKklB,4BAA8Bhf,EAAEgf,2BAA6BllB,KAAK6L,kBAAoB3F,EAAE2F,iBAwBlY,MAAMuZ,GAENviB,YAAYqD,EAAGsB,EAAGC,GACdzH,KAAK8kB,iBAAmBtd,EAAGxH,KAAK+kB,qBAAuBtd,EAIvDzH,KAAKwJ,KAAO,iBAAkBxJ,KAAK0kB,gBAAkB,SAAU1kB,KAAKqlB,UAAY,IAAIL,GAAG,IACvFhlB,KAAKslB,iBAAkB,EAAIpf,aAAa4F,GAAI9L,KAAKukB,YAAcre,GAAKlG,KAAKulB,KAAOrf,EAChFlG,KAAKukB,YAAc,SAASre,GACxB,IAAK/C,OAAOE,UAAU4P,eAAeuS,MAAMtf,EAAEue,QAAS,CAAE,cAAgB,MAAM,IAAI1b,EAAEZ,EAAG,uDACvF,OAAO,IAAI2D,GAAE5F,EAAEue,QAAQ1Y,WAFR,CActB7F,IAKUse,UACP,IAAKxkB,KAAKulB,KAAM,MAAM,IAAIxc,EAAEN,EAAG,gFAC/B,OAAOzI,KAAKulB,KAEZE,mBACA,OAAOzlB,KAAKslB,gBAEZlB,kBACA,YAAO,IAAWpkB,KAAK0lB,eAE3BC,aAAazf,GACT,GAAIlG,KAAKslB,gBAAiB,MAAM,IAAIvc,EAAEN,EAAG,sKACzCzI,KAAKqlB,UAAY,IAAIL,GAAG9e,QAAI,IAAWA,EAAE+e,cAAgBjlB,KAAK8kB,iBAAmB,SAAS5e,GACtF,IAAKA,EAAG,OAAO,IAAI0D,EACnB,OAAQ1D,EAAEsD,MACR,IAAK,OACH,MAAMhC,EAAItB,EAAE0f,OACZ,OAAO,IAAI5a,EAAExD,EAAGtB,EAAE2f,cAAgB,IAAK3f,EAAE4f,UAAY,KAAM5f,EAAE6f,kBAAoB,MAEnF,IAAK,WACH,OAAO7f,EAAE0f,OAEX,QACE,MAAM,IAAI7c,EAAEZ,EAAG,sEAX0D,CAa/EjC,EAAE+e,cAERe,eACI,OAAOhmB,KAAKqlB,UAEhBV,kBACI,OAAO3kB,KAAKslB,iBAAkB,EAAItlB,KAAKqlB,UAE3CY,UACI,OAAOjmB,KAAK0lB,iBAAmB1lB,KAAK0lB,eAAiB1lB,KAAKkmB,cAAelmB,KAAK0lB,eAEClT,SAC/E,MAAO,CACHgS,IAAKxkB,KAAKulB,KACVja,WAAYtL,KAAKukB,YACjB4B,SAAUnmB,KAAKqlB,WAShBa,aACH,OAAO,SAAShgB,GACZ,MAAMsB,EAAI0c,GAAGjX,IAAI/G,GACjBsB,IAAMD,EAAE,oBAAqB,sBAAuB2c,GAAG9N,OAAOlQ,GAAIsB,EAAEwa,aAFjE,CAGLhiB,MAAOmJ,QAAQC,WAIzB,SAASgd,GAAGlgB,EAAGsB,GACX,MAAMC,EAAI4e,EAAangB,EAAG,kBAC1B,GAAIuB,EAAE6e,gBAAiB,MAAM,IAAIvd,EAAEN,EAAG,mDACtC,OAAOhB,EAAE8e,WAAW,CAChB9B,QAASjd,IAYb,SAASgf,GAAGhf,EAAItB,KAChB,OAAOmgB,EAAa7e,EAAG,kBAAkBif,eAezC,SAASC,GAAGxgB,EAAGsB,EAAGC,EAAGmD,EAAI,IACzB,IAAIS,EACJ,MAAMhM,GAAK6G,EAAI8I,GAAG9I,EAAGkf,KAAKY,eAC1B,GAAI,6BAA+B3mB,EAAEoM,MAAQpM,EAAEoM,OAASjE,GAAKG,EAAE,sFAC/DzB,EAAEyf,aAAaxiB,OAAO+W,OAAO/W,OAAO+W,OAAO,GAAI7a,GAAI,CAC/CoM,KAAM,GAAGjE,KAAKC,IACdiE,KAAK,KACJd,EAAE+b,cAAe,CAClB,IAAInf,EAAGC,EACP,GAAI,iBAAmBmD,EAAE+b,cAAenf,EAAIoD,EAAE+b,cAAelf,EAAIxB,EAAES,cAAgB,CAG/Ec,ECzvHI,SACd2C,EACA4B,GAEA,GAAI5B,EAAMhE,IACR,MAAM,IAAI1F,MACR,gHAIJ,MAKMmmB,EAAU7a,GAAa,eACvB8a,EAAM1c,EAAM0c,KAAO,EACnBC,EAAM3c,EAAM2c,KAAO3c,EAAM4c,QAC/B,IAAKD,EACH,MAAM,IAAIrmB,MAAM,wDAGlB,MAAMumB,EAAO7jB,OAAA+W,OAAA,CAEX+M,IAAK,kCAAkCL,IACvCM,IAAKN,EACLC,IAAAA,EACAM,IAAKN,EAAM,KACXO,UAAWP,EACXC,IAAAA,EACAC,QAASD,EACTO,SAAU,CACRC,iBAAkB,SAClBC,WAAY,KAIXpd,GAKL,MAAO,CACL3H,EAA8BoF,KAAKC,UAjCtB,CACb2f,IAAK,OACLhe,KAAM,SAgCNhH,EAA8BoF,KAAKC,UAAUmf,IAH7B,IAKhBzlB,KAAK,KD2sHOkmB,CAAE7c,EAAE+b,cAAe,QAAUtb,EAAInF,EAAEqf,YAAS,IAAWla,OAAI,EAASA,EAAEoZ,QAAQ1Y,WAClF,MAAM1M,EAAIuL,EAAE+b,cAAcG,KAAOlc,EAAE+b,cAAcI,QACjD,IAAK1nB,EAAG,MAAM,IAAI0J,EAAEZ,EAAG,wDACvBV,EAAI,IAAIxB,EAAE5G,GAEd6G,EAAE4e,iBAAmB,IAAI5a,EAAE,IAAIZ,EAAE9B,EAAGC,KAuBxC,SAASigB,GAAGxhB,GACZ,OAAOA,EAAI8I,GAAG9I,EAAGkf,IAAK5d,EAAEtB,EAAEse,IAAK,kBAAmBte,EAAE+f,UAwCxD,MAAM0B,GAEF9kB,YAAYqD,EAIZsB,EAAGC,GACCzH,KAAK4nB,UAAYpgB,EAAGxH,KAAK6nB,KAAOpgB,EAEhCzH,KAAKwJ,KAAO,WAAYxJ,KAAK8nB,UAAY5hB,EAEzC6hB,YACA,OAAO/nB,KAAK6nB,KAAK1Z,KAIV6Z,SACP,OAAOhoB,KAAK6nB,KAAK1Z,KAAKnB,cAKfmB,WACP,OAAOnO,KAAK6nB,KAAK1Z,KAAKV,kBAIf6V,aACP,OAAO,IAAI2E,GAAGjoB,KAAK8nB,UAAW9nB,KAAK4nB,UAAW5nB,KAAK6nB,KAAK1Z,KAAKrB,WAEjEob,cAAchiB,GACV,OAAO,IAAIyhB,GAAG3nB,KAAK8nB,UAAW5hB,EAAGlG,KAAK6nB,OAO1C,MAAMM,GAGNtlB,YAAYqD,EAIZsB,EAAGC,GACCzH,KAAK4nB,UAAYpgB,EAAGxH,KAAKooB,OAAS3gB,EAElCzH,KAAKwJ,KAAO,QAASxJ,KAAK8nB,UAAY5hB,EAE1CgiB,cAAchiB,GACV,OAAO,IAAIiiB,GAAGnoB,KAAK8nB,UAAW5hB,EAAGlG,KAAKooB,SAO1C,MAAMH,WAAWE,GAEjBtlB,YAAYqD,EAAGsB,EAAGC,GACdxE,MAAMiD,EAAGsB,EAAG,IAAIgW,GAAG/V,IAAKzH,KAAK+nB,MAAQtgB,EAErCzH,KAAKwJ,KAAO,aAE2Bwe,SACvC,OAAOhoB,KAAKooB,OAAOja,KAAKnB,cAKjBmB,WACP,OAAOnO,KAAKooB,OAAOja,KAAKV,kBAKjB6V,aACP,MAAMpd,EAAIlG,KAAK+nB,MAAMjb,UACrB,OAAO5G,EAAEgH,UAAY,KAAO,IAAIya,GAAG3nB,KAAK8nB,UACvB,KAAM,IAAI5Z,GAAGhI,IAElCgiB,cAAchiB,GACV,OAAO,IAAI+hB,GAAGjoB,KAAK8nB,UAAW5hB,EAAGlG,KAAK+nB,QAI9C,SAASM,GAAGniB,EAAGsB,KAAMC,GACjB,GAAIvB,EAAI4E,EAAE5E,GAAIwI,GAAG,aAAc,OAAQlH,GAAItB,aAAakf,GAAI,CACxD,MAAMxa,EAAI4C,GAAEY,WAAW5G,KAAMC,GAC7B,OAAOoH,GAAGjE,GAAI,IAAIqd,GAAG/hB,EAAoB,KAAM0E,GAEnD,CACI,KAAM1E,aAAayhB,IAAMzhB,aAAa+hB,IAAK,MAAM,IAAIlf,EAAEZ,EAAG,iHAC1D,MAAMyC,EAAI1E,EAAE6hB,MAAMvb,MAAMgB,GAAEY,WAAW5G,KAAMC,IAC3C,OAAOoH,GAAGjE,GAAI,IAAIqd,GAAG/hB,EAAE4hB,UACN,KAAMld,IAgB3B,SAAS0d,GAAGpiB,EAAGsB,GACf,GAAItB,EAAI8I,GAAG9I,EAAGkf,IAAK1W,GAAG,kBAAmB,gBAAiBlH,GAAIA,EAAEkG,QAAQ,MAAQ,EAAG,MAAM,IAAI3E,EAAEZ,EAAG,0BAA0BX,iFAC5H,OAAO,IAAI2gB,GAAGjiB,EACG,KAKjB,SAASA,GACL,OAAO,IAAIsX,GAAGhQ,GAAEa,YAAanI,GADjC,CAEEsB,IAGN,SAAS+gB,GAAGriB,EAAGsB,KAAMC,GACjB,GAAIvB,EAAI4E,EAAE5E,GAGV,IAAMsiB,UAAUlpB,SAAWkI,EAAIoK,GAAGtJ,KAAMoG,GAAG,MAAO,OAAQlH,GAAItB,aAAakf,GAAI,CAC3E,MAAMxa,EAAI4C,GAAEY,WAAW5G,KAAMC,GAC7B,OAAOkH,GAAG/D,GAAI,IAAI+c,GAAGzhB,EACJ,KAAM,IAAIgI,GAAGtD,IAElC,CACI,KAAM1E,aAAayhB,IAAMzhB,aAAa+hB,IAAK,MAAM,IAAIlf,EAAEZ,EAAG,iHAC1D,MAAMyC,EAAI1E,EAAE6hB,MAAMvb,MAAMgB,GAAEY,WAAW5G,KAAMC,IAC3C,OAAOkH,GAAG/D,GAAI,IAAI+c,GAAGzhB,EAAE4hB,UAAW5hB,aAAa+hB,GAAK/hB,EAAE0hB,UAAY,KAAM,IAAI1Z,GAAGtD,KAWnF,SAAS6d,GAAGviB,EAAGsB,GACf,OAAOtB,EAAI4E,EAAE5E,GAAIsB,EAAIsD,EAAEtD,IAAKtB,aAAayhB,IAAMzhB,aAAa+hB,MAAQzgB,aAAamgB,IAAMngB,aAAaygB,KAAQ/hB,EAAE4hB,YAActgB,EAAEsgB,WAAa5hB,EAAEiI,OAAS3G,EAAE2G,MAAQjI,EAAE0hB,YAAcpgB,EAAEogB,UAWlL,SAASc,GAAGxiB,EAAGsB,GACf,OAAOtB,EAAI4E,EAAE5E,GAAIsB,EAAIsD,EAAEtD,GAAItB,aAAaiiB,IAAM3gB,aAAa2gB,IAAOjiB,EAAE4hB,YAActgB,EAAEsgB,WAtuCxF,SAAY5hB,EAAGsB,GACX,OAAO,SAAStB,EAAGsB,GACf,GAAItB,EAAEwG,QAAUlF,EAAEkF,MAAO,OAAO,EAChC,GAAIxG,EAAE4V,QAAQxc,SAAWkI,EAAEsU,QAAQxc,OAAQ,OAAO,EAClD,IAAK,IAAImI,EAAI,EAAGA,EAAIvB,EAAE4V,QAAQxc,OAAQmI,IAAK,IAAK6V,GAAGpX,EAAE4V,QAAQrU,GAAID,EAAEsU,QAAQrU,IAAK,OAAO,EACvF,GAAIvB,EAAE6V,QAAQzc,SAAWkI,EAAEuU,QAAQzc,OAAQ,OAAO,EAClD,IAAK,IAAI+L,EAAI,EAAGA,EAAInF,EAAE6V,QAAQzc,OAAQ+L,IAAK,GAAI5D,EAAIvB,EAAE6V,QAAQ1Q,GAAIT,EAAIpD,EAAEuU,QAAQ1Q,GAC/E5D,EAAE2U,KAAOxR,EAAEwR,KAAO3U,EAAE2S,MAAM9T,QAAQsE,EAAEwP,SAAWzB,GAAGlR,EAAEvD,MAAO0G,EAAE1G,OAAQ,OAAO,EAC5E,IAAIuD,EAAGmD,EACP,OAAO1E,EAAEoI,kBAAoB9G,EAAE8G,mBAAqBpI,EAAEiI,KAAK7H,QAAQkB,EAAE2G,SAAWoP,GAAGrX,EAAE8V,QAASxU,EAAEwU,UAAYuB,GAAGrX,EAAE+V,MAAOzU,EAAEyU,OARvH,CASL+B,GAAG9X,GAAI8X,GAAGxW,KAAOtB,EAAEwX,YAAclW,EAAEkW,UA4tC4DiL,CAAGziB,EAAEkiB,OAAQ5gB,EAAE4gB,SAAWliB,EAAE0hB,YAAcpgB,EAAEogB,UA0B7I,MAAMgB,GAON/lB,eAAeqD,GACX,IAAK,IAAIsB,EAAI,EAAGA,EAAItB,EAAE5G,SAAUkI,EAAG,GAAI,IAAMtB,EAAEsB,GAAGlI,OAAQ,MAAM,IAAIyJ,EAAEZ,EAAG,2EACzEnI,KAAK6oB,cAAgB,IAAI/a,GAAG5H,GAOzBI,QAAQJ,GACX,OAAOlG,KAAK6oB,cAAcviB,QAAQJ,EAAE2iB,gBAOxC,SAASC,KACT,OAAO,IAAIF,GAAG,YAqBd,MAAMG,GAENlmB,YAAYqD,GACRlG,KAAKgpB,YAAc9iB,EAOhB+F,wBAAwB/F,GAC3B,IACI,OAAO,IAAI6iB,GAAGpS,GAAGmB,iBAAiB5R,IACpC,MAAOA,GACL,MAAM,IAAI6C,EAAEZ,EAAG,gDAAkDjC,IAOlE+F,sBAAsB/F,GACzB,OAAO,IAAI6iB,GAAGpS,GAAGoB,eAAe7R,IAM7B+Q,WACH,OAAOjX,KAAKgpB,YAAY/R,WAMrBC,eACH,OAAOlX,KAAKgpB,YAAY9R,eAMrBlO,WACH,MAAO,iBAAmBhJ,KAAKiX,WAAa,IAOzC3Q,QAAQJ,GACX,OAAOlG,KAAKgpB,YAAY1iB,QAAQJ,EAAE8iB,cAuBtC,MAAMC,GAKNpmB,YAAYqD,GACRlG,KAAKkpB,YAAchjB,GA0BvB,MAAMijB,GAONtmB,YAAYqD,EAAGsB,GACX,IAAK4hB,SAASljB,IAAMA,GAAK,IAAMA,EAAI,GAAI,MAAM,IAAI6C,EAAEZ,EAAG,0DAA4DjC,GAClH,IAAKkjB,SAAS5hB,IAAMA,GAAK,KAAOA,EAAI,IAAK,MAAM,IAAIuB,EAAEZ,EAAG,6DAA+DX,GACvHxH,KAAKqpB,KAAOnjB,EAAGlG,KAAKspB,MAAQ9hB,EAIrBwR,eACP,OAAOhZ,KAAKqpB,KAILpQ,gBACP,OAAOjZ,KAAKspB,MAOThjB,QAAQJ,GACX,OAAOlG,KAAKqpB,OAASnjB,EAAEmjB,MAAQrpB,KAAKspB,QAAUpjB,EAAEojB,MAEmB9W,SACnE,MAAO,CACHwG,SAAUhZ,KAAKqpB,KACfpQ,UAAWjZ,KAAKspB,OAMjB/W,WAAWrM,GACd,OAAO2L,GAAG7R,KAAKqpB,KAAMnjB,EAAEmjB,OAASxX,GAAG7R,KAAKspB,MAAOpjB,EAAEojB,QAmBrD,MAAMC,GAAK,WAEuD,MAAMC,GACxE3mB,YAAYqD,EAAGsB,EAAGC,GACdzH,KAAK4D,KAAOsC,EAAGlG,KAAKwf,UAAYhY,EAAGxH,KAAKqf,gBAAkB5X,EAE9DgiB,WAAWvjB,EAAGsB,GACV,OAAO,OAASxH,KAAKwf,UAAY,IAAID,GAAGrZ,EAAGlG,KAAK4D,KAAM5D,KAAKwf,UAAWhY,EAAGxH,KAAKqf,iBAAmB,IAAIF,GAAGjZ,EAAGlG,KAAK4D,KAAM4D,EAAGxH,KAAKqf,kBAI5D,MAAMqK,GAC5E7mB,YAAYqD,EAEZsB,EAAGC,GACCzH,KAAK4D,KAAOsC,EAAGlG,KAAKwf,UAAYhY,EAAGxH,KAAKqf,gBAAkB5X,EAE9DgiB,WAAWvjB,EAAGsB,GACV,OAAO,IAAI+X,GAAGrZ,EAAGlG,KAAK4D,KAAM5D,KAAKwf,UAAWhY,EAAGxH,KAAKqf,kBAI5D,SAASsK,GAAGzjB,GACR,OAAQA,GACN,KAAK,EAEG,KAAK,EAEL,KAAK,EACX,OAAO,EAET,KAAK,EACL,KAAK,EACH,OAAO,EAET,QACE,MAAM4B,KAImD,MAAM8hB,GAmBnE/mB,YAAYqD,EAAGsB,EAAGC,EAAGmD,EAAGS,EAAGhM,GACvBW,KAAKmmB,SAAWjgB,EAAGlG,KAAKsL,WAAa9D,EAAGxH,KAAK2e,EAAIlX,EAAGzH,KAAKklB,0BAA4Bta,OAGrF,IAAWS,GAAKrL,KAAK0O,KAAM1O,KAAKqf,gBAAkBhU,GAAK,GAAIrL,KAAKwf,UAAYngB,GAAK,GAEjF8O,WACA,OAAOnO,KAAKmmB,SAAShY,KAErBQ,SACA,OAAO3O,KAAKmmB,SAASxX,GAEgDE,GAAG3I,GACxE,OAAO,IAAI0jB,GAAGzmB,OAAO+W,OAAO/W,OAAO+W,OAAO,GAAIla,KAAKmmB,UAAWjgB,GAAIlG,KAAKsL,WAAYtL,KAAK2e,EAAG3e,KAAKklB,0BAA2BllB,KAAKqf,gBAAiBrf,KAAKwf,WAE1J1Q,GAAG5I,GACC,IAAIsB,EACJ,MAAMC,EAAI,QAAUD,EAAIxH,KAAKmO,YAAS,IAAW3G,OAAI,EAASA,EAAEgF,MAAMtG,GAAI0E,EAAI5K,KAAK6O,GAAG,CAClFV,KAAM1G,EACNuH,IAAI,IAER,OAAOpE,EAAEqE,GAAG/I,GAAI0E,EAEpBsE,GAAGhJ,GACC,IAAIsB,EACJ,MAAMC,EAAI,QAAUD,EAAIxH,KAAKmO,YAAS,IAAW3G,OAAI,EAASA,EAAEgF,MAAMtG,GAAI0E,EAAI5K,KAAK6O,GAAG,CAClFV,KAAM1G,EACNuH,IAAI,IAER,OAAOpE,EAAE8D,KAAM9D,EAEnBuE,GAAGjJ,GAGC,OAAOlG,KAAK6O,GAAG,CACXV,UAAM,EACNa,IAAI,IAGZI,GAAGlJ,GACC,OAAO2jB,GAAG3jB,EAAGlG,KAAKmmB,SAAS2D,WAAY9pB,KAAKmmB,SAAS3W,KAAM,EAAIxP,KAAKmO,KAAMnO,KAAKmmB,SAAS1W,IAEVsa,SAAS7jB,GACvF,YAAO,IAAWlG,KAAKwf,UAAUhG,MAAMhS,GAAKtB,EAAEiH,WAAW3F,WAAQ,IAAWxH,KAAKqf,gBAAgB7F,MAAMhS,GAAKtB,EAAEiH,WAAW3F,EAAE4S,SAE/H1L,KAGI,GAAI1O,KAAKmO,KAAM,IAAK,IAAIjI,EAAI,EAAGA,EAAIlG,KAAKmO,KAAK7O,OAAQ4G,IAAKlG,KAAKiP,GAAGjP,KAAKmO,KAAKlB,IAAI/G,IAEpF+I,GAAG/I,GACC,GAAI,IAAMA,EAAE5G,OAAQ,MAAMU,KAAKoP,GAAG,qCAClC,GAAIua,GAAG3pB,KAAK2O,KAAO4a,GAAGxb,KAAK7H,GAAI,MAAMlG,KAAKoP,GAAG,mDAOjD,MAAM4a,GACNnnB,YAAYqD,EAAGsB,EAAGC,GACdzH,KAAKsL,WAAapF,EAAGlG,KAAKklB,0BAA4B1d,EAAGxH,KAAK2e,EAAIlX,GAAK0Z,GAAGjb,GAE7BwJ,GAAGxJ,EAAGsB,EAAGC,EAAGmD,GAAI,GAC7D,OAAO,IAAIgf,GAAG,CACVjb,GAAIzI,EACJ4jB,WAAYtiB,EACZiI,GAAIhI,EACJ0G,KAAML,GAAGO,YACTW,IAAI,EACJQ,GAAI5E,GACL5K,KAAKsL,WAAYtL,KAAK2e,EAAG3e,KAAKklB,4BAIzC,SAAS+E,GAAG/jB,GACR,MAAMsB,EAAItB,EAAEye,kBAAmBld,EAAI0Z,GAAGjb,EAAEqe,aACxC,OAAO,IAAIyF,GAAG9jB,EAAEqe,cAAe/c,EAAE0d,0BAA2Bzd,GAGlB,SAASyiB,GAAGhkB,EAAGsB,EAAGC,EAAGmD,EAAGS,EAAGhM,EAAI,IACzE,MAAMwL,EAAI3E,EAAEwJ,GAAGrQ,EAAE8qB,OAAS9qB,EAAE+qB,YAAc,EAAmB,EAAc5iB,EAAGC,EAAG4D,GACjFgf,GAAG,sCAAuCxf,EAAGD,GAC7C,MAAM3I,EAAIqoB,GAAG1f,EAAGC,GAChB,IAAItL,EAAGkoB,EACP,GAAIpoB,EAAE8qB,MAAO5qB,EAAI,IAAIgX,GAAG1L,EAAE2U,WAAYiI,EAAI5c,EAAEwU,qBAAsB,GAAIhgB,EAAE+qB,YAAa,CACjF,MAAMlkB,EAAI,GACV,IAAK,MAAM0E,KAAKvL,EAAE+qB,YAAa,CAC3B,MAAM/e,EAAIkf,GAAG/iB,EAAGoD,EAAGnD,GACnB,IAAKoD,EAAEkf,SAAS1e,GAAI,MAAM,IAAItC,EAAEZ,EAAG,UAAUkD,wEAC7Cmf,GAAGtkB,EAAGmF,IAAMnF,EAAE5E,KAAK+J,GAEvB9L,EAAI,IAAIgX,GAAGrQ,GAAIuhB,EAAI5c,EAAEwU,gBAAgBzR,QAAQ1H,GAAK3G,EAAEmX,OAAOxQ,EAAEkU,cAC1D7a,EAAI,KAAMkoB,EAAI5c,EAAEwU,gBACvB,OAAO,IAAImK,GAAG,IAAIrP,GAAGlY,GAAI1C,EAAGkoB,GAGhC,MAAMgD,WAAWxB,GACbyB,kBAAkBxkB,GACd,GAAI,IAAqBA,EAAEyI,GAAI,MAAM,IAAmBzI,EAAEyI,GAAKzI,EAAEkJ,GAAG,GAAGpP,KAAKkpB,sEAAwEhjB,EAAEkJ,GAAG,GAAGpP,KAAKkpB,wEAGjK,OAAOhjB,EAAEsZ,UAAUle,KAAK4E,EAAEiI,MAAO,KAErC7H,QAAQJ,GACJ,OAAOA,aAAaukB,IAmBxB,SAASE,GAAGzkB,EAAGsB,EAAGC,GAClB,OAAO,IAAImiB,GAAG,CACVjb,GAAI,EACJc,GAAIjI,EAAE2e,SAAS1W,GACfqa,WAAY5jB,EAAEgjB,YACdla,GAAIvH,GACLD,EAAE8D,WAAY9D,EAAEmX,EAAGnX,EAAE0d,2BAG5B,MAAM0F,WAAW3B,GACbyB,kBAAkBxkB,GACd,OAAO,IAAI0Y,GAAG1Y,EAAEiI,KAAM,IAAImQ,IAE9BhY,QAAQJ,GACJ,OAAOA,aAAa0kB,IAI5B,MAAMC,WAAW5B,GACbpmB,YAAYqD,EAAGsB,GACXvE,MAAMiD,GAAIlG,KAAK2Q,GAAKnJ,EAExBkjB,kBAAkBxkB,GACd,MAAMsB,EAAImjB,GAAG3qB,KAAMkG,GACR,GAAKuB,EAAIzH,KAAK2Q,GAAGjJ,KAAKxB,GAAK4kB,GAAG5kB,EAAGsB,KAAMoD,EAAI,IAAI2T,GAAG9W,GAC7D,OAAO,IAAImX,GAAG1Y,EAAEiI,KAAMvD,GAE1BtE,QAAQJ,GAEJ,OAAOlG,OAASkG,GAIxB,MAAM6kB,WAAW9B,GACbpmB,YAAYqD,EAAGsB,GACXvE,MAAMiD,GAAIlG,KAAK2Q,GAAKnJ,EAExBkjB,kBAAkBxkB,GACd,MAAMsB,EAAImjB,GAAG3qB,KAAMkG,GACR,GAAKuB,EAAIzH,KAAK2Q,GAAGjJ,KAAKxB,GAAK4kB,GAAG5kB,EAAGsB,KAAMoD,EAAI,IAAI6T,GAAGhX,GAC7D,OAAO,IAAImX,GAAG1Y,EAAEiI,KAAMvD,GAE1BtE,QAAQJ,GAEJ,OAAOlG,OAASkG,GAIxB,MAAM8kB,WAAW/B,GACbpmB,YAAYqD,EAAGsB,GACXvE,MAAMiD,GAAIlG,KAAK6R,GAAKrK,EAExBkjB,kBAAkBxkB,GACd,MAAMsB,EAAI,IAAIkX,GAAGxY,EAAEyY,EAAGV,GAAG/X,EAAEyY,EAAG3e,KAAK6R,KACnC,OAAO,IAAI+M,GAAG1Y,EAAEiI,KAAM3G,GAE1BlB,QAAQJ,GAEJ,OAAOlG,OAASkG,GAIwB,SAAS+kB,GAAG/kB,EAAGsB,EAAGC,EAAGmD,GACjE,MAAMS,EAAInF,EAAEwJ,GAAG,EAAiBlI,EAAGC,GACnC4iB,GAAG,sCAAuChf,EAAGT,GAC7C,MAAMvL,EAAI,GAAIwL,EAAIsP,GAAGW,QACrB3H,GAAGvI,GAAC,CAAI1E,EAAG0E,KACP,MAAM3I,EAAIipB,GAAG1jB,EAAGtB,EAAGuB,GAGXmD,EAAIE,EAAEF,GACd,MAAMrL,EAAI8L,EAAE6D,GAAGjN,GACf,GAAI2I,aAAa6f,GAEjBprB,EAAEiC,KAAKW,OAAS,CACZ,MAAMiE,EAAI4kB,GAAGlgB,EAAGrL,GAChB,MAAQ2G,IAAM7G,EAAEiC,KAAKW,GAAI4I,EAAElB,IAAI1H,EAAGiE,QAG1C,MAAMjE,EAAI,IAAIsU,GAAGlX,GACjB,OAAO,IAAIqqB,GAAG7e,EAAG5I,EAAGoJ,EAAEgU,iBAGqC,SAAS8L,GAAGjlB,EAAGsB,EAAGC,EAAGmD,EAAGS,EAAGhM,GACtF,MAAMwL,EAAI3E,EAAEwJ,GAAG,EAAiBlI,EAAGC,GAAIxF,EAAI,CAAEsoB,GAAG/iB,EAAGoD,EAAGnD,IAAMlI,EAAI,CAAE8L,GAClE,GAAIhM,EAAEC,OAAS,GAAK,EAAG,MAAM,IAAIyJ,EAAEZ,EAAG,YAAYX,0GAClD,IAAK,IAAItB,EAAI,EAAGA,EAAI7G,EAAEC,OAAQ4G,GAAK,EAAGjE,EAAEX,KAAKipB,GAAG/iB,EAAGnI,EAAE6G,KAAM3G,EAAE+B,KAAKjC,EAAE6G,EAAI,IACxE,MAAMuhB,EAAI,GAAIxhB,EAAIkU,GAAGW,QAGrB,IAAK,IAAI5U,EAAIjE,EAAE3C,OAAS,EAAG4G,GAAK,IAAKA,EAAG,IAAKskB,GAAG/C,EAAGxlB,EAAEiE,IAAK,CACtD,MAAMsB,EAAIvF,EAAEiE,GACZ,IAAIuB,EAAIlI,EAAE2G,GAGFuB,EAAIqD,EAAErD,GACd,MAAMmD,EAAIC,EAAEqE,GAAG1H,GACf,GAAIC,aAAagjB,GAEjBhD,EAAEnmB,KAAKkG,OAAS,CACZ,MAAMtB,EAAI4kB,GAAGrjB,EAAGmD,GAChB,MAAQ1E,IAAMuhB,EAAEnmB,KAAKkG,GAAIvB,EAAE0D,IAAInC,EAAGtB,KAG1C,MAAMS,EAAI,IAAI4P,GAAGkR,GACjB,OAAO,IAAIiC,GAAGzjB,EAAGU,EAAGkE,EAAEwU,iBAStB,SAAS+L,GAAGllB,EAAGsB,EAAGC,EAAGmD,GAAI,GACzB,OAAOkgB,GAAGrjB,EAAGvB,EAAEwJ,GAAG9E,EAAI,EAAwB,EAAmBpD,IAWjE,SAASsjB,GAAG5kB,EAAGsB,GACf,GAAI6jB,GAGJnlB,EAAI4E,EAAE5E,IAAK,OAAOmkB,GAAG,2BAA4B7iB,EAAGtB,GAAIokB,GAAGpkB,EAAGsB,GAC9D,GAAItB,aAAa+iB,GAUjB,OAAO,SAAS/iB,EAAGsB,GAEf,IAAKmiB,GAAGniB,EAAEmH,IAAK,MAAMnH,EAAE4H,GAAG,GAAGlJ,EAAEgjB,0DAC/B,IAAK1hB,EAAE2G,KAAM,MAAM3G,EAAE4H,GAAG,GAAGlJ,EAAEgjB,0DAC7B,MAAMzhB,EAAIvB,EAAEwkB,kBAAkBljB,GAC9BC,GAAKD,EAAE6X,gBAAgB/d,KAAKmG,GALzB,CAWNvB,EAAGsB,GAAI,KACR,QAAI,IAAWtB,GAAKsB,EAAE0d,0BAItB,OAAO,KACP,GAGA1d,EAAE2G,MAAQ3G,EAAEgY,UAAUle,KAAKkG,EAAE2G,MAAOjI,aAAa3F,MAAO,CAOpD,GAAIiH,EAAE2e,SAASnX,IAAM,IAA0BxH,EAAEmH,GAAI,MAAMnH,EAAE4H,GAAG,mCAChE,OAAO,SAASlJ,EAAGsB,GACf,MAAMC,EAAI,GACV,IAAImD,EAAI,EACR,IAAK,MAAMS,KAAKnF,EAAG,CACf,IAAIA,EAAI4kB,GAAGzf,EAAG7D,EAAE2H,GAAGvE,IACnB,MAAQ1E,IAGRA,EAAI,CACA8W,UAAW,eACXvV,EAAEnG,KAAK4E,GAAI0E,IAEnB,MAAO,CACHyO,WAAY,CACRC,OAAQ7R,IAdb,CAiBLvB,EAAGsB,GAET,OAAO,SAAStB,EAAGsB,GACf,GAAI,QAAUtB,EAAI4E,EAAE5E,IAAK,MAAO,CAC5B8W,UAAW,cAEf,GAAI,iBAAmB9W,EAAG,OAAO+X,GAAGzW,EAAEmX,EAAGzY,GACzC,GAAI,kBAAoBA,EAAG,MAAO,CAC9B0S,aAAc1S,GAElB,GAAI,iBAAmBA,EAAG,MAAO,CAC7BiS,YAAajS,GAEjB,GAAIA,aAAaL,KAAM,CACnB,MAAM4B,EAAIuK,GAAGsZ,SAASplB,GACtB,MAAO,CACHsS,eAAgByH,GAAGzY,EAAEmX,EAAGlX,IAGhC,GAAIvB,aAAa8L,GAAI,CAIjB,MAAMvK,EAAI,IAAIuK,GAAG9L,EAAE+L,QAAS,IAAM3E,KAAKoE,MAAMxL,EAAEgM,YAAc,MAC7D,MAAO,CACHsG,eAAgByH,GAAGzY,EAAEmX,EAAGlX,IAGhC,GAAIvB,aAAaijB,GAAI,MAAO,CACxBpQ,cAAe,CACXC,SAAU9S,EAAE8S,SACZC,UAAW/S,EAAE+S,YAGrB,GAAI/S,aAAa6iB,GAAI,MAAO,CACxBlQ,WAAYqH,GAAG1Y,EAAEmX,EAAGzY,EAAE8iB,cAE1B,GAAI9iB,aAAayhB,GAAI,CACjB,MAAMlgB,EAAID,EAAE8D,WAAYV,EAAI1E,EAAE4hB,UAAUvD,YACxC,IAAK3Z,EAAEtE,QAAQmB,GAAI,MAAMD,EAAE4H,GAAG,sCAAsCxE,EAAEmB,aAAanB,EAAEoB,uCAAuCvE,EAAEsE,aAAatE,EAAEuE,YAC7I,MAAO,CACH8M,eAAgBwH,GAAGpa,EAAE4hB,UAAUvD,aAAe/c,EAAE8D,WAAYpF,EAAE2hB,KAAK1Z,OAG3E,MAAM3G,EAAE4H,GAAG,4BAA4BN,GAAG5I,MA1CvC,CAkDNA,EAAGsB,GAGR,SAAS8iB,GAAGpkB,EAAGsB,GACX,MAAMC,EAAI,GACV,OAAQ,SAASvB,GACb,IAAK,MAAMsB,KAAKtB,EAAG,GAAI/C,OAAOE,UAAU4P,eAAeC,KAAKhN,EAAGsB,GAAI,OAAO,EAC1E,OAAO,EAFH,CAGNtB,GAMFsB,EAAE2G,MAAQ3G,EAAE2G,KAAK7O,OAAS,GAAKkI,EAAEgY,UAAUle,KAAKkG,EAAE2G,MAN3CgF,GAAGjN,GAAC,CAAIA,EAAG0E,KACd,MAAMS,EAAIyf,GAAGlgB,EAAGpD,EAAEsH,GAAG5I,IACrB,MAAQmF,IAAM5D,EAAEvB,GAAKmF,MAIgC,CACrD4M,SAAU,CACNzB,OAAQ/O,IAKpB,SAAS4jB,GAAGnlB,GACR,QAAS,iBAAmBA,GAAK,OAASA,GAAKA,aAAa3F,OAAS2F,aAAaL,MAAQK,aAAa8L,IAAM9L,aAAaijB,IAAMjjB,aAAa6iB,IAAM7iB,aAAayhB,IAAMzhB,aAAa+iB,IAGvL,SAASoB,GAAGnkB,EAAGsB,EAAGC,GACd,IAAK4jB,GAAG5jB,KAAO,SAASvB,GACpB,MAAO,iBAAmBA,GAAK,OAASA,IAAM/C,OAAOooB,eAAerlB,KAAO/C,OAAOE,WAAa,OAASF,OAAOooB,eAAerlB,IADnH,CAEbuB,GAAI,CACF,MAAMmD,EAAIkE,GAAGrH,GACb,KAAM,cAAgBmD,EAAIpD,EAAE4H,GAAGlJ,EAAI,oBAAsBsB,EAAE4H,GAAGlJ,EAAI,IAAM0E,IAM5E,SAAS2f,GAAGrkB,EAAGsB,EAAGC,GAClB,IAGAD,EAAIsD,EAAEtD,cAAeohB,GAAI,OAAOphB,EAAEqhB,cAClC,GAAI,iBAAmBrhB,EAAG,OAAO0jB,GAAGhlB,EAAGsB,GACvC,MAAMqiB,GAAG,kDAAmD3jB,GACxC,OACR,EAAQuB,GAKpB,MAAM+jB,GAAK,IAAIlU,OAAO,iBAUtB,SAAS4T,GAAGhlB,EAAGsB,EAAGC,GAClB,GAAID,EAAEikB,OAAOD,KAAO,EAAG,MAAM3B,GAAG,uBAAuBriB,wDAAyDtB,GAC5F,OACR,EAAQuB,GACpB,IACI,OAAO,IAAImhB,MAAMphB,EAAEmG,MAAM,MAAMkb,cACjC,MAAOje,GACL,MAAMif,GAAG,uBAAuBriB,6EAA8EtB,GAC1F,OACR,EAAQuB,IAI5B,SAASoiB,GAAG3jB,EAAGsB,EAAGC,EAAGmD,EAAGS,GACpB,MAAMhM,EAAIuL,IAAMA,EAAEsC,UAAWrC,OAAI,IAAWQ,EAC5C,IAAIpJ,EAAI,YAAYuF,+BACpBC,IAAMxF,GAAK,0BAA2BA,GAAK,KAC3C,IAAI1C,EAAI,GACR,OAAQF,GAAKwL,KAAOtL,GAAK,UAAWF,IAAME,GAAK,aAAaqL,KAAMC,IAAMtL,GAAK,gBAAgB8L,KAC7F9L,GAAK,KAAM,IAAIwJ,EAAEZ,EAAGlG,EAAIiE,EAAI3G,GAGyC,SAASirB,GAAGtkB,EAAGsB,GACpF,OAAOtB,EAAE6W,MAAM7W,GAAKA,EAAEI,QAAQkB,KA2B9B,MAAMkkB,GAMN7oB,YAAYqD,EAAGsB,EAAGC,EAAGmD,EAAGS,GACpBrL,KAAK2rB,WAAazlB,EAAGlG,KAAK4rB,gBAAkBpkB,EAAGxH,KAAK6nB,KAAOpgB,EAAGzH,KAAK6rB,UAAYjhB,EAC/E5K,KAAK8rB,WAAazgB,EAE4D2c,SAC9E,OAAOhoB,KAAK6nB,KAAK1Z,KAAKnB,cAIf+e,UACP,OAAO,IAAIpE,GAAG3nB,KAAK2rB,WAAY3rB,KAAK8rB,WAAY9rB,KAAK6nB,MAMlD7I,SACH,OAAO,OAAShf,KAAK6rB,UAQlBjoB,OACH,GAAI5D,KAAK6rB,UAAW,CAChB,GAAI7rB,KAAK8rB,WAAY,CAGjB,MAAM5lB,EAAI,IAAI8lB,GAAGhsB,KAAK2rB,WAAY3rB,KAAK4rB,gBAAiB5rB,KAAK6nB,KAAM7nB,KAAK6rB,UACvD,MACjB,OAAO7rB,KAAK8rB,WAAWG,cAAc/lB,GAEzC,OAAOlG,KAAK4rB,gBAAgBM,aAAalsB,KAAK6rB,UAAUjoB,KAAKM,QAcrE+I,IAAI/G,GACA,GAAIlG,KAAK6rB,UAAW,CAChB,MAAMrkB,EAAIxH,KAAK6rB,UAAUjoB,KAAKwW,MAAM+R,GAAG,uBAAwBjmB,IAC/D,GAAI,OAASsB,EAAG,OAAOxH,KAAK4rB,gBAAgBM,aAAa1kB,KAejE,MAAMwkB,WAAWN,GAOjB9nB,OACI,OAAOX,MAAMW,QAUjB,MAAMwoB,GAENvpB,YAAYqD,EAAGsB,GACXxH,KAAKqsB,MAAQ7kB,EAAGxH,KAAKssB,MAAQpmB,EAEmCqmB,WAChE,MAAO,IAAKvsB,KAAKqsB,OAEyCvY,WAC1D,OAAO9T,KAAKusB,KAAKjtB,OAEgDwb,YACjE,OAAO,IAAM9a,KAAKusB,KAAKjtB,OAQpBqN,QAAQzG,EAAGsB,GACdxH,KAAKqsB,MAAM1f,QAAQzG,EAAGsB,IAU1B,SAASglB,GAAGtmB,EAAGsB,GACf,OAAOtB,EAAI4E,EAAE5E,GAAIsB,EAAIsD,EAAEtD,GAAItB,aAAawlB,IAAMlkB,aAAakkB,GAAKxlB,EAAEylB,aAAenkB,EAAEmkB,YAAczlB,EAAE2hB,KAAKvhB,QAAQkB,EAAEqgB,QAAU,OAAS3hB,EAAE2lB,UAAY,OAASrkB,EAAEqkB,UAAY3lB,EAAE2lB,UAAUvlB,QAAQkB,EAAEqkB,aAAe3lB,EAAE4lB,aAAetkB,EAAEskB,WAAa5lB,aAAakmB,IAAM5kB,aAAa4kB,IAAO1D,GAAGxiB,EAAEomB,MAAO9kB,EAAE8kB,QAAUxa,GAAG5L,EAAEqmB,KAAM/kB,EAAE+kB,KAAMC,IAKjU,SAASL,GAAGjmB,EAAGsB,GACf,MAAO,iBAAmBA,EAAI0jB,GAAGhlB,EAAGsB,GAAKA,aAAaohB,GAAKphB,EAAEqhB,cAAgBrhB,EAAElD,UAAUukB,cA2B7F,MAAM4D,IAUF,SAASC,GAAGxmB,KAAMsB,GAClB,IAAK,MAAMC,KAAKD,EAAGtB,EAAIuB,EAAEklB,OAAOzmB,GAChC,OAAOA,EAGX,MAAM0mB,WAAWH,GACb5pB,YAAYqD,EAAGsB,EAAGC,GACdxE,QAASjD,KAAK8R,GAAK5L,EAAGlG,KAAKgS,GAAKxK,EAAGxH,KAAK2S,GAAKlL,EAAGzH,KAAKwJ,KAAO,QAEhEmjB,OAAOzmB,GACH,MAAMsB,EAAIyiB,GAAG/jB,EAAE4hB,WAAYrgB,EAAI,SAASvB,EAAGsB,EAAGC,EAAGmD,EAAGS,EAAGhM,EAAGwL,GACtD,IAAI5I,EACJ,GAAIoJ,EAAE4C,aAAc,CAChB,GAAI,mBAA0C5O,GAAK,uBAAkDA,EAAG,MAAM,IAAI0J,EAAEZ,EAAG,qCAAqC9I,+BAC5J,GAAI,OAAkBA,GAAK,WAA0BA,EAAG,CACpDwtB,GAAGhiB,EAAGxL,GACN,MAAMmI,EAAI,GACV,IAAK,MAAMC,KAAKoD,EAAGrD,EAAElG,KAAKwrB,GAAGliB,EAAG1E,EAAGuB,IACnCxF,EAAI,CACAoX,WAAY,CACRC,OAAQ9R,SAGbvF,EAAI6qB,GAAGliB,EAAG1E,EAAG2E,OACjB,OAAkBxL,GAAK,WAA0BA,GAAK,uBAAkDA,GAAKwtB,GAAGhiB,EAAGxL,GAC1H4C,EAAImpB,GAAG3jB,EAmDC,QAnDKoD,EACM,OAAkBxL,GAAK,WAA0BA,GACpE,MAAME,EAAI4c,GAAG3Y,OAAO6H,EAAGhM,EAAG4C,GAC1B,OAAO,SAASiE,EAAGsB,GACf,GAAIA,EAAEmB,IAAK,CACP,MAAMlB,EAAImW,GAAG1X,GACb,GAAI,OAASuB,IAAMA,EAAEnB,QAAQkB,EAAE4S,OAAQ,MAAM,IAAIrR,EAAEZ,EAAG,oJAAoJV,EAAEuB,oBAAoBxB,EAAE4S,MAAMpR,eACxO,MAAM4B,EAAI+S,GAAGzX,GACb,OAAS0E,GAAKmiB,GAAG7mB,EAAGsB,EAAE4S,MAAOxP,GAEjC,MAAMnD,EAAI,SAASvB,EAAGsB,GAClB,IAAK,MAAMC,KAAKvB,EAAE6V,QAAS,GAAIvU,EAAEkG,QAAQjG,EAAE2U,KAAO,EAAG,OAAO3U,EAAE2U,GAC9D,OAAO,KAFD,CAGRlW,EAaF,SAASA,GACL,OAAQA,GACN,IAAK,KACH,MAAO,CAAE,KAAuB,UAElC,IAAK,iBACH,MAAO,CAAE,iBAAwC,qBAAgD,UAEnG,IAAK,KACH,MAAO,CAAE,qBAAgD,KAAgB,UAE3E,IAAK,qBACH,MAAO,CAAE,iBAAwC,qBAAgD,KAAgB,UAEnH,IAAK,SACH,MAAO,CAAE,iBAAwC,qBAAgD,KAAgB,SAAwB,MAE3I,QACE,MAAO,IAlBf,CAoBEsB,EAAE4U,KACJ,GAAI,OAAS3U,EAEb,MAAMA,IAAMD,EAAE4U,GAAK,IAAIrT,EAAEZ,EAAG,gDAAgDX,EAAE4U,GAAGpT,uBAAyB,IAAID,EAAEZ,EAAG,kCAAkCX,EAAE4U,GAAGpT,6BAA6BvB,EAAEuB,wBA9CtL,CA+CL9C,EAAG3G,GAAIA,EAjEkB,CAkE7B2G,EAAEkiB,OAAQ,EAAS5gB,EAAGtB,EAAE4hB,UAAUvD,YAAavkB,KAAK8R,GAAI9R,KAAKgS,GAAIhS,KAAK2S,IACxE,OAAO,IAAIwV,GAAGjiB,EAAE4hB,UAAW5hB,EAAE0hB,UAAW,SAAS1hB,EAAGsB,GAChD,MAAMC,EAAIvB,EAAE6V,QAAQiR,OAAO,CAAExlB,IAC7B,OAAO,IAAIgW,GAAGtX,EAAEiI,KAAMjI,EAAEoI,gBAAiBpI,EAAEuX,gBAAgBhR,QAAShF,EAAGvB,EAAEwG,MAAOxG,EAAEwX,UAAWxX,EAAE8V,QAAS9V,EAAE+V,OAFtE,CAGtC/V,EAAEkiB,OAAQ3gB,KAchB,SAASwlB,GAAG/mB,EAAGsB,EAAGC,GAClB,MAAMmD,EAAIpD,EAAG6D,EAAI8gB,GAAG,QAASjmB,GAC7B,OAAO,IAAI0mB,GAAGvhB,EAAGT,EAAGnD,GAGxB,MAAMylB,WAAWT,GACb5pB,YAAYqD,EAAGsB,GACXvE,QAASjD,KAAK8R,GAAK5L,EAAGlG,KAAKgT,GAAKxL,EAAGxH,KAAKwJ,KAAO,UAEnDmjB,OAAOzmB,GACH,MAAMsB,EAAI,SAAStB,EAAGsB,EAAGC,GACrB,GAAI,OAASvB,EAAE8V,QAAS,MAAM,IAAIjT,EAAEZ,EAAG,wFACvC,GAAI,OAASjC,EAAE+V,MAAO,MAAM,IAAIlT,EAAEZ,EAAG,qFACrC,MAAMyC,EAAI,IAAIwS,GAAG5V,EAAGC,GACpB,OAAO,SAASvB,EAAGsB,GACf,GAAI,OAASmW,GAAGzX,GAAI,CAEhB,MAAMuB,EAAImW,GAAG1X,GACb,OAASuB,GAAKslB,GAAG7mB,EAAGuB,EAAGD,EAAE4S,QAJ1B,CAMLlU,EAAG0E,GAAIA,EAVH,CAsBb1E,EAAEkiB,OAAQpoB,KAAK8R,GAAI9R,KAAKgT,IACrB,OAAO,IAAImV,GAAGjiB,EAAE4hB,UAAW5hB,EAAE0hB,UAAW,SAAS1hB,EAAGsB,GAEhD,MAAMC,EAAIvB,EAAEuX,gBAAgBuP,OAAO,CAAExlB,IACrC,OAAO,IAAIgW,GAAGtX,EAAEiI,KAAMjI,EAAEoI,gBAAiB7G,EAAGvB,EAAE6V,QAAQtP,QAASvG,EAAEwG,MAAOxG,EAAEwX,UAAWxX,EAAE8V,QAAS9V,EAAE+V,OAH9D,CAItC/V,EAAEkiB,OAAQ5gB,KAYhB,SAAS2lB,GAAGjnB,EAAGsB,EAAI,OACnB,MAAMC,EAAID,EAAGoD,EAAIuhB,GAAG,UAAWjmB,GAC/B,OAAO,IAAIgnB,GAAGtiB,EAAGnD,GAGrB,MAAM2lB,WAAWX,GACb5pB,YAAYqD,EAAGsB,EAAGC,GACdxE,QAASjD,KAAKwJ,KAAOtD,EAAGlG,KAAKmT,GAAK3L,EAAGxH,KAAKoT,GAAK3L,EAEnDklB,OAAOzmB,GACH,OAAO,IAAIiiB,GAAGjiB,EAAE4hB,UAAW5hB,EAAE0hB,UAAW,SAAS1hB,EAAGsB,EAAGC,GACnD,OAAO,IAAI+V,GAAGtX,EAAEiI,KAAMjI,EAAEoI,gBAAiBpI,EAAEuX,gBAAgBhR,QAASvG,EAAE6V,QAAQtP,QAASjF,EAAGC,EAAGvB,EAAE8V,QAAS9V,EAAE+V,OADtE,CAEtC/V,EAAEkiB,OAAQpoB,KAAKmT,GAAInT,KAAKoT,MAS9B,SAASia,GAAGnnB,GACZ,OAAO+I,GAAG,QAAS/I,GAAI,IAAIknB,GAAG,QAASlnB,EAAG,KAW1C,SAASonB,GAAGpnB,GACZ,OAAO+I,GAAG,cAAe/I,GAAI,IAAIknB,GAAG,cAAelnB,EAAG,KAG1D,MAAMqnB,WAAWd,GACb5pB,YAAYqD,EAAGsB,EAAGC,GACdxE,QAASjD,KAAKwJ,KAAOtD,EAAGlG,KAAKoU,GAAK5M,EAAGxH,KAAKsT,GAAK7L,EAEnDklB,OAAOzmB,GACH,MAAMsB,EAAIgmB,GAAGtnB,EAAGlG,KAAKwJ,KAAMxJ,KAAKoU,GAAIpU,KAAKsT,IACzC,OAAO,IAAI6U,GAAGjiB,EAAE4hB,UAAW5hB,EAAE0hB,UAAW,SAAS1hB,EAAGsB,GAChD,OAAO,IAAIgW,GAAGtX,EAAEiI,KAAMjI,EAAEoI,gBAAiBpI,EAAEuX,gBAAgBhR,QAASvG,EAAE6V,QAAQtP,QAASvG,EAAEwG,MAAOxG,EAAEwX,UAAWlW,EAAGtB,EAAE+V,OAD9E,CAEtC/V,EAAEkiB,OAAQ5gB,KAIpB,SAASimB,MAAMvnB,GACX,OAAO,IAAIqnB,GAAG,UAAWrnB,GACV,GAGnB,SAASwnB,MAAMxnB,GACX,OAAO,IAAIqnB,GAAG,aAAcrnB,GACb,GAGnB,MAAMynB,WAAWlB,GACb5pB,YAAYqD,EAAGsB,EAAGC,GACdxE,QAASjD,KAAKwJ,KAAOtD,EAAGlG,KAAKoU,GAAK5M,EAAGxH,KAAKsT,GAAK7L,EAEnDklB,OAAOzmB,GACH,MAAMsB,EAAIgmB,GAAGtnB,EAAGlG,KAAKwJ,KAAMxJ,KAAKoU,GAAIpU,KAAKsT,IACzC,OAAO,IAAI6U,GAAGjiB,EAAE4hB,UAAW5hB,EAAE0hB,UAAW,SAAS1hB,EAAGsB,GAChD,OAAO,IAAIgW,GAAGtX,EAAEiI,KAAMjI,EAAEoI,gBAAiBpI,EAAEuX,gBAAgBhR,QAASvG,EAAE6V,QAAQtP,QAASvG,EAAEwG,MAAOxG,EAAEwX,UAAWxX,EAAE8V,QAASxU,GADpF,CAEtCtB,EAAEkiB,OAAQ5gB,KAIpB,SAASomB,MAAM1nB,GACX,OAAO,IAAIynB,GAAG,YAAaznB,GACZ,GAGnB,SAAS2nB,MAAM3nB,GACX,OAAO,IAAIynB,GAAG,QAASznB,GAAkB,GAGsB,SAASsnB,GAAGtnB,EAAGsB,EAAGC,EAAGmD,GACpF,GAAInD,EAAE,GAAKqD,EAAErD,EAAE,IAAKA,EAAE,aAAcikB,GAAI,OAAO,SAASxlB,EAAGsB,EAAGC,EAAGmD,EAAGS,GAChE,IAAKT,EAAG,MAAM,IAAI7B,EAAEV,EAAG,uDAAuDZ,QAC9E,MAAMpI,EAAI,GAQF,IAAK,MAAMoI,KAAKqW,GAAG5X,GAAI,GAAIuB,EAAE2S,MAAMnM,aAAc5O,EAAEiC,KAAKsY,GAAGpS,EAAGoD,EAAE3G,UAAY,CAChF,MAAMiC,EAAI0E,EAAEhH,KAAKwW,MAAM3S,EAAE2S,OACzB,GAAIpC,GAAG9R,GAAI,MAAM,IAAI6C,EAAEZ,EAAG,+FAAiGV,EAAE2S,MAAQ,2HACrI,GAAI,OAASlU,EAAG,CACZ,MAAMA,EAAIuB,EAAE2S,MAAM3M,kBAClB,MAAM,IAAI1E,EAAEZ,EAAG,+FAA+FjC,4CAElH7G,EAAEiC,KAAK4E,GAEX,OAAO,IAAI+W,GAAG5d,EAAGgM,GAnB0B,CAuB9CnF,EAAEkiB,OAAQliB,EAAE4hB,UAAUvD,YAAa/c,EAAGC,EAAE,GAAGokB,UAAWjhB,GACvD,CACI,MAAMS,EAAI4e,GAAG/jB,EAAE4hB,WACf,OAAO,SAAS5hB,EAAGsB,EAAGC,EAAGmD,EAAGS,EAAGhM,GAE3B,MAAMwL,EAAI3E,EAAEuX,gBACZ,GAAIpS,EAAE/L,OAASuL,EAAEvL,OAAQ,MAAM,IAAIyJ,EAAEZ,EAAG,kCAAkCyC,8FAC1E,MAAM3I,EAAI,GACV,IAAK,IAAI5C,EAAI,EAAGA,EAAIgM,EAAE/L,OAAQD,IAAK,CAC/B,MAAME,EAAI8L,EAAEhM,GACZ,GAAIwL,EAAExL,GAAG+a,MAAMnM,aAAc,CACzB,GAAI,iBAAmB1O,EAAG,MAAM,IAAIwJ,EAAEZ,EAAG,uDAAuDyC,yBAAyBrL,KACzH,IAAKse,GAAG3X,KAAO,IAAM3G,EAAEmO,QAAQ,KAAM,MAAM,IAAI3E,EAAEZ,EAAG,+FAA+FyC,yCAAyCrL,wBAC5L,MAAMkI,EAAIvB,EAAEiI,KAAK3B,MAAMgB,GAAEY,WAAW7O,IACpC,IAAK2O,GAAGU,cAAcnH,GAAI,MAAM,IAAIsB,EAAEZ,EAAG,qGAAqGyC,kDAAkDnD,4DAChM,MAAM4D,EAAI,IAAI6C,GAAGzG,GACjBxF,EAAEX,KAAKsY,GAAGpS,EAAG6D,QACV,CACH,MAAMnF,EAAIklB,GAAG3jB,EAAGmD,EAAGrL,GACnB0C,EAAEX,KAAK4E,IAGf,OAAO,IAAI+W,GAAGhb,EAAG5C,GAnBd,CAyBV6G,EAAEkiB,OAAQliB,EAAE4hB,UAAUvD,YAAalZ,EAAG7D,EAAGC,EAAGmD,IAIjD,SAASkiB,GAAG5mB,EAAGsB,EAAGC,GACd,GAAI,iBAAoBA,EAAIqD,EAAErD,IAAK,CAC/B,GAAI,KAAOA,EAAG,MAAM,IAAIsB,EAAEZ,EAAG,qHAC7B,IAAK0V,GAAGrW,KAAO,IAAMC,EAAEiG,QAAQ,KAAM,MAAM,IAAI3E,EAAEZ,EAAG,yGAAyGV,gCAC7J,MAAMmD,EAAIpD,EAAE2G,KAAK3B,MAAMgB,GAAEY,WAAW3G,IACpC,IAAKyG,GAAGU,cAAchE,GAAI,MAAM,IAAI7B,EAAEZ,EAAG,kIAAkIyC,uDAAuDA,EAAEtL,YACpO,OAAOsa,GAAG1T,EAAG,IAAIgI,GAAGtD,IAExB,GAAInD,aAAakgB,GAAI,OAAO/N,GAAG1T,EAAGuB,EAAEogB,MACpC,MAAM,IAAI9e,EAAEZ,EAAG,uHAAuH2G,GAAGrH,OAMzI,SAASolB,GAAG3mB,EAAGsB,GACf,IAAKjH,MAAMC,QAAQ0F,IAAM,IAAMA,EAAE5G,OAAQ,MAAM,IAAIyJ,EAAEZ,EAAG,qDAAqDX,EAAEwB,wBAC/G,GAAI9C,EAAE5G,OAAS,GAAI,MAAM,IAAIyJ,EAAEZ,EAAG,mBAAmBX,EAAEwB,4EAG3D,SAAS+jB,GAAG7mB,EAAGsB,EAAGC,GACd,IAAKA,EAAEnB,QAAQkB,GAAI,MAAM,IAAIuB,EAAEZ,EAAG,qGAAqGX,EAAEwB,yCAAyCxB,EAAEwB,0FAA0FvB,EAAEuB,wBAkDpR,SAAS8kB,GAAG5nB,EAAGsB,EAAGC,GACd,IAAImD,EAIJ,OAAOA,EAAI1E,EAAIuB,IAAMA,EAAE0iB,OAAS1iB,EAAE2iB,aAAelkB,EAAE6nB,YAAYvmB,EAAGC,GAAKvB,EAAE6nB,YAAYvmB,GAAKA,EAC1FoD,EAGJ,MAAMojB,WAAW,MACb9B,aAAahmB,EAAGsB,EAAI,QAChB,OAAQkR,GAAGxS,IACT,KAAK,EACH,OAAO,KAET,KAAK,EACH,OAAOA,EAAE0S,aAEX,KAAK,EACH,OAAOhB,GAAG1R,EAAEgT,cAAgBhT,EAAEiT,aAEhC,KAAK,EACH,OAAOnZ,KAAKiuB,iBAAiB/nB,EAAEsS,gBAEjC,KAAK,EACH,OAAOxY,KAAKkuB,uBAAuBhoB,EAAGsB,GAExC,KAAK,EACH,OAAOtB,EAAEiS,YAEX,KAAK,EACH,OAAOnY,KAAKmuB,aAAatW,GAAG3R,EAAE2S,aAEhC,KAAK,EACH,OAAO7Y,KAAKouB,iBAAiBloB,EAAE4S,gBAEjC,KAAK,EACH,OAAO9Y,KAAKquB,gBAAgBnoB,EAAE6S,eAEhC,KAAK,EACH,OAAO/Y,KAAKsuB,aAAapoB,EAAEmT,WAAY7R,GAEzC,KAAK,GACH,OAAOxH,KAAKuuB,cAAcroB,EAAE+R,SAAUzQ,GAExC,QACE,MAAMM,KAGdymB,cAAcroB,EAAGsB,GACb,MAAMC,EAAI,GACV,OAAO0L,GAAGjN,EAAEsQ,QAAM,CAAItQ,EAAG0E,KACrBnD,EAAEvB,GAAKlG,KAAKksB,aAAathB,EAAGpD,MAC3BC,EAET4mB,gBAAgBnoB,GACZ,OAAO,IAAIijB,GAAGvR,GAAG1R,EAAE8S,UAAWpB,GAAG1R,EAAE+S,YAEvCqV,aAAapoB,EAAGsB,GACZ,OAAQtB,EAAEoT,QAAU,IAAI5R,KAAKxB,GAAKlG,KAAKksB,aAAahmB,EAAGsB,KAE3D0mB,uBAAuBhoB,EAAGsB,GACtB,OAAQA,GACN,IAAK,WACH,MAAMC,EAAI2Q,GAAGlS,GACb,OAAO,MAAQuB,EAAI,KAAOzH,KAAKksB,aAAazkB,EAAGD,GAEjD,IAAK,WACH,OAAOxH,KAAKiuB,iBAAiB3V,GAAGpS,IAElC,QACE,OAAO,MAGf+nB,iBAAiB/nB,GACb,MAAMsB,EAAI+P,GAAGrR,GACb,OAAO,IAAI8L,GAAGxK,EAAEyK,QAASzK,EAAEmQ,OAE/B6W,mBAAmBtoB,EAAGsB,GAClB,MAAMC,EAAI+F,GAAEY,WAAWlI,GACvB6B,EAAE0Y,GAAGhZ,IACL,MAAMmD,EAAI,IAAIkB,GAAErE,EAAEwF,IAAI,GAAIxF,EAAEwF,IAAI,IAAK5B,EAAI,IAAI6C,GAAGzG,EAAEoF,SAAS,IAC3D,OAAOjC,EAAEtE,QAAQkB,IAEjBpI,EAAE,YAAYiM,gEAAgET,EAAEmB,aAAanB,EAAEoB,gGAAgGxE,EAAEuE,aAAavE,EAAEwE,sBAChNX,IAGJxI,YAAYqD,GACRjD,QAASjD,KAAK8nB,UAAY5hB,EAE9BioB,aAAajoB,GACT,OAAO,IAAI6iB,GAAG7iB,GAElBkoB,iBAAiBloB,GACb,MAAMsB,EAAIxH,KAAKwuB,mBAAmBtoB,EAAGlG,KAAK8nB,UAAUvD,aACpD,OAAO,IAAIoD,GAAG3nB,KAAK8nB,UAA4B,KAAMtgB,IAgBzD,SAASinB,GAAGvoB,GACZ,MAAMsB,EAAI2c,IAAIje,EAAI8I,GAAG9I,EAAGyhB,KAAKG,WAAYrgB,EAAI,IAAIumB,GAAG9nB,EAAE4hB,WACtD,OAAOjF,GAAGrb,EAAG,CAAEtB,EAAE2hB,OAAQrd,MAAMhD,IAC3BO,EAAE,IAAMP,EAAElI,QACV,MAAMsL,EAAIpD,EAAE,GACZ,OAAO,IAAIkkB,GAAGxlB,EAAE4hB,UAAWrgB,EAAGvB,EAAE2hB,KAAMjd,EAAE6Q,kBAAoB7Q,EAAI,KAAM1E,EAAE0hB,cAe5E,SAAS8G,GAAGxoB,IACX,SAASA,GACN,GAAI,MAAmBA,EAAEwX,WAAa,IAAMxX,EAAEuX,gBAAgBne,OAAQ,MAAM,IAAIyJ,EAAEH,EAAG,0EADxF,EAEE1C,EAAI8I,GAAG9I,EAAGiiB,KAAKC,QAClB,MAAM5gB,EAAI2c,GAAGje,EAAE4hB,WAAYrgB,EAAI,IAAIumB,GAAG9nB,EAAE4hB,WACxC,OAAO1E,GAAG5b,EAAGtB,EAAEkiB,QAAQ5d,MAAMhD,IACzB,MAAMoD,EAAIpD,EAAEE,KAAKF,GAAK,IAAIwkB,GAAG9lB,EAAE4hB,UAAWrgB,EAAGD,EAAEvD,IAAKuD,EAAGtB,EAAE0hB,aACzD,MAAO,MAAmB1hB,EAAEkiB,OAAO1K,WAInC9S,EAAE+jB,UAAW,IAAIvC,GAAGlmB,EAAG0E,MAI/B,SAASgkB,GAAG1oB,EAAGsB,EAAGC,GACd,MAAMmD,EAAIkjB,IAAI5nB,EAAI8I,GAAG9I,EAAGyhB,KAAKC,UAAWpgB,EAAGC,GAAI4D,EAAI6e,GAAGD,GAAG/jB,EAAE4hB,WAAY,SAAU5hB,EAAE2hB,KAAMjd,EAAG,OAAS1E,EAAE0hB,UAAWngB,GAClH,OAAOwa,GAAGkC,GAAGje,EAAE4hB,WAAY,CAAEzc,EAAEoe,WAAWvjB,EAAE2hB,KAAM/I,GAAG+P,UAGzD,SAASC,GAAG5oB,EAAGsB,EAAGC,KAAMmD,GACpB,MAAMS,EAAI4e,IAAI/jB,EAAI8I,GAAG9I,EAAGyhB,KAAKG,WAGzB,IAAIzoB,EAER,OADAA,EAAI,iBAAoBmI,EAAIsD,EAAEtD,KAAOA,aAAaohB,GAAKuC,GAAG9f,EAAG,YAAanF,EAAE2hB,KAAMrgB,EAAGC,EAAGmD,GAAKqgB,GAAG5f,EAAG,YAAanF,EAAE2hB,KAAMrgB,GACjHya,GAAGkC,GAAGje,EAAE4hB,WAAY,CAAEzoB,EAAEoqB,WAAWvjB,EAAE2hB,KAAM/I,GAAGE,QAAO,MAc5D,SAAS+P,GAAG7oB,GACZ,OAAO+b,GAAGkC,IAAIje,EAAI8I,GAAG9I,EAAGyhB,KAAKG,WAAY,CAAE,IAAIrI,GAAGvZ,EAAE2hB,KAAM/I,GAAG+P,UAiB7D,SAASG,GAAG9oB,EAAGsB,GACf,MAAMC,EAAI8gB,GAAGriB,EAAI8I,GAAG9I,EAAG+hB,KAAMrd,EAAIkjB,GAAG5nB,EAAE0hB,UAAWpgB,GAAI6D,EAAI6e,GAAGD,GAAG/jB,EAAE4hB,WAAY,SAAUrgB,EAAEogB,KAAMjd,EAAG,OAASnD,EAAEmgB,UAAW,IACxH,OAAO3F,GAAGkC,GAAGje,EAAE4hB,WAAY,CAAEzc,EAAEoe,WAAWhiB,EAAEogB,KAAM/I,GAAGE,QAAO,MAAQxU,MAAI,IAAQ/C,IAsBhF,SAASwnB,KACT,OAAO,IAAIxE,GAAG,eAMd,SAASyE,KACT,OAAO,IAAItE,GAAG,mBAcd,SAASuE,MAAMjpB,GAGf,OAAO,IAAI2kB,GAAG,aAAc3kB,GAa5B,SAASkpB,MAAMlpB,GAGf,OAAO,IAAI6kB,GAAG,cAAe7kB,GAqB7B,SAASmpB,GAAGnpB,GACZ,OAAO,IAAI8kB,GAAG,YAAa9kB,GA0B3B,MAAMopB,GAENzsB,YAAYqD,EAAGsB,GACXxH,KAAK2rB,WAAazlB,EAAGlG,KAAKuvB,eAAiB/nB,EAAGxH,KAAKwvB,WAAa,GAAIxvB,KAAKyvB,YAAa,EACtFzvB,KAAK0vB,YAAczF,GAAG/jB,GAE1ByD,IAAIzD,EAAGsB,EAAGC,GACNzH,KAAK2vB,sBACL,MAAM/kB,EAAIglB,GAAG1pB,EAAGlG,KAAK2rB,YAAatgB,EAAIyiB,GAAGljB,EAAEgd,UAAWpgB,EAAGC,GAAIpI,EAAI6qB,GAAGlqB,KAAK0vB,YAAa,iBAAkB9kB,EAAEid,KAAMxc,EAAG,OAAST,EAAEgd,UAAWngB,GACzI,OAAOzH,KAAKwvB,WAAWluB,KAAKjC,EAAEoqB,WAAW7e,EAAEid,KAAM/I,GAAG+P,SAAU7uB,KAElEmiB,OAAOjc,EAAGsB,EAAGC,KAAMmD,GACf5K,KAAK2vB,sBACL,MAAMtkB,EAAIukB,GAAG1pB,EAAGlG,KAAK2rB,YAGb,IAAItsB,EACZ,OAAOA,EAAI,iBAAoBmI,EAAIsD,EAAEtD,KAAOA,aAAaohB,GAAKuC,GAAGnrB,KAAK0vB,YAAa,oBAAqBrkB,EAAEwc,KAAMrgB,EAAGC,EAAGmD,GAAKqgB,GAAGjrB,KAAK0vB,YAAa,oBAAqBrkB,EAAEwc,KAAMrgB,GAC7KxH,KAAKwvB,WAAWluB,KAAKjC,EAAEoqB,WAAWpe,EAAEwc,KAAM/I,GAAGE,QAAO,KAAOhf,KAOxDoW,OAAOlQ,GACVlG,KAAK2vB,sBACL,MAAMnoB,EAAIooB,GAAG1pB,EAAGlG,KAAK2rB,YACrB,OAAO3rB,KAAKwvB,WAAaxvB,KAAKwvB,WAAWxC,OAAO,IAAIvN,GAAGjY,EAAEqgB,KAAM/I,GAAG+P,SAAU7uB,KAazE6vB,SACH,OAAO7vB,KAAK2vB,sBAAuB3vB,KAAKyvB,YAAa,EAAIzvB,KAAKwvB,WAAWlwB,OAAS,EAAIU,KAAKuvB,eAAevvB,KAAKwvB,YAAcrmB,QAAQC,UAEzIumB,sBACI,GAAI3vB,KAAKyvB,WAAY,MAAM,IAAI1mB,EAAEN,EAAG,wEAI5C,SAASmnB,GAAG1pB,EAAGsB,GACX,IAAKtB,EAAI4E,EAAE5E,IAAI4hB,YAActgB,EAAG,MAAM,IAAIuB,EAAEZ,EAAG,uEAC/C,OAAOjC,EAeP,SAAS4pB,GAAG5pB,GACZ,MAAMsB,EAAI2c,GAAGje,EAAI8I,GAAG9I,EAAGkf,KACvB,OAAO,IAAIkK,GAAGppB,GAAIA,GAAK+b,GAAGza,EAAGtB,KAsB7B,MAAM6pB,GACNltB,YAAYqD,GACRlG,KAAKgwB,UAAY9pB,EAEjBlG,KAAKiwB,aAAe,IAAIvmB,IAAK1J,KAAKkwB,UAAY,GAAIlwB,KAAKmwB,WAAY,EAKnEnwB,KAAKowB,eAAiB,KAOtBpwB,KAAKqwB,YAAc,IAAIC,IAE3Bxf,aAAa5K,GACT,GAAIlG,KAAKuwB,wBAAyBvwB,KAAKkwB,UAAU5wB,OAAS,EAAG,MAAM,IAAIyJ,EAAEZ,EAAG,8EAC5E,MAAMX,QAAUqb,GAAG7iB,KAAKgwB,UAAW9pB,GACnC,OAAOsB,EAAEmF,SAASzG,GAAKlG,KAAKwwB,cAActqB,KAAMsB,EAEpDmC,IAAIzD,EAAGsB,GACHxH,KAAKywB,MAAMjpB,EAAEiiB,WAAWvjB,EAAGlG,KAAKof,aAAalZ,KAAMlG,KAAKqwB,YAAYla,IAAIjQ,EAAE8C,YAE9EmZ,OAAOjc,EAAGsB,GACN,IACIxH,KAAKywB,MAAMjpB,EAAEiiB,WAAWvjB,EAAGlG,KAAK0wB,sBAAsBxqB,KACxD,MAAOA,GACLlG,KAAKowB,eAAiBlqB,EAE1BlG,KAAKqwB,YAAYla,IAAIjQ,EAAE8C,YAE3BoN,OAAOlQ,GACHlG,KAAKywB,MAAM,IAAIhR,GAAGvZ,EAAGlG,KAAKof,aAAalZ,KAAMlG,KAAKqwB,YAAYla,IAAIjQ,EAAE8C,YAExE8H,eACI,GAAI9Q,KAAKuwB,wBAAyBvwB,KAAKowB,eAAgB,MAAMpwB,KAAKowB,eAClE,MAAMlqB,EAAIlG,KAAKiwB,aAEPjwB,KAAKkwB,UAAUvjB,SAASnF,IAC5BtB,EAAEkQ,OAAO5O,EAAEvD,IAAI+E,eAInB9C,EAAEyG,SAAO,CAAGzG,EAAGsB,KACX,MAAMC,EAAIyG,GAAGyiB,SAASnpB,GACtBxH,KAAKkwB,UAAU5uB,KAAK,IAAIoe,GAAGjY,EAAGzH,KAAKof,aAAa3X,cACzCwa,GAAGjiB,KAAKgwB,UAAWhwB,KAAKkwB,WAAYlwB,KAAKmwB,WAAY,EAEpEK,cAActqB,GACV,IAAIsB,EACJ,GAAItB,EAAEuV,kBAAmBjU,EAAItB,EAAEyU,YAAc,CACzC,IAAKzU,EAAEwV,eAAgB,MAAM5T,IAE7BN,EAAImL,GAAGpF,MAEX,MAAM9F,EAAIzH,KAAKiwB,aAAahjB,IAAI/G,EAAEjC,IAAI+E,YACtC,GAAIvB,GACA,IAAKD,EAAElB,QAAQmB,GAEf,MAAM,IAAIsB,EAAEL,EAAG,oDACZ1I,KAAKiwB,aAAatmB,IAAIzD,EAAEjC,IAAI+E,WAAYxB,GAK5C4X,aAAalZ,GAChB,MAAMsB,EAAIxH,KAAKiwB,aAAahjB,IAAI/G,EAAE8C,YAClC,OAAQhJ,KAAKqwB,YAAYza,IAAI1P,EAAE8C,aAAexB,EAAIsX,GAAGC,WAAWvX,GAAKsX,GAAG+P,OAIrE6B,sBAAsBxqB,GACzB,MAAMsB,EAAIxH,KAAKiwB,aAAahjB,IAAI/G,EAAE8C,YAG1B,IAAKhJ,KAAKqwB,YAAYza,IAAI1P,EAAE8C,aAAexB,EAAG,CAClD,GAAIA,EAAElB,QAAQqM,GAAGpF,OAUjB,MAAM,IAAIxE,EAAEZ,EAAG,+CAEH,OAAO2W,GAAGC,WAAWvX,GAIrC,OAAOsX,GAAGE,QAAO,GAErByR,MAAMvqB,GACFlG,KAAKuwB,wBAAyBvwB,KAAKkwB,UAAU5uB,KAAK4E,GAEtDqqB,0BAkBA,MAAMK,GAAK,CACXC,YAAa,GAuBjB,MAAMC,GACFjuB,YAAYqD,EAAGsB,EAAGC,EAAGmD,EAAGS,GACpBrL,KAAK+wB,WAAa7qB,EAAGlG,KAAKgwB,UAAYxoB,EAAGxH,KAAKykB,QAAUhd,EAAGzH,KAAKgxB,eAAiBpmB,EACjF5K,KAAKixB,SAAW5lB,EAAGrL,KAAK2V,GAAKlO,EAAEopB,YAAa7wB,KAAKkW,GAAK,IAAIkL,GAAGphB,KAAK+wB,WAAY,qBAElBG,MAC5DlxB,KAAK2V,IAAM,EAAG3V,KAAKuW,KAEvBA,KACIvW,KAAKkW,GAAGpK,aACJ,MAAM5F,EAAI,IAAI6pB,GAAG/vB,KAAKgwB,WAAYxoB,EAAIxH,KAAK2W,GAAGzQ,GAC9CsB,GAAKA,EAAEgD,MAAMhD,IACTxH,KAAK+wB,WAAWI,kBAAkB,IAAMjrB,EAAE2pB,SAASrlB,WAC/CxK,KAAKixB,SAAS7nB,QAAQ5B,MACtBua,OAAO7b,IACPlG,KAAKqX,GAAGnR,WAEZ6b,OAAO7b,IACPlG,KAAKqX,GAAGnR,SAIpByQ,GAAGzQ,GACC,IACI,MAAMsB,EAAIxH,KAAKgxB,eAAe9qB,GAC9B,OAAQgJ,GAAG1H,IAAMA,EAAEua,OAASva,EAAEgD,KAAOhD,GAAKxH,KAAKixB,SAAS5nB,OAAO5I,MAAM,+CACrE,MACF,MAAOyF,GAEL,OAAOlG,KAAKixB,SAAS5nB,OAAOnD,GAAI,MAGxCmR,GAAGnR,GACClG,KAAK2V,GAAK,GAAK3V,KAAKuX,GAAGrR,IAAMlG,KAAK2V,IAAM,EAAG3V,KAAK+wB,WAAWI,kBAAkB,KAAOnxB,KAAKuW,KACzFpN,QAAQC,cAAgBpJ,KAAKixB,SAAS5nB,OAAOnD,GAEjDqR,GAAGrR,GACC,GAAI,kBAAoBA,EAAEhD,KAAM,CAG5B,MAAMsE,EAAItB,EAAEpD,KACZ,MAAO,YAAc0E,GAAK,wBAA0BA,IAOpD,SAAStB,GACL,OAAQA,GACN,QACE,OAAO4B,IAET,KAAKG,EACL,KAAKC,EACL,KAAKE,EACL,KAAKI,EACL,KAAKK,EACL,KAAKC,EAGe,KAAKP,EACvB,OAAO,EAET,KAAKJ,EACL,KAAKE,EACL,IAzrLwG,iBA0rLxG,KAAKC,EACL,KAAKG,EAIe,KAAKC,EACzB,KAAKC,EACL,KAAKC,EACL,IAlsL8T,YAmsL5T,OAAO,GA5Bf,CA8BEpB,GAEN,OAAO,GAoB2D,SAAS4pB,KAG/E,MAAO,oBAAsBnN,SAAWA,SAAW,KA6BnD,MAAMoN,GACNxuB,YAAYqD,EAAGsB,EAAGC,EAAGmD,EAAGS,GACpBrL,KAAK+wB,WAAa7qB,EAAGlG,KAAKqhB,QAAU7Z,EAAGxH,KAAKsxB,aAAe7pB,EAAGzH,KAAKoc,GAAKxR,EAAG5K,KAAKuxB,gBAAkBlmB,EAClGrL,KAAKixB,SAAW,IAAIhoB,EAAGjJ,KAAKwK,KAAOxK,KAAKixB,SAAS/nB,QAAQsB,KAAK8Z,KAAKtkB,KAAKixB,SAAS/nB,SAIjFlJ,KAAKixB,SAAS/nB,QAAQ6Y,OAAO7b,QAe1B+F,yBAAyB/F,EAAGsB,EAAGC,EAAGmD,EAAGS,GACxC,MAAMhM,EAAIwG,KAAKD,MAAQ6B,EAAGoD,EAAI,IAAIwmB,GAAGnrB,EAAGsB,EAAGnI,EAAGuL,EAAGS,GACjD,OAAOR,EAAEd,MAAMtC,GAAIoD,EAKhBd,MAAM7D,GACTlG,KAAKwxB,YAAcC,YAAY,IAAMzxB,KAAK0xB,sBAAuBxrB,GAK9Dwb,YACH,OAAO1hB,KAAK0xB,qBAQTnQ,OAAOrb,GACV,OAASlG,KAAKwxB,cAAgBxxB,KAAK2xB,eAAgB3xB,KAAKixB,SAAS5nB,OAAO,IAAIN,EAAEd,EAAG,uBAAyB/B,EAAI,KAAOA,EAAI,OAE7HwrB,qBACI1xB,KAAK+wB,WAAWI,sBAAwB,OAASnxB,KAAKwxB,aAAexxB,KAAK2xB,eAC1E3xB,KAAKoc,KAAK5R,MAAMtE,GAAKlG,KAAKixB,SAAS7nB,QAAQlD,MAAQiD,QAAQC,YAE/DuoB,eACI,OAAS3xB,KAAKwxB,cAAgBxxB,KAAKuxB,gBAAgBvxB,MAAO2xB,aAAa3xB,KAAKwxB,aAC5ExxB,KAAKwxB,YAAc,OAmBvB,MAAMI,GACN/uB,cAEI7C,KAAK4X,GAAKzO,QAAQC,UAGlBpJ,KAAK6X,GAAK,GAGV7X,KAAKgY,IAAK,EAGVhY,KAAKoY,GAAK,GAEVpY,KAAKsY,GAAK,KAGVtY,KAAKyY,IAAK,EAEVzY,KAAK0Y,IAAK,EAEV1Y,KAAK2Y,GAAK,GAEV3Y,KAAKkW,GAAK,IAAIkL,GAAGphB,KAAM,qBAIvBA,KAAKuZ,GAAK,KACN,MAAMrT,EAAIkrB,KACVlrB,GAAKqB,EAAE,aAAc,+BAAiCrB,EAAE2rB,iBAAkB7xB,KAAKkW,GAAG1I,KAEtF,MAAMtH,EAAIkrB,KACVlrB,GAAK,mBAAqBA,EAAE4rB,kBAAoB5rB,EAAE4rB,iBAAiB,mBAAoB9xB,KAAKuZ,IAE5FwY,qBACA,OAAO/xB,KAAKgY,GAKTmZ,iBAAiBjrB,GAEpBlG,KAAKgyB,QAAQ9rB,GAEjB+rB,oCAAoC/rB,GAChClG,KAAKyZ,KAELzZ,KAAK0Z,GAAGxT,GAEZgsB,oBAAoBhsB,GAChB,IAAKlG,KAAKgY,GAAI,CACVhY,KAAKgY,IAAK,EAAIhY,KAAK0Y,GAAKxS,IAAK,EAC7B,MAAMsB,EAAI4pB,KACV5pB,GAAK,mBAAqBA,EAAE2qB,qBAAuB3qB,EAAE2qB,oBAAoB,mBAAoBnyB,KAAKuZ,KAG1GyY,QAAQ9rB,GACJ,GAAIlG,KAAKyZ,KAAMzZ,KAAKgY,GAEpB,OAAO,IAAI7O,kBAIH,MAAM3B,EAAI,IAAIyB,EACtB,OAAOjJ,KAAK0Z,IAAI,IAAM1Z,KAAKgY,IAAMhY,KAAK0Y,GAAKvP,QAAQC,WAAalD,IAAIsE,KAAKhD,EAAE4B,QAAS5B,EAAE6B,QACtF7B,EAAE0B,WAAWsB,MAAI,IAAQhD,EAAE0B,UAE/Bc,iBAAiB9D,GACblG,KAAKmxB,kBAAgB,KAASnxB,KAAK6X,GAAGvW,KAAK4E,GAAIlG,KAAK4Z,QAKjD9I,WACH,GAAI,IAAM9Q,KAAK6X,GAAGvY,OAAQ,CACtB,UACUU,KAAK6X,GAAG,KAAM7X,KAAK6X,GAAGua,QAASpyB,KAAKkW,GAAGoL,QAC/C,MAAOpb,GACL,IAkBA,SAASA,GAGL,MAAO,8BAAgCA,EAAEhD,KAH7C,CAoBXgD,GAAI,MAAMA,EAEiBqB,EAAE,aAAc,0CAA4CrB,GAEhFlG,KAAK6X,GAAGvY,OAAS,GAWjBU,KAAKkW,GAAGpK,GAAC,IAAQ9L,KAAK4Z,QAG9BF,GAAGxT,GACC,MAAMsB,EAAIxH,KAAK4X,GAAGpN,MAAI,KAASxK,KAAKyY,IAAK,EAAIvS,IAAI6b,OAAO7b,IACpDlG,KAAKsY,GAAKpS,EAAGlG,KAAKyY,IAAK,EACvB,MAAMjR,EAMN,SAAStB,GACL,IAAIsB,EAAItB,EAAEnD,SAAW,GAErB,OADAmD,EAAEmsB,QAAU7qB,EAAItB,EAAEmsB,MAAMC,SAASpsB,EAAEnD,SAAWmD,EAAEmsB,MAAQnsB,EAAEnD,QAAU,KAAOmD,EAAEmsB,OACtE7qB,EAHX,CA6BPtB,GAIO,MAAM9G,EAAE,6BAA8BoI,GAAItB,KAC1CsE,MAAMtE,IAAMlG,KAAKyY,IAAK,EAAIvS,QAC9B,OAAOlG,KAAK4X,GAAKpQ,EAAGA,EAExBia,kBAAkBvb,EAAGsB,EAAGC,GACpBzH,KAAKyZ,KAELzZ,KAAK2Y,GAAGjL,QAAQxH,IAAM,IAAMsB,EAAI,GAChC,MAAMoD,EAAIymB,GAAGkB,kBAAkBvyB,KAAMkG,EAAGsB,EAAGC,GAAIvB,GAAKlG,KAAK6Z,GAAG3T,KAC5D,OAAOlG,KAAKoY,GAAG9W,KAAKsJ,GAAIA,EAE5B6O,KACIzZ,KAAKsY,IAAMxQ,IAEf0qB,6BAIO1hB,WAKH,IAAI5K,EACJ,GACIA,EAAIlG,KAAK4X,SAAU1R,QACdA,IAAMlG,KAAK4X,IAKjBmC,GAAG7T,GACN,IAAK,MAAMsB,KAAKxH,KAAKoY,GAAI,GAAI5Q,EAAE6Z,UAAYnb,EAAG,OAAO,EACrD,OAAO,EAQJ8T,GAAG9T,GAEN,OAAOlG,KAAK8Z,KAAKtP,WAEbxK,KAAKoY,GAAG3B,MAAI,CAAGvQ,EAAGsB,IAAMtB,EAAEorB,aAAe9pB,EAAE8pB,eAC3C,IAAK,MAAM9pB,KAAKxH,KAAKoY,GAAI,GAAI5Q,EAAEka,YAAa,QAAoBxb,GAAKsB,EAAE6Z,UAAYnb,EAAG,MACtF,OAAOlG,KAAK8Z,QAKbG,GAAG/T,GACNlG,KAAK2Y,GAAGrX,KAAK4E,GAE4C2T,GAAG3T,GAE5D,MAAMsB,EAAIxH,KAAKoY,GAAG1K,QAAQxH,GAC1BlG,KAAKoY,GAAGqa,OAAOjrB,EAAG,IAI1B,MAAMkrB,GAEF7vB,YAAYqD,EAAGsB,GACXxH,KAAK2rB,WAAazlB,EAAGlG,KAAK2yB,aAAenrB,EAAGxH,KAAK0vB,YAAczF,GAAG/jB,GAO/D+G,IAAI/G,GACP,MAAMsB,EAAIooB,GAAG1pB,EAAGlG,KAAK2rB,YAAalkB,EAAI,IAAIumB,GAAGhuB,KAAK2rB,YAClD,OAAO3rB,KAAK2yB,aAAaC,OAAO,CAAEprB,EAAEqgB,OAAQrd,MAAMtE,IAC9C,IAAKA,GAAK,IAAMA,EAAE5G,OAAQ,OAAOwI,IACjC,MAAM8C,EAAI1E,EAAE,GACZ,GAAI0E,EAAE6Q,kBAAmB,OAAO,IAAIiQ,GAAG1rB,KAAK2rB,WAAYlkB,EAAGmD,EAAE3G,IAAK2G,EAAGpD,EAAEogB,WACvE,GAAIhd,EAAE8Q,eAAgB,OAAO,IAAIgQ,GAAG1rB,KAAK2rB,WAAYlkB,EAAGD,EAAEqgB,KAAM,KAAMrgB,EAAEogB,WACxE,MAAM9f,OAGd6B,IAAIzD,EAAGsB,EAAGC,GACN,MAAMmD,EAAIglB,GAAG1pB,EAAGlG,KAAK2rB,YAAatgB,EAAIyiB,GAAGljB,EAAEgd,UAAWpgB,EAAGC,GAAIpI,EAAI6qB,GAAGlqB,KAAK0vB,YAAa,kBAAmB9kB,EAAEid,KAAMxc,EAAG,OAAST,EAAEgd,UAAWngB,GAC1I,OAAOzH,KAAK2yB,aAAahpB,IAAIiB,EAAEid,KAAMxoB,GAAIW,KAE7CmiB,OAAOjc,EAAGsB,EAAGC,KAAMmD,GACf,MAAMS,EAAIukB,GAAG1pB,EAAGlG,KAAK2rB,YAGb,IAAItsB,EACZ,OAAOA,EAAI,iBAAoBmI,EAAIsD,EAAEtD,KAAOA,aAAaohB,GAAKuC,GAAGnrB,KAAK0vB,YAAa,qBAAsBrkB,EAAEwc,KAAMrgB,EAAGC,EAAGmD,GAAKqgB,GAAGjrB,KAAK0vB,YAAa,qBAAsBrkB,EAAEwc,KAAMrgB,GAC/KxH,KAAK2yB,aAAaxQ,OAAO9W,EAAEwc,KAAMxoB,GAAIW,KAOlCoW,OAAOlQ,GACV,MAAMsB,EAAIooB,GAAG1pB,EAAGlG,KAAK2rB,YACrB,OAAO3rB,KAAK2yB,aAAavc,OAAO5O,EAAEqgB,MAAO7nB,MAsB7C,SAAS6yB,GAAG3sB,EAAGsB,EAAGC,GAClB,MAAMmD,EAAIuZ,GAAGje,EAAI8I,GAAG9I,EAAGkf,KAAM/Z,EAAIlI,OAAO+W,OAAO/W,OAAO+W,OAAO,GAAI0W,IAAKnpB,IACrE,SAASvB,GACN,GAAIA,EAAE2qB,YAAc,EAAG,MAAM,IAAI9nB,EAAEZ,EAAG,mCADzC,CAECkD,GACF,MAAMhM,EAAI,IAAI4J,EACd,OAAO,IAAI6nB,GAAG,IAAIc,GAAIhnB,EAAGS,GAAI5D,GAAKD,EAAE,IAAIkrB,GAAGxsB,EAAGuB,KAAMpI,GAAG6xB,MAAO7xB,EAAE6J,QAWhEvC,EACF,GAAG0E,SAAW5D,EAAE,IEn0ML,MAiBX5E,YACWK,EACA4vB,EACAtpB,GAFAxJ,KAAIkD,KAAJA,EACAlD,KAAe8yB,gBAAfA,EACA9yB,KAAIwJ,KAAJA,EAnBXxJ,KAAiB+yB,mBAAG,EAIpB/yB,KAAYgzB,aAAe,GAE3BhzB,KAAAizB,kBAA2C,OAE3CjzB,KAAiBkzB,kBAAwC,KAczDC,qBAAqBC,GAEnB,OADApzB,KAAKizB,kBAAoBG,EAClBpzB,KAGTqzB,qBAAqBN,GAEnB,OADA/yB,KAAK+yB,kBAAoBA,EAClB/yB,KAGTszB,gBAAgBC,GAEd,OADAvzB,KAAKgzB,aAAeO,EACbvzB,KAGTwzB,2BAA2BC,GAEzB,OADAzzB,KAAKkzB,kBAAoBO,EAClBzzB,OF2xMa,kBAAmB,CAACkG,GAAIue,QAASjd,MACrD,MAAMC,EAAIvB,EAAEwtB,YAAY,OAAOjN,eAAgB7b,EAAI,IAAIwa,GAAG3d,EAAG,IAAI4C,EAAEnE,EAAEwtB,YAAY,kBAAmB,IAAIxoB,EAAEhF,EAAEwtB,YAAY,wBACxH,OAAOlsB,GAAKoD,EAAE+a,aAAane,GAAIoD,IAC/B,WAEJA,EAAE,iBAAkB,SAAU,IAAKA,EAAE,iBAAkB,SAAU","preExistingComment":"firebase-firestore-lite.js.map"}